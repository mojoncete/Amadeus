# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 74 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 4E A3     	call Pinta_disparos_Amadeus
  74  82F6 CD 19 A0     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 9D 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 4C 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 9B 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 9B 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 6A 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 04 40        Pos_inicio_entidad1	defw $4004	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  96+ 8A63
  97+ 8A63              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  98+ 8A63
  99+ 8A63              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 100+ 8A63              ;                               Izquierda_y_subiendo+8 (11)
 101+ 8A63              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 102+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 103+ 8A63              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 104+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 105+ 8A63              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 106+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 107+ 8A63              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 108+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 109+ 8A63              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 110+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 111+ 8A63              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 112+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 113+ 8A63              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 114+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 115+ 8A63
 116+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 117+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 118+ 8A6B
 119+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 120+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 120+ 8A73 08 00
 121+ 8A75
 122+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 123+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 123+ 8A7D 0F FE
 124+ 8A7F
 125+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 126+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 127+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 128+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 129+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 130+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 131+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 132+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 133+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 134+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 135+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 136+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 137+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 138+ 8AB3
 139+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 140+ 8AB7 11 11 91 FD      db $11,$11,$91,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 140+ 8ABB 07 00
 141+ 8ABD
 142+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 143+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 143+ 8AC5 02 00
 144+ 8AC7
 145+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 146+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 146+ 8ACF 04 00
 147+ 8AD1
 148+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 149+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 149+ 8AD9 08 00
 150+ 8ADB
 151+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 152+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 152+ 8AE3 02 00
 153+ 8AE5
 154+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 155+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 155+ 8AED 06 00
 156+ 8AEF
 157+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 158+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 158+ 8AF7 06 00
 159+ 8AF9
 160+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 161+ 8AF9
 162+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 163+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 164+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 165+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 166+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 167+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 168+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 169+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 170+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 171+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 172+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 173+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 174+ 8B29
 175+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 176+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 177+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 178+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 179+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 180+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 181+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 182+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 183+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 184+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 185+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 186+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 187+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 188+ 8B5D
 189+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 190+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,8,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 190+ 8B65 08 00
 191+ 8B67
 192+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 193+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 193+ 8B6F 02 00
 194+ 8B71
 195+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 196+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 196+ 8B79 04 00
 197+ 8B7B
 198+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 199+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 199+ 8B83 08 00
 200+ 8B85
 201+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 202+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 202+ 8B8D 02 00
 203+ 8B8F
 204+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 205+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 205+ 8B97 06 00
 206+ 8B99
 207+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 208+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 208+ 8BA1 06 00
 209+ 8BA3
 210+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 211+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 212+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 213+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 214+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 215+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 216+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 217+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 218+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 219+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 220+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 221+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 222+ 8BD3
 223+ 8BD3
 224+ 8BD3
 225+ 8BD3
 226+ 8BD3
 227+ 8BD3
 228+ 8BD3
 229+ 8BD3
 230+ 8BD3
 231+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 F0 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 14           Nivel_1 db 20									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 01 01 01 01  	db 1,1,1,1,1
  19+ 8BEF 01
  20+ 8BF0
  21+ 8BF0
  22+ 8BF0 0C           Nivel_2 db 12									; Nº de entidades.
  23+ 8BF1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8BF5 01 02
  24+ 8BF7 02 01 01 01  	db 2,1,1,1,1,2
  24+ 8BFB 01 02
  25+ 8BFD
# file closed: Niveles.asm
 150  8BFD
 151  8BFD              ; --------------------------------------------------------------------------------
 152  8BFD              ;
 153  8BFD              ; 12/05/24
 154  8BFD              ;
 155  8BFD              ; Parámetros DRAW.
 156  8BFD              ;
 157  8BFD
 158  8BFD              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BFD
 160  8BFD 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BFE              ;															- Patrón de movimiento.
 162  8BFE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8C00
 165  8C00 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8C01              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8C01
 168  8C01              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8C01              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8C01              ; Ejemplos.
 171  8C01
 172  8C01              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8C01              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8C01              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8C01              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8C01              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8C01
 178  8C01 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8C02              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8C02              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8C02
 182  8C02 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8C04              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8C04
 185  8C04 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C06
 187  8C06              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C06
 189  8C06 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C08              ;														; _palabras que componen el "movimiento_masticado".
 191  8C08
 192  8C08              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C08
 194  8C08 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C09              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C09              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C09              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C09              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C09
 200  8C09 00           Ctrl_2 db 0
 201  8C0A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C0A              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C0A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C0A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C0A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C0A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C0A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C0A              ;
 209  8C0A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C0A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C0A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C0A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C0A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C0A              ;														BIT 4, ???
 215  8C0A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C0A
 217  8C0A 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C0B              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C0B              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C0B              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C0B              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C0B              ;
 223  8C0B              ; 														DESCRIPCIÖN:
 224  8C0B              ;
 225  8C0B              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C0B              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C0B              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C0B              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C0B              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C0B              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C0B              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C0B              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C0B              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C0B              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C0B              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C0B              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C0B              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C0B              ;
 239  8C0B              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C0B              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C0B              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C0B
 243  8C0B              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C0B
 245  8C0B 00           Filas db 0												; Filas. [DRAW]
 246  8C0C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C0D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C11
 250  8C11              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C11
 252  8C11 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C12              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C12              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C12
 256  8C12              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C12
 258  8C12              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C12              ;
 260  8C12              ;	COLORES: 0 ..... NEGRO
 261  8C12              ;    		 1 ..... AZUL
 262  8C12              ; 			 2 ..... ROJO
 263  8C12              ;			 3 ..... MAGENTA
 264  8C12              ; 			 4 ..... VERDE
 265  8C12              ; 			 5 ..... CIAN
 266  8C12              ;			 6 ..... AMARILLO
 267  8C12              ; 			 7 ..... BLANCO
 268  8C12
 269  8C12 00 00        Indice_Sprite_der defw 0
 270  8C14 00 00        Indice_Sprite_izq defw 0
 271  8C16 00 00        Puntero_DESPLZ_der defw 0
 272  8C18 00 00        Puntero_DESPLZ_izq defw 0
 273  8C1A
 274  8C1A 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C1C 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C1D 00           Columnas db 0
 277  8C1E 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C20              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C20 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C21
 281  8C21              ; variables de control general.
 282  8C21
 283  8C21 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C22
 285  8C22              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C22
 287  8C22              Perfiles_de_velocidad
 288  8C22
 289  8C22 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C23 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C24 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C25 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C26
 294  8C26              ; Contadores de 16 bits.
 295  8C26
 296  8C26 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C28 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C2A 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C2C 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C2E
 301  8C2E              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C2E
 303  8C2E 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C30 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C32 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C34              ;
 307  8C34              ;
 308  8C34 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C35              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C35              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C35 00           Incrementa_puntero_backup db 0
 312  8C36 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C37              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C37 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C38 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C39 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C3A              ;
 318  8C3A              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C3A              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C3A              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C3A              ;
 322  8C3A              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C3A              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C3A              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C3A              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C3A              ;
 327  8C3A              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C3A              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C3A              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C3A
 331  8C3A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C3B
 333  8C3B              ;														DESCRIPCIÓN:
 334  8C3B              ;
 335  8C3B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C3B              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C3B              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C3B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C3B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C3B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C3B
 342  8C3B              ;														BIT 3, Recarga de nueva oleada.
 343  8C3B              ;														BIT 4, Recarga de nueva oleada.
 344  8C3B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C3B              ;														BIT 6, **** Frame completo.
 346  8C3B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C3B
 348  8C3B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C3D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C3D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C3D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C3D
 353  8C3D              ; Gestión de ENTIDADES y CAJAS.
 354  8C3D
 355  8C3D 00 00        Puntero_store_caja defw 0
 356  8C3F 00 00        Puntero_restore_caja defw 0
 357  8C41 00 00        Indice_restore_caja defw 0
 358  8C43 00 00        Puntero_indice_master defw 0
 359  8C45
 360  8C45 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C46 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C47 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C48
 364  8C48 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C4A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C4C              ;														; _ puntero (Indice_entidades).
 367  8C4C
 368  8C4C              ;---------------------------------------------------------------------------------------------------------------
 369  8C4C              ;
 370  8C4C              ;	13/10/24
 371  8C4C              ;
 372  8C4C              ;	Álbumes.
 373  8C4C
 374  8C4C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C4E              ;														; _variable para almacenar lo posición del puntero_
 376  8C4E              ; 														; _de pila, SP.
 377  8C4E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C50              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C50
 380  8C50              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C50
 382  8C50 00 00        Album_de_pintado defw 0
 383  8C52 00 00        Album_de_borrado defw 0
 384  8C54 00 00        Album_de_pintado_Amadeus defw 0
 385  8C56 00 00        Album_de_borrado_Amadeus defw 0
 386  8C58
 387  8C58 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C5A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C5C
 390  8C5C 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C5E 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C60
 393  8C60
 394  8C60 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C62
 396  8C62 00           Num_de_bytes_album_de_disparos db 0
 397  8C63 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C64
 399  8C64 07           Numero_de_disparos_de_entidades db 7
 400  8C65
 401  8C65 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C66 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C67
 404  8C67 00 00        Techo_Scanlines_album defw 0
 405  8C69 00 00        Techo_Scanlines_album_2 defw 0
 406  8C6B 00           Switch db 0
 407  8C6C 00 00        Techo defw 0
 408  8C6E 00 00        Scanlines_album_SP defw 0
 409  8C70 00 89        India_SP defw Tabla_de_pintado
 410  8C72 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C74
 412  8C74 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C75              ;
 414  8C75              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C75              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C75              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C75              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C75              ;																Habilita el borrado/pintado de sprites.
 419  8C75              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C75              ;																_ a la baja.
 421  8C75              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C75              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C75              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C75              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C75              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C75              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C75
 428  8C75 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C76              ;
 430  8C76              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C76
 432  8C76 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C77              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C77              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C77
 436  8C77              ; Gestión de Disparos.
 437  8C77
 438  8C77 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C79 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C7B 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C7C
 442  8C7C              ;
 443  8C7C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C7C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C7C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C7C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C7C
 448  8C7C
 449  8C7C
 450  8C7C
 451  8C7C
 452  8C7C
 453  8C7C
 454  8C7C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C7E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C7E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C7E
 458  8C7E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C80              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C80 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C83              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C83 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C86              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C86
 465  8C86              ;---------------------------------------------------------------------------------------------------------------
 466  8C86
 467  8C86              ; Relojes y temporizaciones.
 468  8C86
 469  8C86 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C87 05           Clock_explosion_Amadeus db 5
 471  8C88 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C89
 473  8C89 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C8B F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C8D 00           Numero_rnd_disparos db 0
 476  8C8E
 477  8C8E 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C90 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C91 A0           CLOCK_disparos_de_entidades db $a0
 480  8C92
 481  8C92              ;---------------------------------------------------------------------------------------------------------------
 482  8C92
 483  8C92              ; Gestión de NIVELES.
 484  8C92
 485  8C92 00           Nivel db 0												; Nivel actual del juego.
 486  8C93 00 00        Puntero_indice_NIVELES defw 0
 487  8C95 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C97              ; 														; _ que definen el NIVEL.
 489  8C97
 490  8C97              ; ---------------------------------------------------------------------------------------------------------------
 491  8C97
 492  8C97              ; Temporizaciones Shield.
 493  8C97
 494  8C97 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C9B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C9D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C9E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C9F 00           Shield_3 db 0
 499  8CA0
 500  8CA0 07           Lives db 7
 501  8CA1
 502  8CA1              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8CA1              ;
 504  8CA1              ;	13/11/24
 505  8CA1
 506  8CA1              START
 507  8CA1
 508  8CA1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8CA4 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8CA6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8CA8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8CAA F3           	DI
 513  8CAB
 514  8CAB              ; Limpiamos pantalla.
 515  8CAB
 516  8CAB 3E 07        	ld a,%00000111
 517  8CAD CD E3 95     	call Cls
 518  8CB0 CD 41 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8CB3
 520  8CB3              INICIALIZACION
 521  8CB3
 522  8CB3 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8CB5 CD DC 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CB8 CD 38 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CBB 6F           	ld l,a
 526  8CBC 26 00        	ld h,0
 527  8CBE 22 8E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CC1
 529  8CC1              ;	Inicia los álbumes de líneas.
 530  8CC1
 531  8CC1 CD 93 91     	call Inicia_albumes_de_lineas
 532  8CC4 CD A3 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CC7 CD B0 91     	call Inicia_albumes_de_disparos
 534  8CCA
 535  8CCA              ;	Inicia 1er Nivel.
 536  8CCA
 537  8CCA CD 3E 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CCD CD 0C 94     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CD0              ;														   _reponiendo entidades eliminadas.
 540  8CD0 CD 72 94     	call Prepara_Cajas_de_Entidades
 541  8CD3
 542  8CD3 CD C3 94     	call Inicia_Amadeus
 543  8CD6              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 544  8CD6              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 545  8CD6              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 546  8CD6 11 AE 89     	ld de,Amadeus_BOX
 547  8CD9 CD B2 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 548  8CDC CD 06 95     	call Limpiamos_bandeja_DRAW
 549  8CDF
 550  8CDF              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 551  8CDF
 552  8CDF 06 3C        	ld b,60
 553  8CE1 CD 6B 9E     2 call Amadeus_a_izquierda
 554  8CE4 10 FB        	djnz 2B
 555  8CE6
 556  8CE6 CD 71 91     	call Genera_datos_de_impresion_Amadeus
 557  8CE9
 558  8CE9              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 559  8CE9
 560  8CE9 CD CC 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 561  8CEC
 562  8CEC CD 4C 92     	call Inicia_Shield
 563  8CEF
 564  8CEF 2A 6E 8C     6 ld hl,(Scanlines_album_SP)
 565  8CF2 22 67 8C     	ld (Techo_Scanlines_album),hl
 566  8CF5
 567  8CF5 2A 52 8C     	ld hl,(Album_de_borrado)
 568  8CF8 22 6E 8C     	ld (Scanlines_album_SP),hl
 569  8CFB
 570  8CFB 21 00 89     	ld hl,Tabla_de_pintado
 571  8CFE 22 70 8C     	ld (India_SP),hl
 572  8D01
 573  8D01 21 74 8C     	ld hl,Ctrl_3
 574  8D04 CB C6        	set 0,(hl) 											; Indica Frame completo.
 575  8D06 CB D6        	set 2,(hl)
 576  8D08 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 577  8D0A
 578  8D0A FB           	ei 													; Ha de apuntar a $5c3a.
 579  8D0B
 580  8D0B 76           	halt
 581  8D0C
 582  8D0C              ; ------------------------------------
 583  8D0C
 584  8D0C              Main
 585  8D0C              ;
 586  8D0C              ; 07/11/24.
 587  8D0C
 588  8D0C              ; Gestión de disparos.
 589  8D0C
 590  8D0C CD 0D 8F     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 591  8D0F CD 5F A0     	call Motor_de_disparos_entidades
 592  8D12 CD FA A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 593  8D15
 594  8D15              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 595  8D15              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 596  8D15              ; Este hecho lo indica el bit2 de (Impacto2).
 597  8D15
 598  8D15 CD 9B A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 599  8D18
 600  8D18              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 601  8D18
 602  8D18 21 91 8C     	ld hl,CLOCK_disparos_de_entidades
 603  8D1B 35           	dec (hl)
 604  8D1C CC 4E 8E     	call z,Autoriza_disparo_de_entidades
 605  8D1F
 606  8D1F 2A 8E 8C     	ld hl,(Clock_next_entity)
 607  8D22 ED 4B 78 5C  	ld bc,(FRAMES)
 608  8D26 A7           	and a
 609  8D27 ED 42        	sbc hl,bc
 610  8D29 20 21        	jr nz,1F
 611  8D2B
 612  8D2B              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 613  8D2B
 614  8D2B CD 38 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 615  8D2E CD 4F 8F     	call Define_Clock_next_entity
 616  8D31
 617  8D31              ; GESTIÓN DE ENTIDADES.
 618  8D31
 619  8D31              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 620  8D31              ; _ (Clock_next_entity) para la siguiente entidad.
 621  8D31
 622  8D31              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 623  8D31              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 624  8D31              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 625  8D31
 626  8D31 21 46 8C     	ld hl,Numero_parcial_de_entidades
 627  8D34 46           	ld b,(hl)
 628  8D35
 629  8D35 04           	inc b
 630  8D36 05           	dec b
 631  8D37
 632  8D37 F3           	di
 633  8D38 28 FE        	jr z,$													;! Nivel superado !!!!!
 634  8D3A FB           	ei
 635  8D3B
 636  8D3B 3A 47 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 637  8D3E B8           	cp b
 638  8D3F 28 0B        	jr z,1F
 639  8D41 30 09        	jr nc,1F
 640  8D43
 641  8D43              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 642  8D43
 643  8D43 3C           	inc a
 644  8D44 32 47 8C     	ld (Entidades_en_curso),a
 645  8D47
 646  8D47 21 75 8C     	ld hl,Ctrl_4
 647  8D4A CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 648  8D4C
 649  8D4C              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 650  8D4C
 651  8D4C              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 652  8D4C              ;	call Define_Clock_next_entity
 653  8D4C
 654  8D4C 3A 47 8C     1 ld a,(Entidades_en_curso)
 655  8D4F A7           	and a
 656  8D50 CA F4 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 657  8D53 47           	ld b,a													; No hay entidades que gestionar.
 658  8D54
 659  8D54              ; ( Código que ejecutamos con cada entidad: ).
 660  8D54
 661  8D54              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 662  8D54              ;
 663  8D54              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 664  8D54
 665  8D54 21 00 89     	ld hl,Tabla_de_pintado
 666  8D57 22 70 8C     	ld (India_SP),hl
 667  8D5A
 668  8D5A 21 74 8C     	ld hl,Ctrl_3
 669  8D5D CB D6        	set 2,(hl)
 670  8D5F CD E2 8E     	call Change
 671  8D62
 672  8D62 C5           2 push bc 												; Nº de entidades en curso.
 673  8D63
 674  8D63 DD 2A 3D 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 675  8D67 CD 1D 92     	call Salta_caja_de_entidades_vacia
 676  8D6A
 677  8D6A              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 678  8D6A
 679  8D6A DD 7E 00     	ld a,(ix+0)
 680  8D6D CB 7F        	bit 7,a
 681  8D6F 28 11        	jr z,5F
 682  8D71
 683  8D71              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 684  8D71
 685  8D71 21 75 8C     	ld hl,Ctrl_4
 686  8D74 CB 46        	bit 0,(hl)
 687  8D76 CC 2C 92     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 688  8D79 28 E8        	jr z,6B
 689  8D7B
 690  8D7B CB 86        	res 0,(hl)											; Restaura bit "despertador".
 691  8D7D CB BF        	res 7,a
 692  8D7F DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 693  8D82
 694  8D82              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 695  8D82              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 696  8D82
 697  8D82 3A 7B 8C     5 ld a,(Impacto2)
 698  8D85 CB 5F        	bit 3,a
 699  8D87 C4 91 A2     	call nz,Compara_con_coordenadas_de_disparo
 700  8D8A
 701  8D8A              ; Existe colisión entre esta entidad y Amadeus ???
 702  8D8A
 703  8D8A DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 704  8D8D CB 4F        	bit 1,a
 705  8D8F C4 37 93     	call nz,Genera_explosion
 706  8D92 20 43        	jr nz,Gestiona_siguiente_entidad
 707  8D94
 708  8D94 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 709  8D97 A7           	and a
 710  8D98 28 0C        	jr z,3F
 711  8D9A
 712  8D9A              ; IMPACTO en entidad por colisión con Amadeus.
 713  8D9A
 714  8D9A              ; 5/7/24
 715  8D9A              ; Nota importante:
 716  8D9A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 717  8D9A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 718  8D9A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 719  8D9A
 720  8D9A 3A B2 89     	ld a,(Impacto_Amadeus)
 721  8D9D A7           	and a
 722  8D9E C4 37 93     	call nz,Genera_explosion
 723  8DA1 20 34        	jr nz,Gestiona_siguiente_entidad
 724  8DA3
 725  8DA3              ; Falsa colisión !!!
 726  8DA3
 727  8DA3 32 01 8C     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 728  8DA6
 729  8DA6              ; -------------------------------------------
 730  8DA6
 731  8DA6 CD 93 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 732  8DA9 CD BA 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 733  8DAC CD EB 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 734  8DAF
 735  8DAF DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 736  8DB1 DD 2A 02 8C  	ld ix,(Puntero_de_impresion)
 737  8DB5 CD 23 96     	call Genera_datos_de_impresion
 738  8DB8 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 739  8DBA
 740  8DBA CD 29 95     	call Decrementa_Contador_de_mov_masticados
 741  8DBD
 742  8DBD              ; -------------------------------------------
 743  8DBD
 744  8DBD              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 745  8DBD
 746  8DBD 2A 02 8C     	ld hl,(Puntero_de_impresion)
 747  8DC0 CD F7 95     	call Genera_coordenadas
 748  8DC3
 749  8DC3 ED 4B FE 8B  	ld bc,(Coordenada_X)
 750  8DC7
 751  8DC7 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 752  8DCA DD 70 02     	ld (ix+2),b
 753  8DCD
 754  8DCD              ; TODO: Generamos disparo ???
 755  8DCD
 756  8DCD 3A 66 8C     	ld a,(Permiso_de_disparo_Entidades)
 757  8DD0 A7           	and a
 758  8DD1 C4 63 8E     	call nz,Entidad_genera_disparo_si_procede
 759  8DD4
 760  8DD4 CD 15 A4     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 761  8DD7
 762  8DD7              Gestiona_siguiente_entidad
 763  8DD7
 764  8DD7 CD 2C 92     	call Incrementa_punteros_de_cajas
 765  8DDA
 766  8DDA C1           	pop bc
 767  8DDB 10 85        	djnz 2B
 768  8DDD
 769  8DDD              ; Hemos gestionado todas las entidades.
 770  8DDD              ; ----- ----- -----
 771  8DDD
 772  8DDD CD A7 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 773  8DE0 CD BE 8F     	call Ordena_tabla_de_impresion
 774  8DE3 CD CC 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 775  8DE6
 776  8DE6 CD 64 8F     	call Borra_diferencia
 777  8DE9
 778  8DE9 3A 74 8C     	ld a,(Ctrl_3)
 779  8DEC CB 5F        	bit 3,a
 780  8DEE 20 04        	jr nz,Gestion_de_Amadeus
 781  8DF0
 782  8DF0 EB           	ex de,hl
 783  8DF1 71           	ld (hl),c
 784  8DF2 2C           	inc l
 785  8DF3 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 786  8DF4
 787  8DF4              ;! GESTIONA AMADEUS !!!!!!!!!!
 788  8DF4
 789  8DF4              Gestion_de_Amadeus
 790  8DF4
 791  8DF4 21 74 8C     	ld hl,Ctrl_3
 792  8DF7 CB 76        	bit 6,(hl)
 793  8DF9 28 13        	jr z,Amadeus_vivo
 794  8DFB
 795  8DFB              ; Amadeus ha sido destruido.
 796  8DFB              ; Decrementa (Temp_new_live).
 797  8DFB
 798  8DFB 21 88 8C     	ld hl,Temp_new_live
 799  8DFE 35           	dec (hl)
 800  8DFF 20 26        	jr nz,End_frame
 801  8E01
 802  8E01              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 803  8E01
 804  8E01 21 A0 8C     	ld hl,Lives
 805  8E04 35           	dec (hl)
 806  8E05
 807  8E05              ;! Fin del juego
 808  8E05
 809  8E05 F3           	di
 810  8E06 28 FE        	jr z,$														;! GAME OVER !!!!!
 811  8E08 FB           	ei
 812  8E09
 813  8E09              ; Nueva nave.
 814  8E09
 815  8E09 CD 80 8E     	call Reinicia_Amadeus
 816  8E0C 18 19        	jr End_frame
 817  8E0E
 818  8E0E              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 819  8E0E
 820  8E0E              Amadeus_vivo
 821  8E0E
 822  8E0E 3A B2 89     	ld a,(Impacto_Amadeus)
 823  8E11 A7           	and a
 824  8E12 C4 A7 93     	call nz, Genera_explosion_Amadeus
 825  8E15 20 10        	jr nz, End_frame
 826  8E17
 827  8E17 CD 14 93     	call Teclado
 828  8E1A 21 74 8C     	ld hl,Ctrl_3
 829  8E1D
 830  8E1D CB 6E        	bit 5,(hl)
 831  8E1F 28 06        	jr z,End_frame
 832  8E21
 833  8E21              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 834  8E21
 835  8E21 CD FD 8E     	call Change_Amadeus
 836  8E24 CD 71 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 837  8E27
 838  8E27              End_frame
 839  8E27
 840  8E27              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 841  8E27              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 842  8E27
 843  8E27 CD BC A1     	call Genera_datos_de_impresion_disparos_Entidades
 844  8E2A CD 80 A3     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 845  8E2D CD D6 A2     	call Calcula_bytes_pintado_disparos
 846  8E30 CD E3 A2     	call Limpia_album_de_pintado_disparos_entidades
 847  8E33
 848  8E33              ; ------------ ------------- --------------
 849  8E33
 850  8E33 2A 52 8C     	ld hl,(Album_de_borrado)
 851  8E36 22 6E 8C     	ld (Scanlines_album_SP),hl
 852  8E39
 853  8E39 21 74 8C     	ld hl,Ctrl_3
 854  8E3C CB C6        	set 0,(hl) 											; Indica Frame completo.
 855  8E3E CB 9E        	res 3,(hl)
 856  8E40 CB A6        	res 4,(hl)
 857  8E42
 858  8E42 21 75 8C     	ld hl,Ctrl_4
 859  8E45 CB 86        	res 0,(hl)
 860  8E47
 861  8E47 AF           	xor a
 862  8E48 D3 FE        	out ($fe),a
 863  8E4A
 864  8E4A 76           	halt
 865  8E4B
 866  8E4B C3 0C 8D     	jp Main
 867  8E4E
 868  8E4E              ;------------------------------------------
 869  8E4E              ;
 870  8E4E              ;	07/11/24
 871  8E4E
 872  8E4E              Autoriza_disparo_de_entidades
 873  8E4E
 874  8E4E 3E 01        	ld a,1
 875  8E50 32 66 8C     	ld (Permiso_de_disparo_Entidades),a
 876  8E53
 877  8E53 3A 90 8C     	ld a,(Repone_CLOCK_disparos)
 878  8E56 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 879  8E58 38 02        	jr c,1F
 880  8E5A
 881  8E5A              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 882  8E5A              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 883  8E5A              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 884  8E5A
 885  8E5A D6 04        	sub 4								; Aumenta la cadencia del disparo.
 886  8E5C
 887  8E5C 32 90 8C     1 ld (Repone_CLOCK_disparos),a
 888  8E5F 32 91 8C     	ld (CLOCK_disparos_de_entidades),a
 889  8E62
 890  8E62 C9           	ret
 891  8E63
 892  8E63              ;------------------------------------------
 893  8E63              ;
 894  8E63              ;	14/09/24
 895  8E63              ;
 896  8E63              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 897  8E63
 898  8E63              Entidad_genera_disparo_si_procede
 899  8E63
 900  8E63 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 901  8E66 CB 06        	rlc (hl)
 902  8E68
 903  8E68 DC 0C A2     	call c,Genera_disparo_de_entidad_maldosa
 904  8E6B
 905  8E6B C9           	ret
 906  8E6C
 907  8E6C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 908  8E6C              ;
 909  8E6C              ;	30/09/24
 910  8E6C
 911  8E6C              Actuaiza_sp_de_disparos_de_entidades
 912  8E6C
 913  8E6C 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 914  8E6F 23           	inc hl
 915  8E70 22 8B 8C     	ld (Puntero_num_aleatorios_disparos),hl
 916  8E73
 917  8E73 11 FD 88     	ld de,Numeros_aleatorios+7
 918  8E76 7B           	ld a,e
 919  8E77 95           	sub l
 920  8E78 C0           	ret nz
 921  8E79
 922  8E79 21 F6 88     1 ld hl,Numeros_aleatorios
 923  8E7C 22 8B 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 924  8E7F C9           	ret
 925  8E80
 926  8E80              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 927  8E80              ;
 928  8E80              ;	24/07/24
 929  8E80
 930  8E80              Reinicia_Amadeus
 931  8E80
 932  8E80              ;	Reinicia posición y estado.
 933  8E80
 934  8E80 21 CF 50     	ld hl,$50cf
 935  8E83 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 936  8E86 21 CC DC     	ld hl,$dccc
 937  8E89 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 938  8E8C 21 3D 00     	ld hl,$003d
 939  8E8F 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 940  8E92
 941  8E92              ;	limpiamos el álbum de borrado.
 942  8E92
 943  8E92 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
 944  8E95
 945  8E95 AF           	xor a
 946  8E96 77           	ld (hl),a
 947  8E97
 948  8E97 E5           	push hl
 949  8E98 D1           	pop de
 950  8E99 13           	inc de
 951  8E9A
 952  8E9A 01 23 00     	ld bc,35
 953  8E9D ED B0        	ldir
 954  8E9F
 955  8E9F CD 71 91     	call Genera_datos_de_impresion_Amadeus
 956  8EA2
 957  8EA2              ;	Reinicia temporizaciones.
 958  8EA2
 959  8EA2 CD 4C 92     	call Inicia_Shield
 960  8EA5
 961  8EA5 3E 5A        	ld a,90
 962  8EA7 32 9D 8C     	ld (Shield),a
 963  8EAA
 964  8EAA 3E 64        	ld a,100
 965  8EAC 32 88 8C     	ld (Temp_new_live),a
 966  8EAF
 967  8EAF              ; 	Restauramos el FLAG: Amadeus vivo.
 968  8EAF
 969  8EAF 21 74 8C     	ld hl,Ctrl_3
 970  8EB2 CB B6        	res 6,(hl)
 971  8EB4
 972  8EB4              ;	Fuerza la impresión de la nave en el siguiente frame.
 973  8EB4
 974  8EB4 21 74 8C      	ld hl,Ctrl_3
 975  8EB7 CB EE        	set 5,(hl)
 976  8EB9
 977  8EB9 C9           	ret
 978  8EBA
 979  8EBA              ; --------------------------------------------------------------------------------------------------------------
 980  8EBA              ;
 981  8EBA              ;	23/11/24
 982  8EBA
 983  8EBA              Ajusta_velocidad_entidad
 984  8EBA
 985  8EBA DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 986  8EBD A7           	and a
 987  8EBE C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 988  8EBF              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 989  8EBF              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 990  8EBF
 991  8EBF
 992  8EBF              ; Incrementa (Contador_de_vueltas)x2.
 993  8EBF              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 994  8EBF
 995  8EBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 996  8EBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 997  8EBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 998  8EBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 999  8EBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1000  8EBF
1001  8EBF
1002  8EBF CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1003  8EC1 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1004  8EC4 E6 10        	and $10
1005  8EC6 C8           	ret z
1006  8EC7
1007  8EC7              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1008  8EC7
1009  8EC7 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1010  8ECA CB 2F        	sra a
1011  8ECC CB 2F        	sra a
1012  8ECE DD 77 0B     	ld (ix+11),a
1013  8ED1
1014  8ED1 DD 6E 07     	ld l,(ix+7)
1015  8ED4 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1016  8ED7
1017  8ED7              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1018  8ED7 23           	inc hl
1019  8ED8 23           	inc hl
1020  8ED9 23           	inc hl
1021  8EDA 23           	inc hl
1022  8EDB              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1023  8EDB
1024  8EDB DD 75 07     	ld (ix+7),l
1025  8EDE DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1026  8EE1
1027  8EE1 C9           	ret
1028  8EE2
1029  8EE2              ; --------------------------------------------------------------------------------------------------------------
1030  8EE2              ;
1031  8EE2              ;	25/08/24
1032  8EE2
1033  8EE2              Change
1034  8EE2
1035  8EE2 3A 6B 8C     	ld a,(Switch)
1036  8EE5 EE 01        	xor 1
1037  8EE7 32 6B 8C     	ld (Switch),a
1038  8EEA 2A 50 8C     	ld hl,(Album_de_pintado)
1039  8EED ED 5B 52 8C  	ld de,(Album_de_borrado)
1040  8EF1 EB           	ex de,hl
1041  8EF2 22 50 8C     	ld (Album_de_pintado),hl
1042  8EF5 22 6E 8C     	ld (Scanlines_album_SP),hl
1043  8EF8 ED 53 52 8C  	ld (Album_de_borrado),de
1044  8EFC C9           	ret
1045  8EFD
1046  8EFD              Change_Amadeus
1047  8EFD
1048  8EFD 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1049  8F00 ED 5B 56 8C  	ld de,(Album_de_borrado_Amadeus)
1050  8F04 EB           	ex de,hl
1051  8F05 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1052  8F08 ED 53 56 8C  	ld (Album_de_borrado_Amadeus),de
1053  8F0C C9           	ret
1054  8F0D
1055  8F0D              Change_Disparos
1056  8F0D
1057  8F0D              ; Álbumes de Amadeus.
1058  8F0D
1059  8F0D 2A 58 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1060  8F10 ED 5B 5A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1061  8F14 EB           	ex de,hl
1062  8F15 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1063  8F18 ED 53 5A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1064  8F1C CD CB A2     	call Limpia_album_de_pintado_disparos_Amadeus
1065  8F1F
1066  8F1F              ; Álbumes de entidades.
1067  8F1F
1068  8F1F 2A 5C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1069  8F22 ED 5B 5E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1070  8F26 EB           	ex de,hl
1071  8F27 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1072  8F2A ED 53 5E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1073  8F2E 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1074  8F31
1075  8F31 3A 62 8C     	ld a,(Num_de_bytes_album_de_disparos)
1076  8F34 32 63 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1077  8F37
1078  8F37 C9           	ret
1079  8F38
1080  8F38              ; ------------------------------------
1081  8F38              ;
1082  8F38              ; 1/05/24
1083  8F38
1084  8F38              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1085  8F38              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1086  8F38
1087  8F38              ;	DESTRUYE: HL,DE,A
1088  8F38              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1089  8F38
1090  8F38              ;	Variables implicadas: (RND_SP).
1091  8F38
1092  8F38              Extrae_numero_aleatorio_y_avanza
1093  8F38
1094  8F38 21 FD 88     	ld hl,Numeros_aleatorios+7
1095  8F3B EB           	ex de,hl
1096  8F3C 2A 89 8C     	ld hl,(RND_SP)
1097  8F3F
1098  8F3F 7B           	ld a,e
1099  8F40 95           	sub l
1100  8F41 20 06        	jr nz,1F
1101  8F43
1102  8F43              ; Sitúa HL al principio de la tabla de nº aleatorios.
1103  8F43
1104  8F43 21 F6 88     	ld hl,Numeros_aleatorios
1105  8F46 22 89 8C     	ld (RND_SP),HL
1106  8F49
1107  8F49              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1108  8F49
1109  8F49 7E           1 ld a,(hl)
1110  8F4A 23           	inc hl
1111  8F4B 22 89 8C     	ld (RND_SP),hl
1112  8F4E C9           	ret
1113  8F4F
1114  8F4F              ; ------------------------------------
1115  8F4F              ;
1116  8F4F              ; 1/05/24
1117  8F4F
1118  8F4F              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1119  8F4F              ; (1 a 4 segundos).
1120  8F4F              ; Actualizamos (Clock_next_entity) con A.
1121  8F4F
1122  8F4F              ;	DESTRUYE: A y B.
1123  8F4F              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1124  8F4F              ;			 Actualiza (Clock_next_entity) con A.
1125  8F4F
1126  8F4F              ;	Variables implicadas: (Clock_next_entity).
1127  8F4F
1128  8F4F              ; Notas:
1129  8F4F
1130  8F4F              ; 	$32 1 seg.
1131  8F4F              ; 	$64 2 seg.
1132  8F4F              ; 	$96 3 seg.
1133  8F4F              ; 	$c8 4 seg.
1134  8F4F              ; 	$fa 5 seg.
1135  8F4F
1136  8F4F              ; $ffff 1310,7 seg, 22 minutos.
1137  8F4F
1138  8F4F              ;	$0100  5 seg. aproximadamente.
1139  8F4F              ;	$0200 10 seg. aproximadamente.
1140  8F4F              ;	$0300 15 seg. aproximadamente.
1141  8F4F              ;	$0400 20 seg. aproximadamente.
1142  8F4F              ;	$0500 25 seg. aproximadamente.
1143  8F4F              ;	$0600 30 seg. aproximadamente.
1144  8F4F
1145  8F4F              Define_Clock_next_entity
1146  8F4F
1147  8F4F FE 34        	cp $34
1148  8F51 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1149  8F53
1150  8F53              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1151  8F53
1152  8F53 4F           3 ld c,a
1153  8F54 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1154  8F56 2A 78 5C     	ld hl,(FRAMES)
1155  8F59 A7           	and a
1156  8F5A ED 4A        	adc hl,bc
1157  8F5C 22 8E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1158  8F5F C9           	ret
1159  8F60
1160  8F60 3E 34        1 ld a,$34
1161  8F62 18 EF        	jr 3B
1162  8F64
1163  8F64              ; ------------------------------------
1164  8F64              ;
1165  8F64              ; 18/03/24
1166  8F64
1167  8F64              Borra_diferencia
1168  8F64
1169  8F64 ED 4B 6E 8C  	ld bc,(Scanlines_album_SP)
1170  8F68
1171  8F68 3A 6B 8C     	ld a,(Switch)
1172  8F6B A7           	and a
1173  8F6C 28 08        	jr z,2F
1174  8F6E
1175  8F6E 2A 69 8C     	ld hl,(Techo_Scanlines_album_2)
1176  8F71 11 69 8C     	ld de,Techo_Scanlines_album_2
1177  8F74 18 06        	jr 3F
1178  8F76
1179  8F76 2A 67 8C     2 ld hl,(Techo_Scanlines_album)
1180  8F79 11 67 8C     	ld de,Techo_Scanlines_album
1181  8F7C
1182  8F7C              ; Diferencia.
1183  8F7C
1184  8F7C ED 42        3 sbc hl,bc
1185  8F7E
1186  8F7E C8           	ret z
1187  8F7F D8           	ret c
1188  8F80
1189  8F80              ; Nuevo techo, (más bajo que el anterior).
1190  8F80              ; Fijamos nuevo techo y borramos bytes sobrantes.
1191  8F80
1192  8F80 EB           	ex de,hl
1193  8F81
1194  8F81 71           	ld (hl),c
1195  8F82 2C           	inc l
1196  8F83 70           	ld (hl),b
1197  8F84
1198  8F84 AF           	xor a
1199  8F85 43           	ld b,e
1200  8F86
1201  8F86 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1202  8F89
1203  8F89 77           1 ld (hl),a
1204  8F8A 23           	inc hl
1205  8F8B 10 FC        	djnz 1B
1206  8F8D
1207  8F8D              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1208  8F8D
1209  8F8D 21 74 8C     	ld hl,Ctrl_3
1210  8F90 CB DE        	set 3,(hl)
1211  8F92
1212  8F92 C9           	ret
1213  8F93
1214  8F93              ; --------------------------------------------------------------------------------------------------------------
1215  8F93              ;
1216  8F93              ;	23/11/24
1217  8F93              ;
1218  8F93              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1219  8F93
1220  8F93              Entidad_a_Tabla_de_pintado
1221  8F93
1222  8F93              ; Almacena la Coordenada Y de la entidad en curso.
1223  8F93
1224  8F93              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1225  8F93
1226  8F93 DD 7E 02     	ld a,(ix+2)
1227  8F96 2A 70 8C     	ld hl,(India_SP)
1228  8F99 77           	ld (hl),a
1229  8F9A 2C           	inc l
1230  8F9B
1231  8F9B              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1232  8F9B
1233  8F9B ED 5B 6E 8C  	ld de,(Scanlines_album_SP)
1234  8F9F
1235  8F9F 73           	ld (hl),e
1236  8FA0 2C           	inc l
1237  8FA1 72           	ld (hl),d
1238  8FA2 2C           	inc l
1239  8FA3
1240  8FA3 22 70 8C     	ld (India_SP),hl
1241  8FA6
1242  8FA6 C9           	ret
1243  8FA7
1244  8FA7              ; --------------------------------------------------------------------------------------------------------------
1245  8FA7              ;
1246  8FA7              ;	27/03/24
1247  8FA7              ;
1248  8FA7
1249  8FA7              Inicializa_India_y_limpia_Tabla_de_impresion
1250  8FA7
1251  8FA7 2A 70 8C     	ld hl,(India_SP)
1252  8FAA 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1253  8FAD
1254  8FAD 79           	ld a,c
1255  8FAE 95           	sub l
1256  8FAF 28 06        	jr z,2F
1257  8FB1 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1258  8FB2              ;														; _ y pasamos a inicializar (India_SP).
1259  8FB2 AF           	xor a
1260  8FB3
1261  8FB3 77           1 ld (hl),a
1262  8FB4 2C           	inc l
1263  8FB5 10 FC        	djnz 1B												; Limpia Tabla.
1264  8FB7
1265  8FB7 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1266  8FBA 22 70 8C     	ld (India_SP),hl
1267  8FBD
1268  8FBD C9           	ret
1269  8FBE
1270  8FBE              ; --------------------------------------------------------------------------------------------------------------
1271  8FBE              ;
1272  8FBE              ;	31/3/24
1273  8FBE
1274  8FBE              Ordena_tabla_de_impresion
1275  8FBE
1276  8FBE              ; 5794 T/states.
1277  8FBE              ; 6278 T/states.
1278  8FBE              ; 5310 T/states.
1279  8FBE
1280  8FBE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1281  8FBE              ; Inicializamos contador de comparaciones, [C].
1282  8FBE              ; Cargamos los registros A y B para efectuar comparación.
1283  8FBE
1284  8FBE FD 2E 00     	ld iyl,0
1285  8FC1
1286  8FC1 3A 47 8C     	ld a,(Entidades_en_curso)
1287  8FC4 FE 04        	cp 4 	;	4
1288  8FC6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1289  8FC7
1290  8FC7 3D           	dec a
1291  8FC8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1292  8FC9 51           	ld d,c 										; Copia de respaldo.
1293  8FCA
1294  8FCA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1295  8FCB
1296  8FCB 21 03 89     	ld hl,Tabla_de_pintado+3
1297  8FCE 46           	ld b,(hl)
1298  8FCF 22 72 8C     	ld (India_2_SP),hl
1299  8FD2
1300  8FD2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1301  8FD3 DC FB 8F     	call c, Avanza_India_2_SP
1302  8FD6 CC FB 8F     	call z, Avanza_India_2_SP
1303  8FD9
1304  8FD9 FD 2D        	dec iyl
1305  8FDB 28 18        	jr z,2F
1306  8FDD
1307  8FDD
1308  8FDD              ; --------------------------------------------------------------------------------------------------------------
1309  8FDD              ;
1310  8FDD              ;	7/4/24
1311  8FDD
1312  8FDD              Trueque
1313  8FDD
1314  8FDD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1315  8FDD              ;  			A contiene en nº de fila de (India_SP).
1316  8FDD              ;			HL contiene (India_2_SP).
1317  8FDD
1318  8FDD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1319  8FDE E5           	push hl										; Preservo (India_2_SP).
1320  8FDF
1321  8FDF ED 5B 70 8C  	ld de,(India_SP)
1322  8FE3 EB           	ex de,hl
1323  8FE4 70           	ld (hl),b
1324  8FE5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1325  8FE6
1326  8FE6 CD 27 90     	call Intercambia_1_byte
1327  8FE9 CD 27 90     	call Intercambia_1_byte
1328  8FEC
1329  8FEC
1330  8FEC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1331  8FEC              ; Recuperamos (India_2_SP) en HL.
1332  8FEC
1333  8FEC 2A 70 8C     	ld hl,(India_SP)
1334  8FEF 7E           	ld a,(hl)
1335  8FF0
1336  8FF0 E1           	pop hl
1337  8FF1 D1           	pop de
1338  8FF2
1339  8FF2              ; --------------------------------------------------------------------------------------------------------------
1340  8FF2
1341  8FF2 CD FB 8F     	call Avanza_India_2_SP
1342  8FF5
1343  8FF5 14           2 inc d
1344  8FF6 15           	dec d
1345  8FF7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1346  8FF8 18 D8        	jr 1B
1347  8FFA
1348  8FFA C9           	ret
1349  8FFB
1350  8FFB              ; ----- ----- ----- ----- -----
1351  8FFB
1352  8FFB              Avanza_India_2_SP
1353  8FFB
1354  8FFB 0D           	dec c
1355  8FFC 28 0A        	jr z,Avanza_punteros_indios
1356  8FFE
1357  8FFE FD 2C        	inc iyl
1358  9000
1359  9000 2C           	inc l
1360  9001 2C           	inc l
1361  9002 2C           	inc l
1362  9003
1363  9003 46           	ld b,(hl)
1364  9004 22 72 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1365  9007
1366  9007 C9           	ret
1367  9008
1368  9008              ; ----- ----- ----- ----- -----
1369  9008
1370  9008              Avanza_punteros_indios
1371  9008
1372  9008 15           	dec d
1373  9009 28 15        	jr z,Prepara_salida
1374  900B
1375  900B 4A           	ld c,d
1376  900C
1377  900C 2A 70 8C     	ld hl,(India_SP)
1378  900F 2C           	inc l
1379  9010 2C           	inc l
1380  9011 2C           	inc l
1381  9012 7E           	ld a,(hl)
1382  9013 22 70 8C     	ld (India_SP),hl
1383  9016
1384  9016 2C           	inc l
1385  9017 2C           	inc l
1386  9018 2C           	inc l
1387  9019 46           	ld b,(hl)
1388  901A 22 72 8C     	ld (India_2_SP),hl
1389  901D
1390  901D FD 2C        	inc iyl
1391  901F
1392  901F C9           	ret
1393  9020
1394  9020              Prepara_salida
1395  9020
1396  9020 21 00 89     	ld hl,Tabla_de_pintado
1397  9023 22 70 8C     	ld (India_SP),hl
1398  9026 C9           	ret
1399  9027
1400  9027
1401  9027 2C           Intercambia_1_byte inc l
1402  9028 1C           	inc e
1403  9029 46           	ld b,(hl)
1404  902A 1A           	ld a,(de)
1405  902B EB           	ex de,hl
1406  902C 70           	ld (hl),b
1407  902D 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1408  902E C9           	ret
1409  902F
1410  902F              ; -----------------------------------------------------------------------------------
1411  902F              ;
1412  902F              ;	20/01/24
1413  902F              ;
1414  902F              ;
1415  902F
1416  902F              Construye_movimientos_masticados_entidad
1417  902F
1418  902F 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1419  9032 E5           	push hl
1420  9033 CD B2 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1421  9036              ;															; _ el (Contador_de_mov_masticados).
1422  9036 CD E8 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1423  9039              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1424  9039 CD 0A 9B     	call Recompone_posicion_inicio
1425  903C
1426  903C CD 3A 98     1 call Draw
1427  903F
1428  903F CD BF 90     	call Codifica_movimiento
1429  9042 CD 97 90     	call Guarda_movimiento_masticado
1430  9045
1431  9045 18 37        	jr 2F
1432  9047
1433  9047              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------------------------
1434  9047              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1435  9047              ;! -------------------------------------------------------------------------------------------------------------------------------
1436  9047              ;! -------------------------------------------------------------------------------------------------------------------------------
1437  9047
1438  9047 F5           	push af
1439  9048 C5           	push bc
1440  9049 D5           	push de
1441  904A E5           	push hl
1442  904B FD E5        	push iy
1443  904D DD E5        	push ix
1444  904F
1445  904F AF           	xor a
1446  9050 D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1447  9052
1448  9052              ;	8BF2 00           CTRL_DESPLZ
1449  9052              ;	8Be5 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1450  9052              ;	$ddc0			  Almacén de movimientos masticados.
1451  9052              ;	8BE3 00 00        Puntero_de_impresion defw 0
1452  9052              ;	8Bdf 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
1453  9052              ;	8Be0 00  	      Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
1454  9052              ;	8Bee 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
1455  9052              ;	8Bf0 00 00		  Puntero_objeto defw 0 									; Donde están los datos para pintar el Sprite.
1456  9052
1457  9052              ; -------------------------------------------------------------------------
1458  9052
1459  9052              ; 	Pos_actual $43fe -
1460  9052              ;	Puntero_de_impresion $44be
1461  9052              ;	Puntero_objeto $8540
1462  9052              ;	Ctrl_Desplz $00
1463  9052
1464  9052              ;	En función de la Posicion_actual:
1465  9052
1466  9052              ;	Coordenada_X $1e
1467  9052              ;	Coordenada_y $07
1468  9052
1469  9052              ; -------------------------------------------------------------------------
1470  9052
1471  9052 2A 50 8C     	ld hl,(Album_de_pintado)
1472  9055 22 6E 8C     	ld (Scanlines_album_SP),hl
1473  9058
1474  9058 FD E5        	push iy
1475  905A D1           	pop de
1476  905B
1477  905B D5           	push de
1478  905C CD 23 96     	call Genera_datos_de_impresion
1479  905F D1           	pop de
1480  9060
1481  9060
1482  9060              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1483  9060              ;
1484  9060              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1485  9060              ;							DE (Puntero objeto).
1486  9060
1487  9060
1488  9060 2A 50 8C     	ld hl,(Album_de_pintado)
1489  9063 EB           	ex de,hl
1490  9064 CD 17 97     	call Pinta_Sprites
1491  9067
1492  9067              ;	ld a,(Coordenada_X)
1493  9067              ;	cp 30
1494  9067              ;	jr z,$
1495  9067              ;	cp 31
1496  9067              ;	jr z,$
1497  9067              ;	cp 0
1498  9067              ;	jr z,$
1499  9067              ;	cp 1
1500  9067              ;	jr z,$
1501  9067
1502  9067              ;	jr $
1503  9067
1504  9067              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1505  9067 3E 38        	ld a,%00111000
1506  9069 CD E3 95     	call Cls
1507  906C
1508  906C              ; Borra album de pintado.
1509  906C
1510  906C AF           	xor a
1511  906D 21 00 80     	ld hl,$8000
1512  9070 06 28        	ld b,40
1513  9072 77           23 ld (hl),a
1514  9073 2C           	inc l
1515  9074 10 FC        	djnz 23b
1516  9076
1517  9076              ; ----- ----- ----- ----- -----
1518  9076
1519  9076 DD E1        	pop ix
1520  9078 FD E1        	pop iy
1521  907A E1           	pop hl
1522  907B D1           	pop de
1523  907C C1           	pop bc
1524  907D F1           	pop af
1525  907E
1526  907E              ;! -------------------------------------------------------------------------------------------------------------------------------
1527  907E              ;! -------------------------------------------------------------------------------------------------------------------------------
1528  907E              ;! -------------------------------------------------------------------------------------------------------------------------------
1529  907E              ;! -------------------------------------------------------------------------------------------------------------------------------
1530  907E
1531  907E CD 9E 9E     2 call Movimiento
1532  9081
1533  9081 3A 74 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1534  9084 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1535  9086 28 B4        	jr z,1B
1536  9088
1537  9088              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1538  9088              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1539  9088
1540  9088 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1541  9089 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1542  908C
1543  908C              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1544  908C
1545  908C CD 02 A0     	call Situa_en_contador_general_de_mov_masticados
1546  908F
1547  908F              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1548  908F              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1549  908F
1550  908F ED 4B 06 8C  	ld bc,(Contador_de_mov_masticados)
1551  9093
1552  9093 71           	ld (hl),c
1553  9094 23           	inc hl
1554  9095 70           	ld (hl),b
1555  9096
1556  9096 C9           	ret
1557  9097
1558  9097              ; -----------------------------------------------------------------------------------
1559  9097              ;
1560  9097              ;	28/12/23
1561  9097              ;
1562  9097              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1563  9097              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1564  9097
1565  9097              Guarda_movimiento_masticado
1566  9097
1567  9097 ED 73 4C 8C  	ld (Stack),sp
1568  909B ED 7B 04 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1569  909F
1570  909F DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1571  90A1 FD E5            push iy 												; Pushea Puntero_objeto.
1572  90A3
1573  90A3 ED 7B 4C 8C      ld sp,(Stack)
1574  90A7
1575  90A7 2A 06 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1576  90AA 23           	inc hl
1577  90AB 22 06 8C     	ld (Contador_de_mov_masticados),hl
1578  90AE
1579  90AE CD B2 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1580  90B1              ;															; _ el (Contador_de_mov_masticados).
1581  90B1 C9               ret
1582  90B2
1583  90B2              ; --------------------------------------------------------------------------------------------------------------
1584  90B2              ;
1585  90B2              ;	12/1/24
1586  90B2              ;
1587  90B2              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1588  90B2
1589  90B2              Actualiza_Puntero_de_almacen_de_mov_masticados
1590  90B2
1591  90B2 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1592  90B5 01 04 00     	ld bc,4
1593  90B8 A7           	and a
1594  90B9 ED 4A        	adc hl,bc
1595  90BB 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1596  90BE C9           	ret
1597  90BF
1598  90BF              ; --------------------------------------------------------------------------------------------------------------
1599  90BF              ;
1600  90BF              ;	14/1/25
1601  90BF              ;
1602  90BF              ;	IX ..... (Puntero_de_impresion).
1603  90BF              ;	IY ..... (Puntero_objeto).
1604  90BF
1605  90BF              Codifica_movimiento
1606  90BF
1607  90BF              ;	jr $
1608  90BF
1609  90BF 3A 1D 8C     	ld a,(Columnas)
1610  90C2 3D           	dec a
1611  90C3 28 04        	jr z,Una_Columna
1612  90C5 3D           	dec a
1613  90C6 28 13        	jr z,Dos_Columnas
1614  90C8 C9           	ret
1615  90C9
1616  90C9 DD 7C        Una_Columna ld a,ixh
1617  90CB CB EF        	set 5,a
1618  90CD CB B7        	res 6,a
1619  90CF DD 67        	ld ixh,a
1620  90D1
1621  90D1 3A FE 8B     	ld a,(Coordenada_X)
1622  90D4 A7           	and a
1623  90D5 C0           	ret nz
1624  90D6
1625  90D6 FD 2C        	inc iyl
1626  90D8 FD 2C        	inc iyl
1627  90DA C9           	ret
1628  90DB
1629  90DB DD 7C        Dos_Columnas ld a,ixh
1630  90DD CB FF        	set 7,a
1631  90DF CB B7        	res 6,a
1632  90E1 DD 67        	ld ixh,a
1633  90E3
1634  90E3 3A FE 8B     	ld a,(Coordenada_X)
1635  90E6 3D           	dec a
1636  90E7 C0           	ret nz
1637  90E8
1638  90E8 FD 2C        	inc iyl
1639  90EA C9           	ret
1640  90EB
1641  90EB              ; ------------------------------------------
1642  90EB              ;
1643  90EB              ;	23/11/24
1644  90EB              ;
1645  90EB              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1646  90EB
1647  90EB
1648  90EB              Obtenemos_puntero_de_impresion
1649  90EB
1650  90EB DD 6E 07     	ld l,(ix+7)
1651  90EE DD 66 08     	ld h,(ix+8)
1652  90F1
1653  90F1              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1654  90F1
1655  90F1 ED 73 4C 8C  	ld (Stack),sp
1656  90F5 F9           	ld sp,hl
1657  90F6
1658  90F6 AF           	xor a
1659  90F7 67           	ld h,a
1660  90F8 6C           	ld l,h															; ld hl,"0"
1661  90F9
1662  90F9              ;	Extrae movimiento del Almacen_de_movimientos_masticados de esta unidad.
1663  90F9
1664  90F9 D1           	pop de															; (Puntero_objeto) en DE.
1665  90FA C1           	pop bc															; (Puntero_de_impresión) CODIFICADO en BC.
1666  90FB
1667  90FB              ; ----- ----- ----- ----- -----
1668  90FB
1669  90FB CB 70        Decodifica_Puntero_de_impresion bit 6,b
1670  90FD 20 1C        	jr nz,1F
1671  90FF
1672  90FF              ;	(Puntero_de_impresión) codificado.
1673  90FF
1674  90FF CB 78        	bit 7,b
1675  9101 28 10        	jr z,3F
1676  9103
1677  9103              ;	Decodifica 2 Columnas.
1678  9103
1679  9103 CB 68        	bit 5,b
1680  9105 28 04        	jr z,4F
1681  9107 CB B8        	res 7,b
1682  9109 18 04        	jr 5F
1683  910B
1684  910B CB B8        4 res 7,b
1685  910D CB F0        	set 6,b
1686  910F
1687  910F 3E 02        5 ld a,2
1688  9111 18 0A        	jr 2F
1689  9113
1690  9113              ;	Decodifica 1 Columna.
1691  9113
1692  9113 CB A8        3 res 5,b
1693  9115 CB F0        	set 6,b
1694  9117 3E 01        	ld a,1
1695  9119 18 02        	jr 2F
1696  911B
1697  911B              ; 	Almacena (Puntero_de_impresion) en caja.
1698  911B
1699  911B 3E 03        1 ld a,3
1700  911D 32 1D 8C     2 ld (Columnas),a
1701  9120
1702  9120 DD 71 05     	ld (ix+5),c
1703  9123 DD 70 06     	ld (ix+6),b
1704  9126
1705  9126 ED 43 02 8C  	ld (Puntero_de_impresion),bc
1706  912A
1707  912A              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1708  912A
1709  912A 39           	add hl,sp
1710  912B DD 75 07     	ld (ix+7),l
1711  912E DD 74 08     	ld (ix+8),h
1712  9131
1713  9131 C1           	pop bc
1714  9132
1715  9132 79           	ld a,c
1716  9133 80           	add b															; Comprueba si ya no hay datos en el almacén.
1717  9134
1718  9134 ED 7B 4C 8C  	ld sp,(Stack)
1719  9138
1720  9138 CC 37 95     	call z,Reinicia_entidad_maliciosa
1721  913B
1722  913B C9           	ret
1723  913C
1724  913C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1725  913C              ;
1726  913C              ;	25/11/24
1727  913C
1728  913C              Cargamos_registros_con_explosion
1729  913C
1730  913C DD 6E 07     	ld l,(ix+7)
1731  913F DD 66 08     	ld h,(ix+8)
1732  9142 CD E2 91     	call Extrae_address
1733  9145 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1734  9146
1735  9146 DD 6E 05     	ld l,(ix+5)
1736  9149 DD 66 06     	ld h,(ix+6)
1737  914C
1738  914C E5           	push hl
1739  914D DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1740  914F
1741  914F C9           	ret
1742  9150
1743  9150
1744  9150              Cargamos_registros_con_explosion_Amadeus
1745  9150
1746  9150 2A B5 89     	ld hl,(Pamm_Amadeus)
1747  9153 CD E2 91     	call Extrae_address
1748  9156
1749  9156 5D           	ld e,l
1750  9157 54           	ld d,h
1751  9158
1752  9158 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1753  915C
1754  915C C9           	ret
1755  915D
1756  915D              ; --------------------------------------------------------------------------------------------------------------
1757  915D              ;
1758  915D              ;	17/06/24
1759  915D              ;
1760  915D              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1761  915D              ;
1762  915D              ;	IX contiene el puntero de impresión.
1763  915D              ;	DE contiene (Puntero_objeto).
1764  915D
1765  915D
1766  915D              Cargamos_registros_con_mov_masticado_Amadeus
1767  915D
1768  915D ED 73 4C 8C  	ld (Stack),sp
1769  9161 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1770  9165 D1           	pop de 															; DE contiene Puntero_objeto
1771  9166 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1772  9168 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1773  916C ED 7B 4C 8C  	ld sp,(Stack)
1774  9170 C9           	ret
1775  9171
1776  9171              ; ---------------------------------------------------------------------------------------------------------------------
1777  9171              ;
1778  9171              ;	18/6/24
1779  9171              ;
1780  9171              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1781  9171
1782  9171              Genera_datos_de_impresion_Amadeus
1783  9171
1784  9171 3A B2 89     	ld a,(Impacto_Amadeus)
1785  9174 A7           	and a
1786  9175 20 03        	jr nz,1F
1787  9177
1788  9177              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1789  9177              ; _apuntando a la correspondiente explosión.
1790  9177
1791  9177 CD 5D 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1792  917A
1793  917A DD 7D        1 ld a,ixl
1794  917C E6 1F        	and $1f
1795  917E 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1796  9181
1797  9181 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1798  9184 E5           	push hl
1799  9185
1800  9185 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1801  9188 22 6E 8C     	ld (Scanlines_album_SP),hl
1802  918B
1803  918B CD 23 96     	call Genera_datos_de_impresion
1804  918E
1805  918E E1           	pop hl
1806  918F 22 6E 8C     	ld (Scanlines_album_SP),hl
1807  9192
1808  9192 C9           	ret
1809  9193
1810  9193              ; ---------------------------------------------------------------------------------------------------------------------
1811  9193              ;
1812  9193              ;	13/03/24
1813  9193              ;
1814  9193              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1815  9193
1816  9193              Inicia_albumes_de_lineas
1817  9193
1818  9193 21 00 80     	ld hl,Scanlines_album
1819  9196 22 50 8C     	ld (Album_de_pintado),hl
1820  9199 22 6E 8C     	ld (Scanlines_album_SP),hl
1821  919C
1822  919C 21 1A 81     	ld hl,Scanlines_album_2
1823  919F 22 52 8C     	ld (Album_de_borrado),hl
1824  91A2
1825  91A2 C9           	ret
1826  91A3
1827  91A3              Inicia_albumes_de_lineas_Amadeus
1828  91A3
1829  91A3 21 34 82     	ld hl,Amadeus_scanlines_album
1830  91A6 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1831  91A9 21 58 82     	ld hl,Amadeus_scanlines_album_2
1832  91AC 22 56 8C     	ld (Album_de_borrado_Amadeus),hl
1833  91AF
1834  91AF C9           	ret
1835  91B0
1836  91B0              Inicia_albumes_de_disparos
1837  91B0
1838  91B0 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1839  91B3 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1840  91B6 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1841  91B9 22 5A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1842  91BC
1843  91BC 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1844  91BF 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1845  91C2 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1846  91C5
1847  91C5 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1848  91C8 22 5E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1849  91CB
1850  91CB C9           	ret
1851  91CC
1852  91CC              ; ---------------------------------------------------------------------------------------------------------------------
1853  91CC              ;
1854  91CC              ; 8/1/23
1855  91CC              ;
1856  91CC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1857  91CC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1858  91CC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1859  91CC
1860  91CC              ; Destruye HL y DE !!!!!
1861  91CC
1862  91CC              Inicia_punteros_de_cajas
1863  91CC
1864  91CC 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1865  91CF CD E2 91         call Extrae_address
1866  91D2 22 3D 8C         ld (Puntero_store_caja),hl
1867  91D5 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1868  91D8 22 41 8C     	ld (Indice_restore_caja),hl
1869  91DB CD E2 91     	call Extrae_address
1870  91DE 22 3F 8C     	ld (Puntero_restore_caja),hl
1871  91E1 C9               ret
1872  91E2
1873  91E2              ; *************************************************************************************************************************************************************
1874  91E2
1875  91E2              ;
1876  91E2              ; 20/10/22
1877  91E2              ;
1878  91E2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1879  91E2              ;
1880  91E2              ; Destruye el puntero y DE !!!!!
1881  91E2
1882  91E2 5E           Extrae_address ld e,(hl)
1883  91E3 23           	inc hl
1884  91E4 56           	ld d,(hl)
1885  91E5 2B           	dec hl
1886  91E6 EB           	ex de,hl
1887  91E7 C9           	ret
1888  91E8
1889  91E8              ; *************************************************************************************************************************************************************
1890  91E8              ;
1891  91E8              ;	20/1/24
1892  91E8              ;
1893  91E8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1894  91E8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1895  91E8              ;
1896  91E8              ;   Destruye HL y BC !!!!!,
1897  91E8              ;
1898  91E8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1899  91E8              ;					"0" ..... Izquierda.
1900  91E8
1901  91E8              Inicia_Puntero_objeto
1902  91E8
1903  91E8 3A 1C 8C     	ld a,(Cuad_objeto)
1904  91EB E6 01        	and 1
1905  91ED F5           	push af
1906  91EE CC 0A 92     	call z,Inicia_puntero_objeto_izq
1907  91F1 F1           	pop af
1908  91F2 C8           	ret z
1909  91F3 CD F7 91     	call Inicia_puntero_objeto_der
1910  91F6 C9           	ret
1911  91F7
1912  91F7              ; Arrancamos desde la parte izquierda de la pantalla.
1913  91F7              ; Iniciamos (Indice_Sprite_der).
1914  91F7
1915  91F7 2A 12 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1916  91FA 22 16 8C     	ld (Puntero_DESPLZ_der),hl
1917  91FD CD E2 91     	call Extrae_address
1918  9200 22 0F 8C     	ld (Puntero_objeto),hl
1919  9203
1920  9203 2A 14 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1921  9206 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1922  9209 C9           	ret
1923  920A
1924  920A              ; Arrancamos desde la parte derecha de la pantalla.
1925  920A              ; Iniciamos (Indice_Sprite_izq).
1926  920A
1927  920A 2A 14 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1928  920D 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1929  9210 CD E2 91     	call Extrae_address
1930  9213 22 0F 8C     	ld (Puntero_objeto),hl
1931  9216
1932  9216 2A 12 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1933  9219 22 16 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1934  921C C9           	ret
1935  921D
1936  921D              ; **************************************************************************************************
1937  921D              ;
1938  921D              ;	27/11/24
1939  921D              ;
1940  921D              ;	INPUT: IX contiene (Puntero_store_caja).
1941  921D              ;
1942  921D              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1943  921D
1944  921D              Salta_caja_de_entidades_vacia
1945  921D
1946  921D DD 7E 00     	ld a,(ix+0)
1947  9220 A7           	and a
1948  9221 C0           	ret nz
1949  9222
1950  9222 CD 2C 92     	call Incrementa_punteros_de_cajas
1951  9225 DD 2A 3D 8C  	ld ix,(Puntero_store_caja)
1952  9229 18 F2        	jr Salta_caja_de_entidades_vacia
1953  922B
1954  922B C9           	ret
1955  922C
1956  922C              ; **************************************************************************************************
1957  922C              ;
1958  922C              ;	08/05/23
1959  922C              ;
1960  922C              ;	Incrementamos los dos punteros de entidades. (+1).
1961  922C
1962  922C              Incrementa_punteros_de_cajas
1963  922C
1964  922C 2A 3F 8C     	ld hl,(Puntero_restore_caja)
1965  922F 22 3D 8C     	ld (Puntero_store_caja),hl
1966  9232 2A 41 8C     	ld hl,(Indice_restore_caja)
1967  9235 23           	inc hl
1968  9236 23           	inc hl
1969  9237 22 41 8C     	ld (Indice_restore_caja),hl
1970  923A CD E2 91         call Extrae_address
1971  923D 22 3F 8C         ld (Puntero_restore_caja),hl
1972  9240 C9               ret
1973  9241
1974  9241              ; -----------------------------------------------------------
1975  9241
1976  9241              ; Teclado.
1977  9241
1978  9241 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1979  9243 DB FE        	in a,($fe)
1980  9245 E6 01        	and $01
1981  9247 28 02        	jr z,1f
1982  9249 18 F6        	jr Pulsa_ENTER
1983  924B C9           1 ret
1984  924C
1985  924C              ; **************************************************************************************************
1986  924C              ;
1987  924C              ; Temporización.
1988  924C
1989  924C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1990  924C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1991  924C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1992  924C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1993  924C
1994  924C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1995  924C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1996  924C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1997  924C
1998  924C              ; A partir de $4f61 no hace falta DELAY.
1999  924C
2000  924C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2001  924C
2002  924C              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2003  924C              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2004  924C              ;	LD A,B
2005  924C              ;	AND A
2006  924C              ;	JR NZ,wait
2007  924C              ;	RET
2008  924C
2009  924C              ; ---------------------------------------------------------------------------------------------------------------
2010  924C              ;
2011  924C              ;	13/07/24
2012  924C              ;
2013  924C
2014  924C              Inicia_Shield
2015  924C
2016  924C 21 97 8C     	ld hl,Datos_Shield
2017  924F 22 9B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2018  9252
2019  9252 7E           	ld a,(hl)
2020  9253 32 9E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2021  9256
2022  9256 3E 01        	ld a,1
2023  9258 32 9F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2024  925B
2025  925B C9           	ret
2026  925C
2027  925C              ; ---------- ---------- ---------- ---------- ----------
2028  925C              ;
2029  925C              ;	30/11/24
2030  925C              ;
2031  925C              ;	Limpia la caja de entidades de una entidad eliminada.
2032  925C              ;
2033  925C              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2034  925C              ;	MODIFY: A,BC,DE y HL.
2035  925C
2036  925C              Limpia_caja_de_entidades
2037  925C
2038  925C DD E5        	push ix
2039  925E E1           	pop hl
2040  925F AF           	xor a
2041  9260 77           	ld (hl),a
2042  9261 5D           	ld e,l
2043  9262 54           	ld d,h
2044  9263 1C           	inc e
2045  9264 01 0B 00     	ld bc,11
2046  9267 ED B0        	ldir
2047  9269 C9           	ret
2048  926A
2049  926A              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2050  926A              ;
2051  926A              ;	4/6/24
2052  926A              ;
2053  926A              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2054  926A              ;
2055  926A              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2056  926A              ;
2057  926A
2058  926A              Actualiza_pantalla
2059  926A
2060  926A 3E 02        	ld a,2
2061  926C D3 FE        	out ($fe),a
2062  926E
2063  926E 3A 74 8C     	ld a,(Ctrl_3)
2064  9271 CB 57        	bit 2,a
2065  9273 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2066  9275
2067  9275              Borrando_entidades
2068  9275
2069  9275 2A 6E 8C     	ld hl,(Scanlines_album_SP)
2070  9278 CD E2 91     	call Extrae_address
2071  927B 24           	inc h
2072  927C 25           	dec h
2073  927D 28 05        	jr z,Pintando_entidades
2074  927F CD 17 97     	call Pinta_Sprites
2075  9282 18 F1        	jr Borrando_entidades
2076  9284
2077  9284              Pintando_entidades
2078  9284
2079  9284 2A 70 8C     	ld hl,(India_SP)
2080  9287 2C           	inc l
2081  9288 CD E2 91     	call Extrae_address
2082  928B 24           	inc h
2083  928C 25           	dec h
2084  928D 28 0E        	jr z,Ejecuta_escudo
2085  928F 1C           	inc e
2086  9290 1C           	inc e
2087  9291 ED 53 70 8C  	ld (India_SP),de
2088  9295 CD E2 91     	call Extrae_address
2089  9298 CD 17 97     	call Pinta_Sprites
2090  929B 18 E7        	jr Pintando_entidades
2091  929D
2092  929D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2093  929D
2094  929D              Ejecuta_escudo
2095  929D
2096  929D 3A 9D 8C     	ld a,(Shield)
2097  92A0 A7           	and a
2098  92A1 20 2F        	jr nz,Aplica_Shield
2099  92A3
2100  92A3              Borrando_Amadeus
2101  92A3
2102  92A3 21 74 8C     	ld hl,Ctrl_3
2103  92A6 CB 6E        	bit 5,(hl)
2104  92A8 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2105  92AA
2106  92AA 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
2107  92AD CD E2 91     	call Extrae_address
2108  92B0 24           	inc h
2109  92B1 25           	dec h
2110  92B2 28 03        	jr z,Pintando_Amadeus
2111  92B4 CD 17 97     	call Pinta_Sprites
2112  92B7
2113  92B7              Pintando_Amadeus
2114  92B7
2115  92B7 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
2116  92BA CD E2 91     	call Extrae_address
2117  92BD 24           	inc h
2118  92BE 25           	dec h
2119  92BF 28 03        	jr z,1F
2120  92C1 CD 17 97     	call Pinta_Sprites
2121  92C4
2122  92C4              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2123  92C4
2124  92C4 21 74 8C     1 ld hl,Ctrl_3
2125  92C7 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2126  92C9 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2127  92CB CB AE        	res 5,(hl)
2128  92CD
2129  92CD 3E 01        	ld a,1												; Borde azul.
2130  92CF D3 FE        	out ($fe),a
2131  92D1
2132  92D1 C9           	ret
2133  92D2
2134  92D2              Aplica_Shield
2135  92D2
2136  92D2              ;	Bit 1 "1" (Shield_3) Sólo borra.
2137  92D2              ;		  "0"     ""     Borra/Pinta.
2138  92D2              ;	Bit 2    ""  RET.	 No borra, no pinta.
2139  92D2
2140  92D2 21 9F 8C     	ld hl,Shield_3
2141  92D5
2142  92D5 CB 5E        	bit 3,(hl)
2143  92D7 20 DE        	jr nz,Pintando_Amadeus
2144  92D9
2145  92D9 CB 56        	bit 2,(hl)
2146  92DB 20 E7        	jr nz,1B
2147  92DD
2148  92DD CB 4E        	bit 1,(hl)
2149  92DF C4 E6 92     	call nz,Borra_Amadeus_shield
2150  92E2
2151  92E2 28 BF        	jr z,Borrando_Amadeus
2152  92E4 18 DE        	jr 1B
2153  92E6
2154  92E6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2155  92E6
2156  92E6              Borra_Amadeus_shield
2157  92E6
2158  92E6 3A 74 8C     	ld a,(Ctrl_3)
2159  92E9 CB 6F        	bit 5,a
2160  92EB 28 08        	jr z,1F
2161  92ED
2162  92ED 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
2163  92F0 CD E2 91     	call Extrae_address
2164  92F3 18 06        	jr 2F
2165  92F5
2166  92F5 2A 54 8C     1 ld hl,(Album_de_pintado_Amadeus)
2167  92F8 CD E2 91     	call Extrae_address
2168  92FB
2169  92FB CD 17 97     2 call Pinta_Sprites
2170  92FE
2171  92FE AF           	xor a
2172  92FF 3C           	inc a											; Asegura NZ en la salida de la rutina.
2173  9300
2174  9300 C9           	ret
2175  9301
2176  9301              Pinta_Amadeus_shield
2177  9301
2178  9301 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
2179  9304 CD E2 91     	call Extrae_address
2180  9307 CD 17 97     	call Pinta_Sprites
2181  930A
2182  930A AF           	xor a
2183  930B 3C           	inc a											; Asegura NZ en la salida de la rutina.
2184  930C
2185  930C C9           	ret
2186  930D
2187  930D              Borra_Pinta_Amadeus_shield
2188  930D
2189  930D CD E6 92     	call Borra_Amadeus_shield
2190  9310 CD 01 93     	call Pinta_Amadeus_shield
2191  9313 C9           	ret
2192  9314
2193  9314              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2194  9314              ;
2195  9314              ;	19/6/24
2196  9314              ;
2197  9314
2198  9314              Teclado
2199  9314
2200  9314              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2201  9314
2202  9314 3E F7        	ld a,$f7												; "5" para disparar.
2203  9316 DB FE        	in a,($fe)
2204  9318 E6 10        	and $10
2205  931A
2206  931A CC 9F A3     	call z,Genera_disparo_Amadeus
2207  931D
2208  931D 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2209  931F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2210  9321 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2211  9323 CC 6B 9E         call z,Amadeus_a_izquierda
2212  9326
2213  9326 3E F7        	ld a,$f7
2214  9328 DB FE        	in a,($fe)
2215  932A E6 01        	and $01
2216  932C C8           	ret z
2217  932D
2218  932D 3E F7        	ld a,$f7
2219  932F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2220  9331 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2221  9333 CC 83 9E     	call z,Amadeus_a_derecha
2222  9336
2223  9336 C9           	ret
2224  9337
2225  9337              ; ------------------------------------------------------------------------------------------------------------------------
2226  9337              ;
2227  9337              ;	06/07/24
2228  9337              ;
2229  9337
2230  9337              Genera_explosion
2231  9337
2232  9337 21 86 8C     	ld hl,Clock_explosion
2233  933A 35           	dec (hl)
2234  933B 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2235  933D
2236  933D              Borra_entidad_colisionada
2237  933D
2238  933D CD 93 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2239  9340
2240  9340 DD E5        	push ix
2241  9342 CD 3C 91     	call Cargamos_registros_con_explosion
2242  9345 CD 23 96     	call Genera_datos_de_impresion
2243  9348 DD E1        	pop ix
2244  934A
2245  934A AF           	xor a
2246  934B 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2247  934C
2248  934C C9           	ret
2249  934D
2250  934D              Siguiente_frame_explosion
2251  934D
2252  934D 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2253  934F
2254  934F              ; Avanza Frame de explosión.
2255  934F
2256  934F DD 6E 07     	ld l,(ix+7)
2257  9352 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2258  9355
2259  9355 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2260  9358
2261  9358 79           	ld a,c
2262  9359 95           	sub l
2263  935A 20 41        	jr nz,1F
2264  935C
2265  935C
2266  935C              ; Fín de la entidad !!!!!!!!!!!!!
2267  935C              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2268  935C
2269  935C              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2270  935C              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2271  935C              ; Entidades_en_curso db 0								; Entidades en pantalla.
2272  935C
2273  935C              ; La entidad eliminada, es la última del nivel ?
2274  935C
2275  935C 3A 45 8C     	ld a,(Numero_de_entidades)
2276  935F A7           	and a
2277  9360 28 30        	jr z,2F
2278  9362
2279  9362              ; Decrementa (Numero_de_entidades)
2280  9362
2281  9362 3D           	dec a
2282  9363 32 45 8C     	ld (Numero_de_entidades),a
2283  9366 21 47 8C     	ld hl,Entidades_en_curso
2284  9369 35           	dec (hl)
2285  936A
2286  936A              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2287  936A              ; IX apunta al 1er .db de la entidad eliminada.
2288  936A
2289  936A 2A 43 8C     	ld hl,(Puntero_indice_master)
2290  936D CD E2 91     	call Extrae_address
2291  9370
2292  9370 DD E5        	push ix
2293  9372 D1           	pop de
2294  9373
2295  9373 01 0C 00     	ld bc,12
2296  9376 ED B0        	ldir
2297  9378
2298  9378              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2299  9378
2300  9378 CD EB 90     	call Obtenemos_puntero_de_impresion
2301  937B
2302  937B DD 6E 05     	ld l,(ix+5)
2303  937E 2C           	inc l
2304  937F DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2305  9382
2306  9382 CD F7 95     	call Genera_coordenadas
2307  9385
2308  9385 ED 4B FE 8B  	ld bc,(Coordenada_X)
2309  9389
2310  9389 DD 71 01     	ld (ix+1),c
2311  938C DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2312  938F
2313  938F AF           	xor a
2314  9390 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2315  9391
2316  9391 C9           	ret
2317  9392
2318  9392              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2319  9392
2320  9392 21 46 8C     2 ld hl,Numero_parcial_de_entidades
2321  9395 35           	dec (hl)
2322  9396 23           	inc hl
2323  9397 35           	dec (hl)
2324  9398
2325  9398 CD 5C 92     	call Limpia_caja_de_entidades
2326  939B 18 A0        	jr Borra_entidad_colisionada
2327  939D
2328  939D 23           1 inc hl
2329  939E 23           	inc hl
2330  939F
2331  939F DD 75 07     	ld (ix+7),l
2332  93A2 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2333  93A5
2334  93A5 18 96        	jr Borra_entidad_colisionada
2335  93A7
2336  93A7              ; ----- ----- ----- ----- -----
2337  93A7
2338  93A7              Genera_explosion_Amadeus
2339  93A7
2340  93A7 21 87 8C     	ld hl,Clock_explosion_Amadeus
2341  93AA 35           	dec (hl)
2342  93AB 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2343  93AD
2344  93AD              Borra_Amadeus_impactado
2345  93AD
2346  93AD CD FD 8E     	call Change_Amadeus
2347  93B0 CD 50 91     	call Cargamos_registros_con_explosion_Amadeus
2348  93B3 CD 71 91     	call Genera_datos_de_impresion_Amadeus
2349  93B6
2350  93B6 21 74 8C     	ld hl,Ctrl_3
2351  93B9 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2352  93BB
2353  93BB AF           	xor a
2354  93BC 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2355  93BD
2356  93BD C9           	ret
2357  93BE
2358  93BE              Siguiente_frame_explosion_Amadeus
2359  93BE
2360  93BE 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2361  93C0
2362  93C0              ; Avanza Frame de explosión.
2363  93C0
2364  93C0 2A B5 89     	ld hl,(Pamm_Amadeus)
2365  93C3 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2366  93C6
2367  93C6 79           	ld a,c
2368  93C7 95           	sub l
2369  93C8 20 0B        	jr nz,1F
2370  93CA
2371  93CA              ; Fín de Amadeus !!!!!!!!!!!!!
2372  93CA              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2373  93CA
2374  93CA AF           	xor a
2375  93CB 32 B2 89     	ld (Impacto_Amadeus),a
2376  93CE 21 74 8C     	ld hl,Ctrl_3
2377  93D1 CB F6        	set 6,(hl)
2378  93D3
2379  93D3 18 D8        	jr Borra_Amadeus_impactado
2380  93D5
2381  93D5 23           1 inc hl
2382  93D6 23           	inc hl
2383  93D7 22 B5 89     	ld (Pamm_Amadeus),hl
2384  93DA 18 D1        	jr Borra_Amadeus_impactado
2385  93DC
2386  93DC              ; ---------------------------------------------------------------
2387  93DC
2388  93DC              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 93DC              ; ******************************************************************************************************************************************************************************************
   2+ 93DC              ;
   3+ 93DC              ;   21/04/24
   4+ 93DC              ;
   5+ 93DC              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 93DC              ;   (XOR) bit a bit.
   7+ 93DC              ;
   8+ 93DC              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 93DC
  10+ 93DC              Derivando_RND
  11+ 93DC
  12+ 93DC 21 F6 88         ld hl,Numeros_aleatorios
  13+ 93DF
  14+ 93DF ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 93E1 C5               push bc
  16+ 93E2              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 93E2 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 93E5              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 93E5
  20+ 93E5 A7           6 and a                                 ; Carry a "0".
  21+ 93E6 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 93E8 30 02            jr nc,1F
  23+ 93EA
  24+ 93EA CB C1            set 0,c
  25+ 93EC
  26+ 93EC 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 93ED E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 93EF 5F               ld e,a
  29+ 93F0
  30+ 93F0 7A               ld a,d
  31+ 93F1 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 93F3 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 93F5
  34+ 93F5 CB 3F            srl a
  35+ 93F7
  36+ 93F7 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 93F8
  38+ 93F8 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 93F9 28 04            jr z,4F
  40+ 93FB
  41+ 93FB CB FF            set 7,a
  42+ 93FD 18 02            jr 5F
  43+ 93FF
  44+ 93FF CB BF        4 res 7,a
  45+ 9401
  46+ 9401 CB 21        5 sla c
  47+ 9403 10 E0            djnz 6B
  48+ 9405
  49+ 9405 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9406
  51+ 9406 77               ld (hl),a
  52+ 9407 23               inc hl
  53+ 9408 C1               pop bc
  54+ 9409 10 D4            djnz 3B
  55+ 940B
  56+ 940B C9               ret
  57+ 940C
  58+ 940C
  59+ 940C
# file closed: RND_Derivando.asm
2389  940C              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 940C              ;---------------------------------------------------------------------------------------------------------------
   2+ 940C              ;
   3+ 940C              ;   13/11/24
   4+ 940C
   5+ 940C              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 940C
   7+ 940C              Genera_movimientos_masticados_del_nivel
   8+ 940C
   9+ 940C              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 940C
  11+ 940C              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 940C              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 940C              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 940C
  15+ 940C 2D           	dec l
  16+ 940D 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 940E 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 940F 4E           	ld c,(hl)
  19+ 9410
  20+ 9410 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9411 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9412
  23+ 9412              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9412
  25+ 9412 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9413
  27+ 9413 CD 51 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9416
  29+ 9416              ;	Caja Master inicializada ???
  30+ 9416
  31+ 9416 7E           	ld a,(hl)
  32+ 9417 A7           	and a
  33+ 9418 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 941A
  35+ 941A              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 941A
  37+ 941A C1           	pop bc
  38+ 941B 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 941C C5           	push bc
  40+ 941D
  41+ 941D CD F1 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9420 CD 85 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9423
  44+ 9423 3A FD 8B     	ld a,(Tipo)
  45+ 9426 CD 61 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9429
  47+ 9429              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9429
  49+ 9429              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9429              ;	ld a,(hl)
  51+ 9429              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9429
  53+ 9429              ;	ld hl,Posicion_inicio
  54+ 9429              ;	ld (hl),a
  55+ 9429
  56+ 9429              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9429              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9429
  59+ 9429 CD 2F 90     	call Construye_movimientos_masticados_entidad
  60+ 942C
  61+ 942C 2A 43 8C     	ld hl,(Puntero_indice_master)
  62+ 942F CD E2 91     	call Extrae_address
  63+ 9432
  64+ 9432 5D           	ld e,l
  65+ 9433 54           	ld d,h
  66+ 9434
  67+ 9434 CD B2 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9437
  69+ 9437              Movimientos_masticados_construidos
  70+ 9437
  71+ 9437 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9438
  73+ 9438 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9439 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 943A
  76+ 943A 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 943B 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 943D
  79+ 943D C9           	ret
  80+ 943E
  81+ 943E              ;---------------------------------------------------------------------------------------------------------------
  82+ 943E              ;
  83+ 943E              ;   9/11/24
  84+ 943E              ;
  85+ 943E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 943E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 943E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 943E              ;	_ de la 1ª entidad del Nivel.
  89+ 943E              ;
  90+ 943E              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 943E
  92+ 943E              ;	MODIFICA: HL,DE y A.
  93+ 943E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 943E
  95+ 943E              Inicializa_1er_Nivel
  96+ 943E
  97+ 943E              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 943E
  99+ 943E 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 9441 CD E2 91     	call Extrae_address
 101+ 9444 ED 53 93 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9448
 103+ 9448 7E           	ld a,(hl)
 104+ 9449 32 45 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 944C
 106+ 944C 2C           	inc l
 107+ 944D 22 95 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9450
 109+ 9450 C9           	ret
 110+ 9451
 111+ 9451              ; ----------------------
 112+ 9451              ;
 113+ 9451              ;	13/11/24
 114+ 9451              ;
 115+ 9451
 116+ 9451              Situa_en_Caja_Master
 117+ 9451
 118+ 9451 CD 70 95         call Calcula_salto_en_BC
 119+ 9454 21 58 89         ld hl,Indice_de_cajas_master
 120+ 9457 A7               and a
 121+ 9458 ED 4A            adc hl,bc
 122+ 945A 22 43 8C       	ld (Puntero_indice_master),hl
 123+ 945D CD E2 91     	call Extrae_address
 124+ 9460 C9           	ret
 125+ 9461
 126+ 9461              ; ----------------------
 127+ 9461
 128+ 9461              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9461              ; 	ld bc,4
 130+ 9461              ; 	ldir
 131+ 9461              ; 	ret
 132+ 9461
 133+ 9461 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9462 CD 70 95         call Calcula_salto_en_BC
 135+ 9465 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9468 A7               and a
 137+ 9469 ED 4A            adc hl,bc
 138+ 946B CD E2 91         call Extrae_address
 139+ 946E 22 2E 8C         ld (Puntero_indice_mov),hl
 140+ 9471 C9               ret
 141+ 9472
 142+ 9472              ;---------------------------------------------------------------------------------------------------------------
 143+ 9472              ;
 144+ 9472              ;   13/11/24
 145+ 9472              ;
 146+ 9472              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9472
 148+ 9472
 149+ 9472              Prepara_Cajas_de_Entidades
 150+ 9472
 151+ 9472              ; Preparamos los punteros de las cajas de entidades:
 152+ 9472
 153+ 9472 CD CC 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9475              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9475 CD BB 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9478
 157+ 9478 2A 95 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 947B
 159+ 947B              ; En este punto:
 160+ 947B              ;
 161+ 947B              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 947B              ; B contiene (Numero_parcial_de_entidades).
 163+ 947B
 164+ 947B C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 947C
 166+ 947C 7E           	ld a,(hl)
 167+ 947D
 168+ 947D CD 51 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9480
 170+ 9480 ED 5B 3D 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9484
 172+ 9484 D5           	push de
 173+ 9485 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9487
 175+ 9487 01 0C 00     	ld bc,12
 176+ 948A ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 948C              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 948C
 179+ 948C              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 948C              ;
 181+ 948C              ;
 182+ 948C              ; ------------------------------------------------------ IX
 183+ 948C              ; ------------------------------------------------------ IX
 184+ 948C              ; ------------------------------------------------------ IX
 185+ 948C              ; ------------------------------------------------------ IX
 186+ 948C
 187+ 948C DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 948E
 189+ 948E CD EB 90     	call Obtenemos_puntero_de_impresion
 190+ 9491
 191+ 9491              ;	jr $
 192+ 9491
 193+ 9491 DD 6E 05     	ld l,(ix+5)
 194+ 9494 2C           	inc l
 195+ 9495 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 196+ 9498
 197+ 9498 D5           	push de														; Push (Puntero_objeto).
 198+ 9499 E5           	push hl														; Push (Puntero_de_impresion).
 199+ 949A
 200+ 949A CD F7 95     	call Genera_coordenadas
 201+ 949D
 202+ 949D ED 4B FE 8B  	ld bc,(Coordenada_X)
 203+ 94A1
 204+ 94A1 DD 71 01     	ld (ix+1),c
 205+ 94A4 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 206+ 94A7
 207+ 94A7 CD 93 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 208+ 94AA
 209+ 94AA DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 210+ 94AC D1           	pop de														; Pop (Puntero_objeto) en DE.
 211+ 94AD
 212+ 94AD CD 23 96     	call Genera_datos_de_impresion
 213+ 94B0
 214+ 94B0 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 215+ 94B2
 216+ 94B2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 94B2
 218+ 94B2 CD 29 95     	call Decrementa_Contador_de_mov_masticados
 219+ 94B5 CD 06 95     	call Limpiamos_bandeja_DRAW
 220+ 94B8 CD 2C 92     	call Incrementa_punteros_de_cajas
 221+ 94BB
 222+ 94BB              ; Siguiente entidad del Nivel.
 223+ 94BB
 224+ 94BB 2A 95 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 225+ 94BE 23           	inc hl 														; _ entidad del Nivel.
 226+ 94BF
 227+ 94BF C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 228+ 94C0
 229+ 94C0 10 B9        	djnz 1B
 230+ 94C2
 231+ 94C2 C9           	ret
 232+ 94C3
 233+ 94C3              ; -------------------------------------------------------------------------------------------------------------------
 234+ 94C3              ;
 235+ 94C3              ;	27/5/24
 236+ 94C3              ;
 237+ 94C3              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 238+ 94C3              ;
 239+ 94C3
 240+ 94C3              ; 	Cargamos la definición de Amadeus en DRAW.
 241+ 94C3              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 242+ 94C3
 243+ 94C3              Inicia_Amadeus
 244+ 94C3
 245+ 94C3 21 2A 8A     	ld hl,Definicion_Amadeus
 246+ 94C6 CD 85 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 94C9
 248+ 94C9
 249+ 94C9              Construye_movimientos_masticados_Amadeus
 250+ 94C9
 251+ 94C9 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 94CC CD B2 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 94CF              ;															; _ el (Contador_de_mov_masticados).
 254+ 94CF
 255+ 94CF              ;	jr $
 256+ 94CF
 257+ 94CF CD E8 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 258+ 94D2              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 259+ 94D2
 260+ 94D2              ; Generamos movimientos masticados de Amadeus.
 261+ 94D2
 262+ 94D2 06 79        	ld b,121												; $0079, 121d.
 263+ 94D4
 264+ 94D4 C5           1 push bc
 265+ 94D5 CD 3A 98     	call Draw
 266+ 94D8 CD 97 90     	call Guarda_movimiento_masticado
 267+ 94DB
 268+ 94DB CD A4 9B     	call Mov_right
 269+ 94DE CD A4 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 270+ 94E1
 271+ 94E1 C1           	pop bc
 272+ 94E2 10 F0        	djnz 1B
 273+ 94E4
 274+ 94E4              ; Todos los movimientos masticados de Amadeus se han creado.
 275+ 94E4
 276+ 94E4              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 277+ 94E4              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 278+ 94E4
 279+ 94E4 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 280+ 94E7 01 08 00     	ld bc,8
 281+ 94EA A7           	and a
 282+ 94EB ED 42        	sbc hl,bc
 283+ 94ED 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 284+ 94F0
 285+ 94F0 C9           	ret
 286+ 94F1
 287+ 94F1              ; ---------------------------------------------------------------------
 288+ 94F1              ;
 289+ 94F1              ;	10/02/24
 290+ 94F1              ;
 291+ 94F1              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 292+ 94F1              ;
 293+ 94F1              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 294+ 94F1
 295+ 94F1              Definicion_segun_tipo
 296+ 94F1
 297+ 94F1 CD 70 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 298+ 94F4 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 299+ 94F7 CD 7B 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 300+ 94FA C9           	ret
 301+ 94FB
 302+ 94FB              ; ---------------------------------------------------------------------
 303+ 94FB              ;
 304+ 94FB              ;	6/7/24
 305+ 94FB
 306+ 94FB
 307+ 94FB              Store_Restore_cajas
 308+ 94FB
 309+ 94FB ED 5B 3D 8C  	ld de,(Puntero_store_caja)
 310+ 94FF CD B2 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 311+ 9502 CD 2C 92     	call Incrementa_punteros_de_cajas
 312+ 9505 C9           	ret
 313+ 9506
 314+ 9506              ; ---------------------------------------------------------------------
 315+ 9506              ;
 316+ 9506              ;	23/6/24
 317+ 9506              ;
 318+ 9506              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 319+ 9506              ;
 320+ 9506              ;	MODIFY: HL
 321+ 9506
 322+ 9506              Limpiamos_bandeja_DRAW
 323+ 9506
 324+ 9506 ED 73 4C 8C  	ld (Stack),sp
 325+ 950A 31 22 8C     	ld sp,Vel_left
 326+ 950D
 327+ 950D AF           	xor a
 328+ 950E 67           	ld h,a
 329+ 950F 6F           	ld l,a
 330+ 9510
 331+ 9510 E5           	push hl
 332+ 9511 E5           	push hl
 333+ 9512 E5           	push hl
 334+ 9513 E5           	push hl
 335+ 9514 E5           	push hl
 336+ 9515 E5           	push hl
 337+ 9516 E5           	push hl
 338+ 9517 E5           	push hl
 339+ 9518 E5           	push hl
 340+ 9519 E5           	push hl
 341+ 951A E5           	push hl
 342+ 951B E5           	push hl
 343+ 951C E5           	push hl
 344+ 951D E5           	push hl
 345+ 951E E5           	push hl
 346+ 951F E5           	push hl
 347+ 9520 E5           	push hl
 348+ 9521 E5           	push hl
 349+ 9522
 350+ 9522 33           	inc sp
 351+ 9523
 352+ 9523 E5           	push hl
 353+ 9524 ED 7B 4C 8C  	ld sp,(Stack)
 354+ 9528
 355+ 9528 C9           	ret
 356+ 9529
 357+ 9529              ; ---------------------------------------------------------------------
 358+ 9529              ;
 359+ 9529              ;	23/11/24
 360+ 9529              ;
 361+ 9529              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 362+ 9529
 363+ 9529              Decrementa_Contador_de_mov_masticados
 364+ 9529
 365+ 9529 DD 6E 09     	ld l,(ix+9)
 366+ 952C DD 66 0A     	ld h,(ix+10)
 367+ 952F
 368+ 952F 2B           	dec hl
 369+ 9530
 370+ 9530 DD 75 09     	ld (ix+9),l
 371+ 9533 DD 74 0A     	ld (ix+10),h
 372+ 9536
 373+ 9536 C9           	ret
 374+ 9537
 375+ 9537              ; ---------------------------------------------------------------------
 376+ 9537              ;
 377+ 9537              ;	24/11/24
 378+ 9537
 379+ 9537              Reinicia_entidad_maliciosa
 380+ 9537
 381+ 9537              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 382+ 9537
 383+ 9537 CD 02 A0     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 384+ 953A CD 0F A0     	call Transfiere_datos_de_contadores
 385+ 953D
 386+ 953D              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 387+ 953D
 388+ 953D DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 389+ 9540 CD F1 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 390+ 9543
 391+ 9543 7D           	ld a,l
 392+ 9544 C6 0B        	add 11
 393+ 9546 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 394+ 9547
 395+ 9547 CD E2 91     	call Extrae_address
 396+ 954A
 397+ 954A DD 75 07     	ld (ix+7),l
 398+ 954D DD 74 08     	ld (ix+8),h
 399+ 9550
 400+ 9550 CD EB 90     	call Obtenemos_puntero_de_impresion
 401+ 9553
 402+ 9553              ; Incrementa (Contador_de_vueltas)x2.
 403+ 9553              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 404+ 9553
 405+ 9553              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 406+ 9553              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 407+ 9553              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 408+ 9553              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 409+ 9553              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 410+ 9553
 411+ 9553 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 412+ 9557
 413+ 9557 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 414+ 955A CB 2F        	sra a
 415+ 955C CB 2F        	sra a
 416+ 955E
 417+ 955E DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 418+ 9561
 419+ 9561 3E 40        	ld a,$40
 420+ 9563 DD BE 03     	cp (ix+3)
 421+ 9566 C0           	ret nz
 422+ 9567
 423+ 9567              ; Límitador.
 424+ 9567
 425+ 9567              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 426+ 9567
 427+ 9567 DD CB 03 2E  	sra (ix+3)
 428+ 956B DD CB 0B 2E  	sra (ix+11)
 429+ 956F
 430+ 956F C9           	ret
 431+ 9570
 432+ 9570              ;	------------------------------------------------------------------------------------
 433+ 9570              ;
 434+ 9570              ;	09/11/24
 435+ 9570              ;
 436+ 9570              ;	INPUTS:	A contiene el (Tipo) de entidad.
 437+ 9570              ;
 438+ 9570              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 439+ 9570              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 440+ 9570
 441+ 9570 A7           Calcula_salto_en_BC and a
 442+ 9571 28 04        	jr z,1F
 443+ 9573 CB 27        	sla a
 444+ 9575 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 445+ 9577 4F           1 ld c,a
 446+ 9578 06 00        	ld b,0
 447+ 957A C9           	ret
 448+ 957B
 449+ 957B              ; ------------------------------------------------------------------
 450+ 957B              ;
 451+ 957B              ;	19/1/24
 452+ 957B              ;
 453+ 957B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 454+ 957B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 455+ 957B
 456+ 957B A7           Situa_en_datos_de_definicion and a
 457+ 957C ED 4A        	adc hl,bc
 458+ 957E CD E2 91     	call Extrae_address
 459+ 9581 22 4A 8C         ld (Datos_de_entidad),hl
 460+ 9584 C9           	ret
 461+ 9585
 462+ 9585              ; ----------------------------------------------------------------------------------------------------------
 463+ 9585              ;
 464+ 9585              ;	24/6/24
 465+ 9585              ;
 466+ 9585              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 467+ 9585              ;	_ de entidad.
 468+ 9585              ;
 469+ 9585              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 470+ 9585              ;
 471+ 9585              ;
 472+ 9585              ;	MODIFICA: HL,DE y BC
 473+ 9585
 474+ 9585
 475+ 9585              Definicion_de_entidad_a_bandeja_DRAW
 476+ 9585
 477+ 9585 11 FD 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 478+ 9588 7E           	ld a,(hl) 									; Volcamos Tipo.
 479+ 9589 12           	ld (de),a
 480+ 958A 23           	inc hl
 481+ 958B              ;
 482+ 958B 11 0B 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 483+ 958E 01 02 00     	ld bc,2
 484+ 9591 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 9593              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 9593 11 00 8C     	ld de,Contador_de_vueltas
 487+ 9596 7E           	ld a,(hl)
 488+ 9597 12           	ld (de),a
 489+ 9598 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 490+ 9599
 491+ 9599 11 12 8C     	ld de,Indice_Sprite_der
 492+ 959C 01 04 00     	ld bc,4
 493+ 959F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 494+ 95A1
 495+ 95A1 11 1A 8C     	ld de,Posicion_inicio
 496+ 95A4 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 497+ 95A7 ED B0        	ldir 									; Vuelco (Frames_explosion).
 498+ 95A9
 499+ 95A9 11 04 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 500+ 95AC 01 02 00     	ld bc,2
 501+ 95AF ED B0        	ldir
 502+ 95B1
 503+ 95B1 C9           	ret
 504+ 95B2
 505+ 95B2              ; ----------------------------------------------------------------------------------------------------------
 506+ 95B2              ;
 507+ 95B2              ;	1/8/24
 508+ 95B2              ;
 509+ 95B2
 510+ 95B2              Parametros_de_bandeja_DRAW_a_caja
 511+ 95B2
 512+ 95B2 21 FD 8B     	ld hl,Bandeja_DRAW
 513+ 95B5 01 0C 00     	ld bc,12
 514+ 95B8 ED B0        	ldir
 515+ 95BA C9           	ret
 516+ 95BB
 517+ 95BB              ;---------------------------------------------------------------------------------------------------------------
 518+ 95BB              ;
 519+ 95BB              ;	13/11/24
 520+ 95BB              ;
 521+ 95BB              ;	INICIALIZA (Numero_parcial_de_entidades).
 522+ 95BB              ;
 523+ 95BB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 524+ 95BB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 525+ 95BB
 526+ 95BB              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 527+ 95BB              ;			- Actualiza (Numero_de_entidades).
 528+ 95BB
 529+ 95BB              ;	MODIFICA: A y B.
 530+ 95BB
 531+ 95BB
 532+ 95BB              Inicializa_Numero_parcial_de_entidades
 533+ 95BB
 534+ 95BB 3A 45 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 535+ 95BE FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 536+ 95C0 38 0E        	jr c,1F
 537+ 95C2 28 0C        	jr z,1F
 538+ 95C4
 539+ 95C4              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 540+ 95C4              ; Actualizamos variables.
 541+ 95C4
 542+ 95C4 D6 06        	sub 6
 543+ 95C6 32 45 8C     	ld (Numero_de_entidades),a
 544+ 95C9 3E 06        	ld a,6
 545+ 95CB 32 46 8C     	ld (Numero_parcial_de_entidades),a
 546+ 95CE 47           	ld b,a
 547+ 95CF C9           	ret
 548+ 95D0
 549+ 95D0              ; El nº total de entidades no supera el nº de cajas de entidades.
 550+ 95D0              ; (Numero_de_entidades)="0".
 551+ 95D0
 552+ 95D0 32 46 8C     1 ld (Numero_parcial_de_entidades),a
 553+ 95D3 47           	ld b,a
 554+ 95D4 AF           	xor a
 555+ 95D5 32 45 8C     	ld (Numero_de_entidades),a
 556+ 95D8 C9           	ret
 557+ 95D9
# file closed: Rutinas_de_inicio_y_niveles.asm
2390  95D9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 95D9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 95D9              ;
   3+ 95D9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 95D9              ;
   5+ 95D9              ; *****************************************************************************************************************************************************************************************
   6+ 95D9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 95D9
   8+ 95D9 7C           calcula_tercio ld a,h
   9+ 95DA E6 18        	and $18
  10+ 95DC CB 2F        	sra a
  11+ 95DE CB 2F        	sra a
  12+ 95E0 CB 2F        	sra a
  13+ 95E2 C9           	ret
  14+ 95E3
# file closed: calcula_tercio.asm
2391  95E3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 95E3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 95E3              ;
   3+ 95E3              ;
   4+ 95E3              ;	CLS.
   5+ 95E3              ;
   6+ 95E3              ;	Limpia la pantalla y define sus atributos.
   7+ 95E3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 95E3              ;
   9+ 95E3              ;	COLORES: 0 ..... NEGRO
  10+ 95E3              ;    		 1 ..... AZUL
  11+ 95E3              ; 			 2 ..... ROJO
  12+ 95E3              ;			 3 ..... MAGENTA
  13+ 95E3              ; 			 4 ..... VERDE
  14+ 95E3              ; 			 5 ..... CIAN
  15+ 95E3              ;			 6 ..... AMARILLO
  16+ 95E3              ; 			 7 ..... BLANCO
  17+ 95E3              ;
  18+ 95E3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 95E3              ;
  20+ 95E3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 95E3
  22+ 95E3
  23+ 95E3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 95E6 11 01 40     	LD DE,$4001
  25+ 95E9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 95EC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 95EE ED B0        	LDIR
  28+ 95F0 01 FF 02     	LD BC,767
  29+ 95F3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 95F4 ED B0        	LDIR
  31+ 95F6 C9           	ret
  32+ 95F7
# file closed: Cls.asm
2392  95F7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95F7              ; ------------------------------------------------------------------------
   2+ 95F7              ;
   3+ 95F7              ;	30/1/24
   4+ 95F7              ;
   5+ 95F7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95F7              ;	Fila superior "0", Columna izquierda "0".
   7+ 95F7              ;
   8+ 95F7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95F7              ;
  10+ 95F7              ;	Modifica: A,BC y DE.
  11+ 95F7
  12+ 95F7              Genera_coordenadas
  13+ 95F7
  14+ 95F7 7D           	ld a,l
  15+ 95F8 E6 1F        	and $1f
  16+ 95FA
  17+ 95FA 32 FE 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 95FD
  19+ 95FD 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 95FE FE 40        	cp $40
  21+ 9600 38 1C        	jr c,4F
  22+ 9602
  23+ 9602 CD D9 95     	call calcula_tercio
  24+ 9605 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9606
  26+ 9606 1E 00        	ld e,0
  27+ 9608 7D           	ld a,l
  28+ 9609 E6 E0        	and $e0
  29+ 960B 28 01        	jr z,1F
  30+ 960D 04           	inc b
  31+ 960E
  32+ 960E 04           1 inc b
  33+ 960F 05           	dec b
  34+ 9610 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9612              ;														; _ , salimos.
  36+ 9612 1C           3 inc e
  37+ 9613 D6 20        	sub 32
  38+ 9615 20 FB        	jr nz,3B
  39+ 9617 10 F5        	djnz 1B
  40+ 9619
  41+ 9619 7B           2 ld a,e
  42+ 961A 32 FF 8B     	ld (Coordenada_y),a
  43+ 961D C9           	ret
  44+ 961E
  45+ 961E AF           4 xor a
  46+ 961F 32 FF 8B     	ld (Coordenada_y),a
  47+ 9622 C9           	ret
  48+ 9623
# file closed: Genera_coordenadas.asm
2393  9623              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9623              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9623              ;
   3+ 9623              ;	20/09/24
   4+ 9623              ;
   5+ 9623              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9623              ;   DE contiene Puntero_objeto.
   7+ 9623              ;   IX contiene el Puntero de impresión.
   8+ 9623
   9+ 9623              Genera_datos_de_impresion
  10+ 9623
  11+ 9623 ED 73 4C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9627
  13+ 9627 2A 6E 8C         ld hl,(Scanlines_album_SP)
  14+ 962A
  15+ 962A 3E 05            ld a,5
  16+ 962C 85               add l
  17+ 962D 6F               ld l,a
  18+ 962E
  19+ 962E F9               ld sp,hl
  20+ 962F 22 6E 8C         ld (Scanlines_album_SP),hl
  21+ 9632
  22+ 9632 21 00 00         ld hl,0
  23+ 9635
  24+ 9635 DD E5            push ix
  25+ 9637 3B               dec sp
  26+ 9638 ED 7A            adc hl,sp
  27+ 963A D5               push de
  28+ 963B
  29+ 963B              ; Recuperamos SP.
  30+ 963B
  31+ 963B ED 7B 4C 8C      ld sp,(Stack)
  32+ 963F
  33+ 963F E5               push hl
  34+ 9640 F1               pop af
  35+ 9641 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9642
  37+ 9642              ; Tenemos el encabezado listo.
  38+ 9642              ; Preparamos registros para generar los scanlines.
  39+ 9642
  40+ 9642 DD E5            push ix
  41+ 9644 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9645
  43+ 9645 ED 5B 6E 8C      ld de,(Scanlines_album_SP)
  44+ 9649
  45+ 9649              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9649              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9649
  48+ 9649 7C               ld a,h
  49+ 964A FE 50            cp $50
  50+ 964C 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 964E
  52+ 964E 20 05            jr nz,2F
  53+ 9650
  54+ 9650 7D               ld a,l
  55+ 9651 FE E0            cp $e0
  56+ 9653 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9655
  58+ 9655 7D           2 ld a,l
  59+ 9656 FE C0            cp $c0
  60+ 9658 D2 EE 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 965B
  62+ 965B              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 965B
  64+ 965B CD EC 9A         call NextScan
  65+ 965E EB               ex de,hl
  66+ 965F
  67+ 965F 73               ld (hl),e
  68+ 9660 23               inc hl
  69+ 9661 72               ld (hl),d
  70+ 9662 23               inc hl
  71+ 9663
  72+ 9663 EB               ex de,hl
  73+ 9664
  74+ 9664 CD EC 9A         call NextScan
  75+ 9667 EB               ex de,hl
  76+ 9668
  77+ 9668 73               ld (hl),e
  78+ 9669 23               inc hl
  79+ 966A 72               ld (hl),d
  80+ 966B 23               inc hl
  81+ 966C
  82+ 966C EB               ex de,hl
  83+ 966D
  84+ 966D CD EC 9A         call NextScan
  85+ 9670 EB               ex de,hl
  86+ 9671
  87+ 9671 73               ld (hl),e
  88+ 9672 23               inc hl
  89+ 9673 72               ld (hl),d
  90+ 9674 23               inc hl
  91+ 9675
  92+ 9675 EB               ex de,hl
  93+ 9676
  94+ 9676 CD EC 9A         call NextScan
  95+ 9679 EB               ex de,hl
  96+ 967A
  97+ 967A 73               ld (hl),e
  98+ 967B 23               inc hl
  99+ 967C 72               ld (hl),d
 100+ 967D 23               inc hl
 101+ 967E
 102+ 967E EB               ex de,hl
 103+ 967F
 104+ 967F CD EC 9A         call NextScan
 105+ 9682 EB               ex de,hl
 106+ 9683
 107+ 9683 73               ld (hl),e
 108+ 9684 23               inc hl
 109+ 9685 72               ld (hl),d
 110+ 9686 23               inc hl
 111+ 9687
 112+ 9687 EB               ex de,hl
 113+ 9688
 114+ 9688 CD EC 9A         call NextScan
 115+ 968B EB               ex de,hl
 116+ 968C
 117+ 968C 73               ld (hl),e
 118+ 968D 23               inc hl
 119+ 968E 72               ld (hl),d
 120+ 968F 23               inc hl
 121+ 9690
 122+ 9690 EB               ex de,hl
 123+ 9691
 124+ 9691 CD EC 9A         call NextScan
 125+ 9694 EB               ex de,hl
 126+ 9695
 127+ 9695 73               ld (hl),e
 128+ 9696 23               inc hl
 129+ 9697 72               ld (hl),d
 130+ 9698 23               inc hl
 131+ 9699
 132+ 9699 EB               ex de,hl
 133+ 969A
 134+ 969A CD EC 9A         call NextScan
 135+ 969D EB               ex de,hl
 136+ 969E
 137+ 969E 73               ld (hl),e
 138+ 969F 23               inc hl
 139+ 96A0 72               ld (hl),d
 140+ 96A1 23               inc hl
 141+ 96A2
 142+ 96A2 EB               ex de,hl
 143+ 96A3
 144+ 96A3 CD EC 9A         call NextScan
 145+ 96A6 EB               ex de,hl
 146+ 96A7
 147+ 96A7 73               ld (hl),e
 148+ 96A8 23               inc hl
 149+ 96A9 72               ld (hl),d
 150+ 96AA 23               inc hl
 151+ 96AB
 152+ 96AB EB               ex de,hl
 153+ 96AC
 154+ 96AC CD EC 9A         call NextScan
 155+ 96AF EB               ex de,hl
 156+ 96B0
 157+ 96B0 73               ld (hl),e
 158+ 96B1 23               inc hl
 159+ 96B2 72               ld (hl),d
 160+ 96B3 23               inc hl
 161+ 96B4
 162+ 96B4 EB               ex de,hl
 163+ 96B5
 164+ 96B5 CD EC 9A         call NextScan
 165+ 96B8 EB               ex de,hl
 166+ 96B9
 167+ 96B9 73               ld (hl),e
 168+ 96BA 23               inc hl
 169+ 96BB 72               ld (hl),d
 170+ 96BC 23               inc hl
 171+ 96BD
 172+ 96BD EB               ex de,hl
 173+ 96BE
 174+ 96BE CD EC 9A         call NextScan
 175+ 96C1 EB               ex de,hl
 176+ 96C2
 177+ 96C2 73               ld (hl),e
 178+ 96C3 23               inc hl
 179+ 96C4 72               ld (hl),d
 180+ 96C5 23               inc hl
 181+ 96C6
 182+ 96C6 EB               ex de,hl
 183+ 96C7
 184+ 96C7 CD EC 9A         call NextScan
 185+ 96CA EB               ex de,hl
 186+ 96CB
 187+ 96CB 73               ld (hl),e
 188+ 96CC 23               inc hl
 189+ 96CD 72               ld (hl),d
 190+ 96CE 23               inc hl
 191+ 96CF
 192+ 96CF EB               ex de,hl
 193+ 96D0
 194+ 96D0 CD EC 9A         call NextScan
 195+ 96D3 EB               ex de,hl
 196+ 96D4
 197+ 96D4 73               ld (hl),e
 198+ 96D5 23               inc hl
 199+ 96D6 72               ld (hl),d
 200+ 96D7 23               inc hl
 201+ 96D8
 202+ 96D8 EB               ex de,hl
 203+ 96D9
 204+ 96D9 CD EC 9A         call NextScan
 205+ 96DC EB               ex de,hl
 206+ 96DD
 207+ 96DD              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 96DD              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 96DD              ;   _ generar sus scanlines.
 210+ 96DD
 211+ 96DD              ;    ld (Puntero_de_impresion_disparo),de
 212+ 96DD
 213+ 96DD 73               ld (hl),e
 214+ 96DE 23               inc hl
 215+ 96DF 72               ld (hl),d
 216+ 96E0 23               inc hl
 217+ 96E1
 218+ 96E1              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 96E1
 220+ 96E1 22 6E 8C         ld (Scanlines_album_SP),hl
 221+ 96E4
 222+ 96E4 EB               ex de,hl
 223+ 96E5
 224+ 96E5              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 96E5
 226+ 96E5              ;    call NextScan
 227+ 96E5              ;    call NextScan
 228+ 96E5
 229+ 96E5 22 79 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 96E8
 231+ 96E8              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 96E8
 233+ 96E8 08               ex af,af
 234+ 96E9
 235+ 96E9 F5               push af
 236+ 96EA E1               pop hl
 237+ 96EB
 238+ 96EB 36 10            ld (hl),16
 239+ 96ED
 240+ 96ED C9               ret
 241+ 96EE
 242+ 96EE              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 96EE
 244+ 96EE              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 96EE
 246+ 96EE 3E 57            ld a,$57
 247+ 96F0 94               sub h
 248+ 96F1 47               ld b,a
 249+ 96F2
 250+ 96F2 3E DF            ld a,$df
 251+ 96F4 BD               cp l
 252+ 96F5 38 04            jr c,1F
 253+ 96F7
 254+ 96F7 3E 08            ld a,8
 255+ 96F9 80               add b
 256+ 96FA 47               ld b,a
 257+ 96FB
 258+ 96FB              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 96FB              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 96FB
 261+ 96FB 48           1 ld c,b
 262+ 96FC 0C               inc c
 263+ 96FD
 264+ 96FD 04               inc b
 265+ 96FE 05               dec b
 266+ 96FF 20 02            jr nz,3F
 267+ 9701
 268+ 9701 18 0B            jr 6F
 269+ 9703
 270+ 9703 CD EC 9A     3 call NextScan
 271+ 9706 EB               ex de,hl
 272+ 9707
 273+ 9707 73               ld (hl),e
 274+ 9708 23               inc hl
 275+ 9709 72               ld (hl),d
 276+ 970A 23               inc hl
 277+ 970B
 278+ 970B EB               ex de,hl
 279+ 970C 10 F5            djnz 3B
 280+ 970E
 281+ 970E ED 53 6E 8C  6 ld (Scanlines_album_SP),de
 282+ 9712
 283+ 9712 08           5 ex af,af
 284+ 9713 F5               push af
 285+ 9714 E1               pop hl
 286+ 9715
 287+ 9715 71               ld (hl),c
 288+ 9716
 289+ 9716 C9               ret
 290+ 9717
# file closed: Genera_datos_de_impresion.asm
2394  9717              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9717              ; -----------------------------------------------------------------------------
   2+ 9717              ;
   3+ 9717              ;   11/03/24
   4+ 9717              ;
   5+ 9717
   6+ 9717              Pinta_Sprites
   7+ 9717
   8+ 9717              ;    ld hl,(Scanlines_album_SP)
   9+ 9717              ;    call Extrae_address
  10+ 9717
  11+ 9717              ;    inc h
  12+ 9717              ;    dec h
  13+ 9717              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9717
  15+ 9717 ED 73 4C 8C      ld (Stack),sp
  16+ 971B
  17+ 971B EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 971C              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 971C 2C               inc l
  20+ 971D 2C               inc l
  21+ 971E
  22+ 971E 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 971F
  24+ 971F 2C               inc l
  25+ 9720 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9721
  27+ 9721              ;   Seleccionamos rutina de impresión:
  28+ 9721
  29+ 9721 3E 10            ld a,16
  30+ 9723 B8               cp b
  31+ 9724 C2 20 98         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9727
  33+ 9727              ;   Rutinas:
  34+ 9727
  35+ 9727              Pinta_rapido    ;   1520 t/states.
  36+ 9727
  37+ 9727 E1               pop hl
  38+ 9728
  39+ 9728 1A               ld a,(de)
  40+ 9729 AE               xor (hl)
  41+ 972A 77               ld (hl),a
  42+ 972B 2C               inc l
  43+ 972C 1C               inc e
  44+ 972D 1A               ld a,(de)
  45+ 972E AE               xor (hl)
  46+ 972F 77               ld (hl),a
  47+ 9730 2C               inc l
  48+ 9731 1C               inc e
  49+ 9732 1A               ld a,(de)
  50+ 9733 AE               xor (hl)
  51+ 9734 77               ld (hl),a
  52+ 9735 13               inc de
  53+ 9736
  54+ 9736 E1               pop hl
  55+ 9737
  56+ 9737 1A               ld a,(de)
  57+ 9738 AE               xor (hl)
  58+ 9739 77               ld (hl),a
  59+ 973A 2C               inc l
  60+ 973B 1C               inc e
  61+ 973C 1A               ld a,(de)
  62+ 973D AE               xor (hl)
  63+ 973E 77               ld (hl),a
  64+ 973F 2C               inc l
  65+ 9740 1C               inc e
  66+ 9741 1A               ld a,(de)
  67+ 9742 AE               xor (hl)
  68+ 9743 77               ld (hl),a
  69+ 9744 13               inc de
  70+ 9745
  71+ 9745 E1               pop hl
  72+ 9746
  73+ 9746 1A               ld a,(de)
  74+ 9747 AE               xor (hl)
  75+ 9748 77               ld (hl),a
  76+ 9749 2C               inc l
  77+ 974A 1C               inc e
  78+ 974B 1A               ld a,(de)
  79+ 974C AE               xor (hl)
  80+ 974D 77               ld (hl),a
  81+ 974E 2C               inc l
  82+ 974F 1C               inc e
  83+ 9750 1A               ld a,(de)
  84+ 9751 AE               xor (hl)
  85+ 9752 77               ld (hl),a
  86+ 9753 13               inc de
  87+ 9754
  88+ 9754 E1               pop hl
  89+ 9755
  90+ 9755 1A               ld a,(de)
  91+ 9756 AE               xor (hl)
  92+ 9757 77               ld (hl),a
  93+ 9758 2C               inc l
  94+ 9759 1C               inc e
  95+ 975A 1A               ld a,(de)
  96+ 975B AE               xor (hl)
  97+ 975C 77               ld (hl),a
  98+ 975D 2C               inc l
  99+ 975E 1C               inc e
 100+ 975F 1A               ld a,(de)
 101+ 9760 AE               xor (hl)
 102+ 9761 77               ld (hl),a
 103+ 9762 13               inc de
 104+ 9763
 105+ 9763 E1               pop hl
 106+ 9764
 107+ 9764 1A               ld a,(de)
 108+ 9765 AE               xor (hl)
 109+ 9766 77               ld (hl),a
 110+ 9767 2C               inc l
 111+ 9768 1C               inc e
 112+ 9769 1A               ld a,(de)
 113+ 976A AE               xor (hl)
 114+ 976B 77               ld (hl),a
 115+ 976C 2C               inc l
 116+ 976D 1C               inc e
 117+ 976E 1A               ld a,(de)
 118+ 976F AE               xor (hl)
 119+ 9770 77               ld (hl),a
 120+ 9771 13               inc de
 121+ 9772
 122+ 9772 E1               pop hl
 123+ 9773
 124+ 9773 1A               ld a,(de)
 125+ 9774 AE               xor (hl)
 126+ 9775 77               ld (hl),a
 127+ 9776 2C               inc l
 128+ 9777 1C               inc e
 129+ 9778 1A               ld a,(de)
 130+ 9779 AE               xor (hl)
 131+ 977A 77               ld (hl),a
 132+ 977B 2C               inc l
 133+ 977C 1C               inc e
 134+ 977D 1A               ld a,(de)
 135+ 977E AE               xor (hl)
 136+ 977F 77               ld (hl),a
 137+ 9780 13               inc de
 138+ 9781
 139+ 9781 E1               pop hl
 140+ 9782
 141+ 9782 1A               ld a,(de)
 142+ 9783 AE               xor (hl)
 143+ 9784 77               ld (hl),a
 144+ 9785 2C               inc l
 145+ 9786 1C               inc e
 146+ 9787 1A               ld a,(de)
 147+ 9788 AE               xor (hl)
 148+ 9789 77               ld (hl),a
 149+ 978A 2C               inc l
 150+ 978B 1C               inc e
 151+ 978C 1A               ld a,(de)
 152+ 978D AE               xor (hl)
 153+ 978E 77               ld (hl),a
 154+ 978F 13               inc de
 155+ 9790
 156+ 9790 E1               pop hl
 157+ 9791
 158+ 9791 1A               ld a,(de)
 159+ 9792 AE               xor (hl)
 160+ 9793 77               ld (hl),a
 161+ 9794 2C               inc l
 162+ 9795 1C               inc e
 163+ 9796 1A               ld a,(de)
 164+ 9797 AE               xor (hl)
 165+ 9798 77               ld (hl),a
 166+ 9799 2C               inc l
 167+ 979A 1C               inc e
 168+ 979B 1A               ld a,(de)
 169+ 979C AE               xor (hl)
 170+ 979D 77               ld (hl),a
 171+ 979E 13               inc de
 172+ 979F
 173+ 979F E1               pop hl
 174+ 97A0
 175+ 97A0 1A               ld a,(de)
 176+ 97A1 AE               xor (hl)
 177+ 97A2 77               ld (hl),a
 178+ 97A3 2C               inc l
 179+ 97A4 1C               inc e
 180+ 97A5 1A               ld a,(de)
 181+ 97A6 AE               xor (hl)
 182+ 97A7 77               ld (hl),a
 183+ 97A8 2C               inc l
 184+ 97A9 1C               inc e
 185+ 97AA 1A               ld a,(de)
 186+ 97AB AE               xor (hl)
 187+ 97AC 77               ld (hl),a
 188+ 97AD 13               inc de
 189+ 97AE
 190+ 97AE E1               pop hl
 191+ 97AF
 192+ 97AF 1A               ld a,(de)
 193+ 97B0 AE               xor (hl)
 194+ 97B1 77               ld (hl),a
 195+ 97B2 2C               inc l
 196+ 97B3 1C               inc e
 197+ 97B4 1A               ld a,(de)
 198+ 97B5 AE               xor (hl)
 199+ 97B6 77               ld (hl),a
 200+ 97B7 2C               inc l
 201+ 97B8 1C               inc e
 202+ 97B9 1A               ld a,(de)
 203+ 97BA AE               xor (hl)
 204+ 97BB 77               ld (hl),a
 205+ 97BC 13               inc de
 206+ 97BD
 207+ 97BD E1               pop hl
 208+ 97BE
 209+ 97BE 1A               ld a,(de)
 210+ 97BF AE               xor (hl)
 211+ 97C0 77               ld (hl),a
 212+ 97C1 2C               inc l
 213+ 97C2 1C               inc e
 214+ 97C3 1A               ld a,(de)
 215+ 97C4 AE               xor (hl)
 216+ 97C5 77               ld (hl),a
 217+ 97C6 2C               inc l
 218+ 97C7 1C               inc e
 219+ 97C8 1A               ld a,(de)
 220+ 97C9 AE               xor (hl)
 221+ 97CA 77               ld (hl),a
 222+ 97CB 13               inc de
 223+ 97CC
 224+ 97CC E1               pop hl
 225+ 97CD
 226+ 97CD 1A               ld a,(de)
 227+ 97CE AE               xor (hl)
 228+ 97CF 77               ld (hl),a
 229+ 97D0 2C               inc l
 230+ 97D1 1C               inc e
 231+ 97D2 1A               ld a,(de)
 232+ 97D3 AE               xor (hl)
 233+ 97D4 77               ld (hl),a
 234+ 97D5 2C               inc l
 235+ 97D6 1C               inc e
 236+ 97D7 1A               ld a,(de)
 237+ 97D8 AE               xor (hl)
 238+ 97D9 77               ld (hl),a
 239+ 97DA 13               inc de
 240+ 97DB
 241+ 97DB E1               pop hl
 242+ 97DC
 243+ 97DC 1A               ld a,(de)
 244+ 97DD AE               xor (hl)
 245+ 97DE 77               ld (hl),a
 246+ 97DF 2C               inc l
 247+ 97E0 1C               inc e
 248+ 97E1 1A               ld a,(de)
 249+ 97E2 AE               xor (hl)
 250+ 97E3 77               ld (hl),a
 251+ 97E4 2C               inc l
 252+ 97E5 1C               inc e
 253+ 97E6 1A               ld a,(de)
 254+ 97E7 AE               xor (hl)
 255+ 97E8 77               ld (hl),a
 256+ 97E9 13               inc de
 257+ 97EA
 258+ 97EA E1               pop hl
 259+ 97EB
 260+ 97EB 1A               ld a,(de)
 261+ 97EC AE               xor (hl)
 262+ 97ED 77               ld (hl),a
 263+ 97EE 2C               inc l
 264+ 97EF 1C               inc e
 265+ 97F0 1A               ld a,(de)
 266+ 97F1 AE               xor (hl)
 267+ 97F2 77               ld (hl),a
 268+ 97F3 2C               inc l
 269+ 97F4 1C               inc e
 270+ 97F5 1A               ld a,(de)
 271+ 97F6 AE               xor (hl)
 272+ 97F7 77               ld (hl),a
 273+ 97F8 13               inc de
 274+ 97F9
 275+ 97F9 E1               pop hl
 276+ 97FA
 277+ 97FA 1A               ld a,(de)
 278+ 97FB AE               xor (hl)
 279+ 97FC 77               ld (hl),a
 280+ 97FD 2C               inc l
 281+ 97FE 1C               inc e
 282+ 97FF 1A               ld a,(de)
 283+ 9800 AE               xor (hl)
 284+ 9801 77               ld (hl),a
 285+ 9802 2C               inc l
 286+ 9803 1C               inc e
 287+ 9804 1A               ld a,(de)
 288+ 9805 AE               xor (hl)
 289+ 9806 77               ld (hl),a
 290+ 9807 13               inc de
 291+ 9808
 292+ 9808 E1               pop hl
 293+ 9809
 294+ 9809 1A               ld a,(de)
 295+ 980A AE               xor (hl)
 296+ 980B 77               ld (hl),a
 297+ 980C 2C               inc l
 298+ 980D 1C               inc e
 299+ 980E 1A               ld a,(de)
 300+ 980F AE               xor (hl)
 301+ 9810 77               ld (hl),a
 302+ 9811 2C               inc l
 303+ 9812 1C               inc e
 304+ 9813 1A               ld a,(de)
 305+ 9814 AE               xor (hl)
 306+ 9815 77               ld (hl),a
 307+ 9816 13               inc de
 308+ 9817
 309+ 9817 ED 73 6E 8C      ld (Scanlines_album_SP),sp
 310+ 981B ED 7B 4C 8C      ld sp,(Stack)
 311+ 981F C9               ret
 312+ 9820
 313+ 9820              Pinta_lento
 314+ 9820
 315+ 9820 E1           1 pop hl
 316+ 9821
 317+ 9821 1A               ld a,(de)
 318+ 9822 AE               xor (hl)
 319+ 9823 77               ld (hl),a
 320+ 9824 2C               inc l
 321+ 9825 1C               inc e
 322+ 9826 1A               ld a,(de)
 323+ 9827 AE               xor (hl)
 324+ 9828 77               ld (hl),a
 325+ 9829 2C               inc l
 326+ 982A 1C               inc e
 327+ 982B 1A               ld a,(de)
 328+ 982C AE               xor (hl)
 329+ 982D 77               ld (hl),a
 330+ 982E 13               inc de
 331+ 982F
 332+ 982F 10 EF            djnz 1B
 333+ 9831
 334+ 9831 ED 73 6E 8C      ld (Scanlines_album_SP),sp
 335+ 9835 ED 7B 4C 8C      ld sp,(Stack)
 336+ 9839 C9               ret
# file closed: Pinta_Sprites.asm
2395  983A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 983A              ; ******************************************************************************************************************************************************************************************
   2+ 983A              ;
   3+ 983A              ; 26/06/23
   4+ 983A              ;
   5+ 983A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 983A
   7+ 983A              Draw
   8+ 983A
   9+ 983A CD E0 9A     	call Prepara_draw
  10+ 983D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 983E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 983F 28 05        	jr z,2F
  13+ 9841
  14+ 9841 3A 1C 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9844 18 0C        	jr 1F
  16+ 9846
  17+ 9846 2A 1A 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9849 22 0D 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 984C CD D8 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 984F              ;													; _la esquina superior izquierda de la pantalla.
  21+ 984F
  22+ 984F CD 66 9F     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9852
  24+ 9852 3A 0A 8C     1 ld a,(Ctrl_0)
  25+ 9855 CB 6F        	bit 5,a
  26+ 9857 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9859
  28+ 9859 CD 6E 98     	call Comprueba_limite_horizontal
  29+ 985C CD FE 98     	call Comprueba_limite_vertical
  30+ 985F
  31+ 985F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 985F              ; -----------------------
  33+ 985F              ; -----------------------
  34+ 985F              ; -----------------------
  35+ 985F
  36+ 985F CD 54 9A     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9862 CD 8B 9A     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9865
  39+ 9865 3A 0A 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9868 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 986A 32 0A 8C     	ld (Ctrl_0),a
  42+ 986D
  43+ 986D C9           	ret
  44+ 986E
  45+ 986E              ; *******************************************************************************************************************************************************************************************
  46+ 986E              ;	21/01/23
  47+ 986E              ;
  48+ 986E              ; 	Comprueba_limite_horizontal.
  49+ 986E              ;
  50+ 986E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 986E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 986E              ;
  53+ 986E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 986E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 986E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 986E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 986E
  58+ 986E
  59+ 986E
  60+ 986E 3A 0A 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9871 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9873 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9875 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9877 32 0A 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 987A 18 09            jr 6F
  66+ 987C CB 5F        1 bit 3,a
  67+ 987E 28 0A            jr z,2F
  68+ 9880 E6 F7            and $f7
  69+ 9882 32 0A 8C         ld (Ctrl_0),a
  70+ 9885 CD D8 99     6 call Inicializacion
  71+ 9888 18 5B            jr 5F
  72+ 988A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 988B
  74+ 988B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 988B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 988B
  77+ 988B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 988C 2A 1E 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 988F CD D9 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9892 67           	ld h,a
  81+ 9893 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9894 CD D9 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9897 67           	ld h,a
  84+ 9898 A7           	and a
  85+ 9899 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 989B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 989C 3A 1C 8C     	ld a,(Cuad_objeto)
  88+ 989F FE 02        	cp 2
  89+ 98A1 38 1E        	jr c,3F
  90+ 98A3 28 1C        	jr z,3F
  91+ 98A5 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 98A6 28 23            jr z,7F
  93+ 98A8 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 98AA 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 98AC E1           	pop hl
  96+ 98AD
  97+ 98AD              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 98AD              ; _para indicar con E="2" en caso necesario.
  99+ 98AD
 100+ 98AD E5               push hl
 101+ 98AE C5               push bc
 102+ 98AF CD D9 95     	call calcula_tercio
 103+ 98B2 FE 01        	cp 1
 104+ 98B4 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 98B6 CD E6 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 98B9 28 26            jr z,9F
 107+ 98BB 38 24            jr c,9F
 108+ 98BD 1E 00        11 ld e,0
 109+ 98BF 18 22            jr 8F
 110+ 98C1 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 98C2 28 07        	jr z, 7F
 112+ 98C4 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 98C6 1E 00         	ld e,0
 114+ 98C8 E1           	pop hl
 115+ 98C9 18 04        	jr 4F
 116+ 98CB 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 98CD 18 15            jr 10F
 118+ 98CF
 119+ 98CF              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 98CF              ; _para indicar con E="2" en caso necesario.
 121+ 98CF
 122+ 98CF E5           4 push hl
 123+ 98D0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 98D1 CD D9 95     	call calcula_tercio
 125+ 98D4 FE 01        	cp 1
 126+ 98D6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 98D8 CD E6 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 98DB 28 04            jr z,9F
 129+ 98DD 30 02            jr nc,9F
 130+ 98DF 18 02        	jr 8F
 131+ 98E1 1E 02        9 ld e,2
 132+ 98E3 C1           8 pop bc
 133+ 98E4 E1           10 pop hl
 134+ 98E5 C9           5 ret
 135+ 98E6
 136+ 98E6              ; --------------------
 137+ 98E6              ;
 138+ 98E6              ; 25/08/22
 139+ 98E6
 140+ 98E6 CD D9 95     Comprueba_centro call calcula_tercio
 141+ 98E9 67               ld h,a
 142+ 98EA 08           	ex af,af
 143+ 98EB FE 02        	cp 2
 144+ 98ED 38 07        	jr c,1F
 145+ 98EF 28 05        	jr z,1F
 146+ 98F1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 98F4 18 03        	jr 2F
 148+ 98F6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 98F9 08           2 ex af,af
 150+ 98FA A7               and a
 151+ 98FB ED 42            sbc hl,bc
 152+ 98FD C9               ret
 153+ 98FE
 154+ 98FE              ; *********************************************************************************************************************************************************************************************
 155+ 98FE              ;
 156+ 98FE              ;   16/8/22
 157+ 98FE              ;
 158+ 98FE              ;	Comprueba_limite_vertical
 159+ 98FE              ;
 160+ 98FE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 98FE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 98FE              ;
 163+ 98FE
 164+ 98FE 2A 0D 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9901 7D           	ld a,l
 166+ 9902 E6 1F        	and $1F
 167+ 9904 57           	ld d,a
 168+ 9905 3A 20 8C     	ld a,(Limite_vertical)
 169+ 9908 BA           	cp d 											; Límite - Posición.
 170+ 9909 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 990A 3A 1C 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 990D CB 47        	bit 0,a
 173+ 990F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9911
 175+ 9911              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9911
 177+ 9911 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9912 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9914
 180+ 9914              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9914              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9914
 183+ 9914 3A FE 8B         ld a,(Coordenada_X)
 184+ 9917 16 0F            ld d,Centro_izquierda
 185+ 9919 A7               and a
 186+ 991A 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 991B 28 1E            jr z,3F
 188+ 991D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 991F              ;                                                    ; _salimos sin modificar nada.
 190+ 991F 18 0E            jr 2F
 191+ 9921 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9922 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9924
 194+ 9924              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9924              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9924
 197+ 9924 3A FE 8B         ld a,(Coordenada_X)
 198+ 9927 16 10            ld d,Centro_derecha
 199+ 9929 A7               and a
 200+ 992A 92               sub d
 201+ 992B 28 0E            jr z,3F
 202+ 992D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 992F              ;                                                    ; _salimos sin modificar nada.
 204+ 992F CB 43        2 bit 0,e
 205+ 9931 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9933 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9934 CD C8 99         call Modificaccionne
 208+ 9937 C1           	pop bc
 209+ 9938 CD D8 99         call Inicializacion
 210+ 993B C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 993C
 212+ 993C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 993C
 214+ 993C C5           4 push bc
 215+ 993D 01 0C 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9940 0A           	ld a,(bc)
 217+ 9941 3D           	dec a
 218+ 9942 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9943 7D           	ld a,l
 220+ 9944 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9945 CB 47        	bit 0,a
 222+ 9947 28 03        	jr z,5F
 223+ 9949 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 994A 18 2E        	jr 7F
 225+ 994C
 226+ 994C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 994C
 228+ 994C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 994D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 994E 3A 0A 8C     	ld a,(Ctrl_0)
 231+ 9951 CB 4F        	bit 1,a
 232+ 9953 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9955 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9956
 235+ 9956              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9956
 237+ 9956 1C               inc e
 238+ 9957 1D               dec e
 239+ 9958 20 07            jr nz,12F
 240+ 995A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 995B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 995C 22 0D 8C     	ld (Posicion_actual),hl
 243+ 995F 18 44        13 jr 9F
 244+ 9961 CB 43        12 bit 0,e
 245+ 9963 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9965              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9965 C1           	pop bc
 248+ 9966 18 D3        	jr 3B
 249+ 9968 80           14 add b
 250+ 9969 6F               ld l,a
 251+ 996A 22 0D 8C     	ld (Posicion_actual),hl
 252+ 996D CD C8 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9970 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9972 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9974 32 0A 8C         ld (Ctrl_0),a
 256+ 9977 F1           	pop af
 257+ 9978 18 2B        	jr 9F
 258+ 997A
 259+ 997A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 997A
 261+ 997A F5           7 push af
 262+ 997B 3A 0A 8C     	ld a,(Ctrl_0)
 263+ 997E CB 47        	bit 0,a
 264+ 9980 20 1D        	jr nz,8F
 265+ 9982 F1           	pop af
 266+ 9983
 267+ 9983              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9983
 269+ 9983 1C           	inc e
 270+ 9984 1D               dec e
 271+ 9985 20 07            jr nz,10F
 272+ 9987 90           	sub b
 273+ 9988 6F               ld l,a
 274+ 9989 22 0D 8C     	ld (Posicion_actual),hl
 275+ 998C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 998E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 998E CB 43        10 bit 0,e
 278+ 9990 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9992              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9992 C1           	pop bc
 281+ 9993 18 A6        	jr 3B
 282+ 9995 90           16 sub b
 283+ 9996 6F               ld l,a
 284+ 9997 22 0D 8C     	ld (Posicion_actual),hl
 285+ 999A CD C8 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 999D 18 06            jr 9F
 287+ 999F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 99A1 32 0A 8C         ld (Ctrl_0),a
 289+ 99A4 F1           	pop af
 290+ 99A5 C1           9 pop bc
 291+ 99A6 1E 00        	ld e,0
 292+ 99A8 CD D8 99         call Inicializacion
 293+ 99AB F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 99AC 08           	ex af,af
 295+ 99AD F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 99AE 18 8B            jr 3B
 297+ 99B0
 298+ 99B0              ; --------------------
 299+ 99B0
 300+ 99B0 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 99B2 CD FB 9A     1 call PreviousScan
 302+ 99B5 10 FB            djnz 1B
 303+ 99B7 22 0D 8C     	ld (Posicion_actual),hl
 304+ 99BA AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 99BB C9           	ret
 306+ 99BC
 307+ 99BC              ; --------------------
 308+ 99BC
 309+ 99BC 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 99BE CD EC 9A     1 call NextScan
 311+ 99C1 10 FB            djnz 1B
 312+ 99C3 22 0D 8C     	ld (Posicion_actual),hl
 313+ 99C6 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 99C7 C9           	ret
 315+ 99C8
 316+ 99C8              ; --------------------
 317+ 99C8              ;
 318+ 99C8              ;	22/01/23
 319+ 99C8              ;
 320+ 99C8              ;	E="1". Hemos cambiado de cuadrante.
 321+ 99C8              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 99C8              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 99C8
 324+ 99C8
 325+ 99C8              Modificaccionne
 326+ 99C8
 327+ 99C8 3A 1C 8C     	ld a,(Cuad_objeto)
 328+ 99CB FE 02        	cp 2
 329+ 99CD CC B0 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 99D0 DC B0 99         call c,Modifica_Pos_actual
 331+ 99D3 C8           	ret z
 332+ 99D4 CD BC 99         call Modifica_Pos_actual2
 333+ 99D7 C9               ret
 334+ 99D8
 335+ 99D8              ; *************************************************************************************************************************************************************************************************
 336+ 99D8              ;
 337+ 99D8              ;	13/8/22
 338+ 99D8              ;
 339+ 99D8              ;	Inicializacion
 340+ 99D8              ;
 341+ 99D8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 99D8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 99D8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 99D8              ;
 345+ 99D8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 99D8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 99D8              ;	_ desaparece/aparece.
 348+ 99D8
 349+ 99D8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 99D8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 99D8              ;
 352+ 99D8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 99D8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 99D8              ; 		   [E] ="0"
 355+ 99D8
 356+ 99D8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 99D8
 358+ 99D8 CD D9 95     Inicializacion call calcula_tercio
 359+ 99DB 28 36        	jr z,primit
 360+ 99DD E6 02        	and 2
 361+ 99DF 20 07        	jr nz,segmit
 362+ 99E1 7D           	ld a,l
 363+ 99E2 FE 7F        	cp $7f
 364+ 99E4 38 2D        	jr c,primit
 365+ 99E6 28 2B        	jr z,primit
 366+ 99E8 CD 4E 9A     segmit call column
 367+ 99EB 38 13        	jr c,tercuad
 368+ 99ED 3E 04        cuarcuad ld a,4
 369+ 99EF 32 1C 8C     	ld (Cuad_objeto),a
 370+ 99F2 21 20 48     	ld hl,$4820
 371+ 99F5 22 1E 8C     	ld (Limite_horizontal),hl
 372+ 99F8 21 20 8C     	ld hl,Limite_vertical
 373+ 99FB 36 0D        	ld (hl),$0d
 374+ 99FD 08           	ex af,af
 375+ 99FE 18 3C        	jr 1F
 376+ 9A00              tercuad
 377+ 9A00 3E 03        	ld a,3
 378+ 9A02 32 1C 8C     	ld (Cuad_objeto),a
 379+ 9A05 21 20 48     	ld hl,$4820
 380+ 9A08 22 1E 8C     	ld (Limite_horizontal),hl
 381+ 9A0B 21 20 8C     	ld hl,Limite_vertical
 382+ 9A0E 36 12        	ld (hl),$12
 383+ 9A10 08           	ex af,af
 384+ 9A11 18 29        	jr 1F
 385+ 9A13 CD 4E 9A     primit call column
 386+ 9A16 38 13        	jr c, primcuad
 387+ 9A18              segcuad
 388+ 9A18 3E 02        	ld a,2
 389+ 9A1A 32 1C 8C     	ld (Cuad_objeto),a
 390+ 9A1D 21 C0 4F     	ld hl,$4fc0
 391+ 9A20 22 1E 8C     	ld (Limite_horizontal),hl
 392+ 9A23 21 20 8C     	ld hl,Limite_vertical
 393+ 9A26 36 0D        	ld (hl),$0d
 394+ 9A28 08           	ex af,af
 395+ 9A29 18 11        	jr 1F
 396+ 9A2B              primcuad
 397+ 9A2B 3E 01        	ld a,1
 398+ 9A2D 32 1C 8C     	ld (Cuad_objeto),a
 399+ 9A30 21 C0 4F     	ld hl,$4fc0
 400+ 9A33 22 1E 8C     	ld (Limite_horizontal),hl
 401+ 9A36 21 20 8C     	ld hl,Limite_vertical
 402+ 9A39 36 12        	ld (hl),$12
 403+ 9A3B 08           	ex af,af
 404+ 9A3C
 405+ 9A3C C5           1 push bc
 406+ 9A3D E5           	push hl
 407+ 9A3E D5           	push de
 408+ 9A3F
 409+ 9A3F 2A 0D 8C     	ld hl,(Posicion_actual)
 410+ 9A42 CD F7 95     	call Genera_coordenadas
 411+ 9A45
 412+ 9A45 D1           	pop de
 413+ 9A46 E1           	pop hl
 414+ 9A47 C1           	pop bc
 415+ 9A48
 416+ 9A48 21 0A 8C     	ld hl,Ctrl_0
 417+ 9A4B CB EE        	set 5,(hl)
 418+ 9A4D C9           	ret
 419+ 9A4E
 420+ 9A4E              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9A4E
 422+ 9A4E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9A4E              ;
 424+ 9A4E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9A4E
 426+ 9A4E 7D           column ld a,l
 427+ 9A4F E6 1F        	and $1f
 428+ 9A51 FE 10         	cp $10
 429+ 9A53 C9            	ret
 430+ 9A54
 431+ 9A54              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9A54              ;
 433+ 9A54              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9A54              ;
 435+ 9A54              ; 14/12/22
 436+ 9A54              ;
 437+ 9A54              ;	Modifica: A y BC.
 438+ 9A54
 439+ 9A54 3A 1C 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9A57 E6 01        	and 1
 441+ 9A59 28 17        	jr z,1F
 442+ 9A5B
 443+ 9A5B              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9A5B
 445+ 9A5B 3A FE 8B     	ld a,(Coordenada_X)
 446+ 9A5E 47           	ld b,a
 447+ 9A5F 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9A60 79           	ld a,c
 449+ 9A61 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9A62 38 08        	jr c,2F
 451+ 9A64 47           	ld b,a
 452+ 9A65 79           	ld a,c
 453+ 9A66 90           	sub b
 454+ 9A67 32 1D 8C     	ld (Columnas),a
 455+ 9A6A 18 1B        	jr 4F
 456+ 9A6C 79           2 ld a,c
 457+ 9A6D 32 1D 8C     	ld (Columnas),a
 458+ 9A70 18 15        	jr 4F
 459+ 9A72
 460+ 9A72              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9A72
 462+ 9A72 3A FE 8B     1 ld a,(Coordenada_X)
 463+ 9A75 81           	add c
 464+ 9A76 3D           	dec a
 465+ 9A77 D6 1F        	sub $1f
 466+ 9A79 38 08        	jr c,3F
 467+ 9A7B 47           	ld b,a
 468+ 9A7C 79           	ld a,c
 469+ 9A7D 90           	sub b
 470+ 9A7E 32 1D 8C     	ld (Columnas),a
 471+ 9A81 18 04        	jr 4F
 472+ 9A83 79           3 ld a,c
 473+ 9A84 32 1D 8C     	ld (Columnas),a
 474+ 9A87 D9           4 exx
 475+ 9A88 4F           	ld c,a
 476+ 9A89 D9           	exx
 477+ 9A8A C9            ret
 478+ 9A8B
 479+ 9A8B              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9A8B              ;
 481+ 9A8B              ;   19/7/23
 482+ 9A8B              ;
 483+ 9A8B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9A8B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9A8B              ;
 486+ 9A8B              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9A8B              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9A8B              ;
 489+ 9A8B              ;	DESTRUYE: HL,B Y A.
 490+ 9A8B
 491+ 9A8B 3A 1C 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9A8E FE 02        	cp 2
 493+ 9A90 38 18        	jr c,1F
 494+ 9A92 28 16        	jr z,1F
 495+ 9A94 E6 01        	and 1
 496+ 9A96 28 0D        	jr z,3F
 497+ 9A98
 498+ 9A98              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A98
 500+ 9A98 CD D4 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A9B
 502+ 9A9B 7D           9 ld a,l
 503+ 9A9C E6 1F        	and $1f
 504+ 9A9E 28 2A        	jr z,7F
 505+ 9AA0 2B           	dec hl
 506+ 9AA1 10 F8        	djnz 9B
 507+ 9AA3 18 25        	jr 7F
 508+ 9AA5
 509+ 9AA5              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9AA5
 511+ 9AA5 2A 0D 8C     3 ld hl,(Posicion_actual)
 512+ 9AA8 18 20        	jr 7F
 513+ 9AAA
 514+ 9AAA 28 14        1 jr z,2F
 515+ 9AAC
 516+ 9AAC              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9AAC
 518+ 9AAC CD D4 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9AAF
 520+ 9AAF 7D           4 ld a,l
 521+ 9AB0 E6 1F        	and $1f
 522+ 9AB2 28 03        	jr z,6F
 523+ 9AB4 2B           	dec hl
 524+ 9AB5 10 F8        	djnz 4B
 525+ 9AB7 06 0F        6 ld b,15
 526+ 9AB9 CD FB 9A     5 call PreviousScan
 527+ 9ABC 10 FB        	djnz 5B
 528+ 9ABE 18 0A        	jr 7F
 529+ 9AC0
 530+ 9AC0              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9AC0
 532+ 9AC0 CD D4 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9AC3 06 0F        	ld b,15
 534+ 9AC5 CD FB 9A     8 call PreviousScan
 535+ 9AC8 10 FB        	djnz 8B
 536+ 9ACA
 537+ 9ACA E5           7 push hl
 538+ 9ACB DD E1        	pop ix
 539+ 9ACD
 540+ 9ACD 2A 0F 8C     	ld hl,(Puntero_objeto)
 541+ 9AD0 E5           	push hl
 542+ 9AD1 FD E1        	pop iy
 543+ 9AD3
 544+ 9AD3 C9           	ret
 545+ 9AD4
 546+ 9AD4              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9AD4              ;
 548+ 9AD4              ;	2/1/23
 549+ 9AD4              ;
 550+ 9AD4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9AD4              ;
 552+ 9AD4              ;	Tras esta rutina tenemos:
 553+ 9AD4              ;
 554+ 9AD4              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9AD4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9AD4              ;
 557+ 9AD4              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9AD4
 559+ 9AD4 2A 0D 8C     Operandos ld hl,(Posicion_actual)
 560+ 9AD7 3A 1D 8C     	ld a,(Columnas)
 561+ 9ADA 3D           	dec a
 562+ 9ADB 20 01        	jr nz,1F
 563+ 9ADD 3C           	inc a
 564+ 9ADE 47           1 ld b,a
 565+ 9ADF C9           	ret
 566+ 9AE0
 567+ 9AE0              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9AE0              ;
 569+ 9AE0              ;	Prepara_draw
 570+ 9AE0              ;
 571+ 9AE0              ;	Es una rutina de carga.
 572+ 9AE0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9AE0              ;
 574+ 9AE0              ;	FUNCIONAMIENTO:
 575+ 9AE0              ;
 576+ 9AE0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9AE0              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9AE0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9AE0              ;
 580+ 9AE0              ;	DESTRUYE:
 581+ 9AE0              ;
 582+ 9AE0              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9AE0
 584+ 9AE0 21 0B 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9AE3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9AE4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9AE5 4E           	ld c,(hl)
 588+ 9AE6 2A 0D 8C     	ld hl,(Posicion_actual)
 589+ 9AE9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9AEB C9           	ret
 591+ 9AEC
 592+ 9AEC              ;----------------------------------------------------------------------------------------------------------------
 593+ 9AEC              ;
 594+ 9AEC              ;	5/08/22
 595+ 9AEC              ;
 596+ 9AEC              ;   NextScan.
 597+ 9AEC              ;
 598+ 9AEC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9AEC              ;
 600+ 9AEC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9AEC              ;
 602+ 9AEC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9AEC              ;
 604+ 9AEC              ;       DESTRUIDOS: AF y HL !!!
 605+ 9AEC              ;
 606+ 9AEC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9AEC              ;
 608+ 9AEC
 609+ 9AEC 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9AED 7C               ld a,h
 611+ 9AEE E6 07            and 7
 612+ 9AF0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9AF1
 614+ 9AF1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9AF2 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9AF4 6F               ld l,a
 617+ 9AF5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9AF6
 619+ 9AF6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9AF7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9AF9 67               ld h,a
 622+ 9AFA C9               ret
 623+ 9AFB
 624+ 9AFB              ;----------------------------------------------------------------------------------------------------------------
 625+ 9AFB              ;
 626+ 9AFB              ;	5/08/22
 627+ 9AFB              ;
 628+ 9AFB              ;   PreviousScan.
 629+ 9AFB              ;
 630+ 9AFB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9AFB              ;
 632+ 9AFB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9AFB              ;
 634+ 9AFB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9AFB              ;
 636+ 9AFB              ;       DESTRUIDOS: AF y HL !!!
 637+ 9AFB              ;
 638+ 9AFB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9AFB              ;
 640+ 9AFB
 641+ 9AFB 7C           PreviousScan ld a,h
 642+ 9AFC 25               dec h               ; Dec H.
 643+ 9AFD E6 07            and 7
 644+ 9AFF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9B00
 646+ 9B00 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9B01 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9B03 6F               ld l,a
 649+ 9B04 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9B05
 651+ 9B05 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9B06 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9B08 67               ld h,a
 654+ 9B09 C9               ret
 655+ 9B0A
 656+ 9B0A
 657+ 9B0A
 658+ 9B0A
 659+ 9B0A
 660+ 9B0A
 661+ 9B0A
 662+ 9B0A
 663+ 9B0A
 664+ 9B0A
 665+ 9B0A
 666+ 9B0A
# file closed: Draw_XOR.asm
2396  9B0A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9B0A
   2+ 9B0A              ; ******************************************************************************************************************************************************************************************
   3+ 9B0A              ;
   4+ 9B0A              ;   20/05/23
   5+ 9B0A              ;
   6+ 9B0A              ;	Recompone_posicion_inicio
   7+ 9B0A              ;
   8+ 9B0A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9B0A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9B0A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9B0A              ;	_ a una u otra rutina.
  12+ 9B0A
  13+ 9B0A              Recompone_posicion_inicio
  14+ 9B0A
  15+ 9B0A 2A 1A 8C     	ld hl,(Posicion_inicio)
  16+ 9B0D 7D           	ld a,l
  17+ 9B0E E6 1F        	and $1f
  18+ 9B10 28 16        	jr z,1F
  19+ 9B12
  20+ 9B12 FE 1F        	cp $1f
  21+ 9B14 28 0D        	jr z,3F
  22+ 9B16
  23+ 9B16 21 09 8C     	ld hl,Ctrl_2
  24+ 9B19 CB C6        	set 0,(hl)
  25+ 9B1B 2A 0F 8C     	ld hl,(Puntero_objeto)
  26+ 9B1E 22 3B 8C     	ld (Repone_puntero_objeto),hl
  27+ 9B21 18 08        	jr 2F
  28+ 9B23
  29+ 9B23 CD BD 9C     3 call Mov_left
  30+ 9B26 18 03        	jr 2F
  31+ 9B28
  32+ 9B28 CD A4 9B     1 call Mov_right
  33+ 9B2B 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9B2E 22 0F 8C     	ld (Puntero_objeto),hl
  35+ 9B31 C9           	ret
  36+ 9B32
  37+ 9B32              ; ******************************************************************************************************************************************************************************************
  38+ 9B32              ;
  39+ 9B32              ;   27/05/23
  40+ 9B32              ;
  41+ 9B32              ;	Mov_down
  42+ 9B32              ;
  43+ 9B32              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9B32              ;
  45+ 9B32              ;
  46+ 9B32              Mov_down
  47+ 9B32
  48+ 9B32 CD 92 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9B35              ;																	; _ repone (Puntero_objeto).
  50+ 9B35              ;	ld hl,Ctrl_0
  51+ 9B35              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9B35              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9B35              ; 																	; _ en el caso de que no lo haya.
  54+ 9B35 3A 25 8C     	ld a,(Vel_down)
  55+ 9B38 47           	ld b,a
  56+ 9B39 2A 0D 8C         ld hl,(Posicion_actual)
  57+ 9B3C CD D9 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9B3F E6 02        	and 2
  59+ 9B41 28 17        	jr z,1F
  60+ 9B43
  61+ 9B43              ; Nos encontramos en el último tercio de pantalla.
  62+ 9B43              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9B43
  64+ 9B43 7C           	ld a,h
  65+ 9B44 FE 57        	cp $57
  66+ 9B46 20 12        	jr nz,1F
  67+ 9B48
  68+ 9B48 7D           	ld a,l
  69+ 9B49 C6 20        	add $20
  70+ 9B4B 30 0D        	jr nc,1F
  71+ 9B4D
  72+ 9B4D              ; ------------------------------
  73+ 9B4D              ;
  74+ 9B4D              ;	12/01/24
  75+ 9B4D
  76+ 9B4D              ;	call Reaparece_arriba
  77+ 9B4D CD 45 9E     	call Reinicio
  78+ 9B50
  79+ 9B50              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9B50
  81+ 9B50 3A 74 8C     	ld a,(Ctrl_3)
  82+ 9B53 CB CF        	set 1,a
  83+ 9B55 32 74 8C     	ld (Ctrl_3),a
  84+ 9B58
  85+ 9B58 18 08        	jr 3F
  86+ 9B5A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9B5A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9B5A              ; ------------------------------
  89+ 9B5A
  90+ 9B5A CD EC 9A     1 call NextScan
  91+ 9B5D 22 0D 8C     	ld (Posicion_actual),hl
  92+ 9B60 10 DA            djnz 2B
  93+ 9B62 CD F7 95     3 call Genera_coordenadas
  94+ 9B65 C9           	ret
  95+ 9B66
  96+ 9B66              ; ******************************************************************************************************************************************************************************************
  97+ 9B66              ;
  98+ 9B66              ;   27/05/23
  99+ 9B66              ;
 100+ 9B66              ;	Mov_up
 101+ 9B66              ;
 102+ 9B66              ; 	Mueve el Sprite hacia arriba.
 103+ 9B66              ;
 104+ 9B66              ;
 105+ 9B66              Mov_up
 106+ 9B66
 107+ 9B66 CD 92 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9B69              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9B69              ;	ld hl,Ctrl_0
 110+ 9B69              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9B69              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9B69              ; 																		; _ en el caso de que no lo haya.
 113+ 9B69 3A 24 8C     	ld a,(Vel_up)
 114+ 9B6C 47           	ld b,a
 115+ 9B6D 2A 0D 8C     	ld hl,(Posicion_actual)
 116+ 9B70 CD D9 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9B73 A7           	and a
 118+ 9B74 20 10        	jr nz,1F
 119+ 9B76
 120+ 9B76              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9B76              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9B76
 123+ 9B76 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9B77 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9B79 20 0B            jr nz,1F
 126+ 9B7B 7D               ld a,l
 127+ 9B7C D6 20            sub $20
 128+ 9B7E 30 06            jr nc,1F
 129+ 9B80 25               dec h
 130+ 9B81
 131+ 9B81              ; -----------------------------
 132+ 9B81 CD 26 9E         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9B84              ;	call Reinicio
 134+ 9B84              ; -----------------------------
 135+ 9B84
 136+ 9B84 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9B86 CD FB 9A     1 call PreviousScan
 138+ 9B89 22 0D 8C     	ld (Posicion_actual),hl
 139+ 9B8C 10 E2            djnz 3B
 140+ 9B8E CD F7 95     2 call Genera_coordenadas
 141+ 9B91 C9           	ret
 142+ 9B92
 143+ 9B92              ; -----------------------------
 144+ 9B92              ;
 145+ 9B92              ;	27/5/23
 146+ 9B92              ;
 147+ 9B92              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B92              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B92              ;
 150+ 9B92              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B92              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B92              ;
 153+ 9B92              ;	Modifica: A y (Puntero_objeto).
 154+ 9B92
 155+ 9B92 3A 09 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B95 CB 47        	bit 0,a
 157+ 9B97 C8           	ret z
 158+ 9B98 CB 87        	res 0,a
 159+ 9B9A 32 09 8C     	ld (Ctrl_2),a
 160+ 9B9D 2A 3B 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9BA0 22 0F 8C     	ld (Puntero_objeto),hl
 162+ 9BA3 C9           	ret
 163+ 9BA4
 164+ 9BA4              ; ******************************************************************************************************************************************************************************************
 165+ 9BA4              ;
 166+ 9BA4              ;	19/10/22
 167+ 9BA4              ;
 168+ 9BA4              ;	Mov_right.
 169+ 9BA4              ;
 170+ 9BA4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9BA4              ;
 172+ 9BA4
 173+ 9BA4 3A 0A 8C     Mov_right ld a,(Ctrl_0)
 174+ 9BA7 CB 77        	bit 6,a
 175+ 9BA9 28 06        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9BAB
 177+ 9BAB CD D4 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9BAE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9BAF
 180+ 9BAF              ;;	ld hl,Ctrl_0
 181+ 9BAF              ;;	set 4,(hl)
 182+ 9BAF 18 4D        	jr 8F
 183+ 9BB1
 184+ 9BB1              10
 185+ 9BB1              ;	ld hl,Ctrl_0
 186+ 9BB1              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 187+ 9BB1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 188+ 9BB1              ; 																	; _ en el caso de que no lo haya.
 189+ 9BB1 3A FE 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 190+ 9BB4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 191+ 9BB6 20 46        	jr nz,8F
 192+ 9BB8
 193+ 9BB8 3A 11 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 194+ 9BBB A7           	and a 															; _[3] para continuar con el DESPLZ.
 195+ 9BBC 28 40        	jr z,8F
 196+ 9BBE
 197+ 9BBE              ; ---------- ---------- ----------
 198+ 9BBE              ;
 199+ 9BBE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 200+ 9BBE
 201+ 9BBE 3A 23 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 202+ 9BC1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 203+ 9BC3 28 11        	jr z,1F
 204+ 9BC5 38 06        	jr c,6F
 205+ 9BC7 FE 04        	cp 4
 206+ 9BC9 28 14        	jr z,7F
 207+ 9BCB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 208+ 9BCD
 209+ 9BCD              ; ---------- ---------- ----------
 210+ 9BCD              ;
 211+ 9BCD              ; Perfiles de velocidad
 212+ 9BCD              ;
 213+ 9BCD
 214+ 9BCD 3A 11 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 215+ 9BD0 FE FE        	cp $fe
 216+ 9BD2 20 2A        	jr nz,8F
 217+ 9BD4 18 10        	jr 3F
 218+ 9BD6 3A 11 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 219+ 9BD9 FE FD        	cp $fd
 220+ 9BDB 20 21        	jr nz,8F
 221+ 9BDD 18 07        	jr 3F
 222+ 9BDF 3A 11 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 223+ 9BE2 FE FB        	cp $fb
 224+ 9BE4 20 18        	jr nz,8F
 225+ 9BE6
 226+ 9BE6              ; ---------- ---------- ----------
 227+ 9BE6
 228+ 9BE6              3
 229+ 9BE6 CD 14 9E     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 230+ 9BE9              ;	call Reinicio
 231+ 9BE9
 232+ 9BE9              ; ---------- ---------- ----------
 233+ 9BE9              ;
 234+ 9BE9              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 235+ 9BE9
 236+ 9BE9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 237+ 9BEB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 238+ 9BEC CD 05 9C     	call DESPLZ_DER
 239+ 9BEF C1           	pop bc
 240+ 9BF0 10 F9        	djnz 5B
 241+ 9BF2 2A 0D 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 242+ 9BF5 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 243+ 9BF6 22 0D 8C     	ld (Posicion_actual),hl
 244+ 9BF9 CD F7 95     	call Genera_coordenadas
 245+ 9BFC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 246+ 9BFE
 247+ 9BFE              ; ---------- ---------- ----------
 248+ 9BFE
 249+ 9BFE 2A 0D 8C     8 ld hl,(Posicion_actual)
 250+ 9C01 CD 05 9C     	call DESPLZ_DER
 251+ 9C04 C9           2 ret
 252+ 9C05
 253+ 9C05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 254+ 9C05              ;
 255+ 9C05              ;	22/9/22
 256+ 9C05              ;
 257+ 9C05
 258+ 9C05 CD 14 9C     DESPLZ_DER call Desplaza_derecha
 259+ 9C08 CD 60 9C         call modifica_parametros_1er_DESPLZ_2
 260+ 9C0B CD 89 9C         call Ciclo_completo
 261+ 9C0E 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 262+ 9C11 CB FE        	set 7,(hl)
 263+ 9C13 C9           	ret
 264+ 9C14
 265+ 9C14              ; ******************************************************************************************************************************************************************************************
 266+ 9C14              ;	15/02/23
 267+ 9C14              ;
 268+ 9C14
 269+ 9C14 3A 23 8C     Desplaza_derecha ld a,(Vel_right)
 270+ 9C17 47           	ld b,a
 271+ 9C18 2A 16 8C     	ld hl,(Puntero_DESPLZ_der)
 272+ 9C1B 23           1 inc hl
 273+ 9C1C 23           	inc hl
 274+ 9C1D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 275+ 9C1F 22 16 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 276+ 9C22 CD E2 91     	call Extrae_address
 277+ 9C25 22 0F 8C     	ld (Puntero_objeto),hl
 278+ 9C28
 279+ 9C28              ; Modifica (Puntero_DESPLZ_izq).
 280+ 9C28
 281+ 9C28              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 282+ 9C28              ; Cuántos movimientos hemos hecho ??
 283+ 9C28              ; DE contiene (Puntero_DESPLZ_der).
 284+ 9C28
 285+ 9C28 2A 12 8C     7 ld hl,(Indice_Sprite_der)
 286+ 9C2B EB           	ex de,hl
 287+ 9C2C A7           	and a
 288+ 9C2D ED 52        	sbc hl,de
 289+ 9C2F CB 3D        	srl l
 290+ 9C31 3E 08        6 ld a,8
 291+ 9C33 95           	sub l
 292+ 9C34 30 1E        	jr nc,3F
 293+ 9C36
 294+ 9C36              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 295+ 9C36              ; B="0".
 296+ 9C36
 297+ 9C36 04           4 inc b
 298+ 9C37 3C           	inc a
 299+ 9C38 20 FC        	jr nz,4B
 300+ 9C3A 78           	ld a,b
 301+ 9C3B 08           	ex af,af
 302+ 9C3C 2A 12 8C     	ld hl,(Indice_Sprite_der)
 303+ 9C3F 23           5 inc hl
 304+ 9C40 23           	inc hl
 305+ 9C41 10 FC        	djnz 5B
 306+ 9C43 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 307+ 9C46 CD E2 91     	call Extrae_address
 308+ 9C49 22 0F 8C     	ld (Puntero_objeto),hl
 309+ 9C4C
 310+ 9C4C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 311+ 9C4C              ; _(Posicion_actual).
 312+ 9C4C
 313+ 9C4C 21 0D 8C     	ld hl,Posicion_actual
 314+ 9C4F 34           	inc (hl)
 315+ 9C50 08               ex af,af
 316+ 9C51 6F           	ld l,a
 317+ 9C52 18 DD        	jr 6B
 318+ 9C54
 319+ 9C54              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 320+ 9C54
 321+ 9C54 47           3 ld b,a
 322+ 9C55 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 323+ 9C58 23           2 inc hl
 324+ 9C59 23           	inc hl
 325+ 9C5A 10 FC        	djnz 2B
 326+ 9C5C 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 327+ 9C5F C9           8 ret
 328+ 9C60
 329+ 9C60              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 330+ 9C60              ;
 331+ 9C60              ;	24/7/22
 332+ 9C60              ;
 333+ 9C60              ;	modifica_parametros_1er_DESPLZ_2
 334+ 9C60              ;
 335+ 9C60              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 336+ 9C60              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 337+ 9C60              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 338+ 9C60
 339+ 9C60 3A 11 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 340+ 9C63 A7           	and a
 341+ 9C64 20 1F        	jr nz,1F
 342+ 9C66 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 343+ 9C68 32 11 8C         ld (CTRL_DESPLZ),a
 344+ 9C6B
 345+ 9C6B 21 0C 8C     	ld hl,Columns
 346+ 9C6E 34           	inc (hl)
 347+ 9C6F 3A 1C 8C     	ld a,(Cuad_objeto)
 348+ 9C72 E6 01        	and 1
 349+ 9C74 28 0F        	jr z,1F
 350+ 9C76 2A 0D 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 351+ 9C79 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 352+ 9C7A 22 0D 8C     	ld (Posicion_actual),hl
 353+ 9C7D CD F7 95     	call Genera_coordenadas
 354+ 9C80 CD E0 9D     	call Inc_CTRL_DESPLZ
 355+ 9C83 18 03        	jr 2F
 356+ 9C85 CD E0 9D     1 call Inc_CTRL_DESPLZ
 357+ 9C88 C9           2 ret
 358+ 9C89
 359+ 9C89              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 360+ 9C89              ;
 361+ 9C89              ;	24/7/22
 362+ 9C89              ;
 363+ 9C89              ;	Ciclo_completo.
 364+ 9C89              ;
 365+ 9C89              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 366+ 9C89              ;
 367+ 9C89              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 368+ 9C89              ; 	Decrementamos (Columns).
 369+ 9C89              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 370+ 9C89              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 371+ 9C89
 372+ 9C89
 373+ 9C89 3A 11 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 374+ 9C8C FE FF        	cp $ff
 375+ 9C8E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 376+ 9C90 E6 F0        	and $f0
 377+ 9C92 20 28        	jr nz,3F
 378+ 9C94
 379+ 9C94              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 380+ 9C94
 381+ 9C94 3A 11 8C     	ld a,(CTRL_DESPLZ)
 382+ 9C97 47           	ld b,a
 383+ 9C98 3E F8        	ld a,$f8
 384+ 9C9A 80           	add b
 385+ 9C9B 32 11 8C     	ld (CTRL_DESPLZ),a
 386+ 9C9E 18 1C        	jr 3F
 387+ 9CA0 21 0C 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 388+ 9CA3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 389+ 9CA4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 390+ 9CA5 32 11 8C     	ld (CTRL_DESPLZ),a
 391+ 9CA8 3A 1C 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 392+ 9CAB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 393+ 9CAD 20 0A        	jr nz,2F
 394+ 9CAF 2A 0D 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 395+ 9CB2 23           	inc hl
 396+ 9CB3 22 0D 8C     	ld (Posicion_actual),hl
 397+ 9CB6 CD F7 95     	call Genera_coordenadas
 398+ 9CB9
 399+ 9CB9              ; Inicia el puntero de Sprite.
 400+ 9CB9
 401+ 9CB9 CD F7 91     2 call Inicia_puntero_objeto_der
 402+ 9CBC C9           3 ret
 403+ 9CBD
 404+ 9CBD              ; ******************************************************************************************************************************************************************************************
 405+ 9CBD              ;
 406+ 9CBD              ;	15/02/23
 407+ 9CBD              ;
 408+ 9CBD              ;	Mov_left.
 409+ 9CBD              ;
 410+ 9CBD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 411+ 9CBD              ;
 412+ 9CBD              Mov_left
 413+ 9CBD
 414+ 9CBD              ;	ld hl,Ctrl_0
 415+ 9CBD              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 416+ 9CBD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 417+ 9CBD              ; 																	; _ en el caso de que no lo haya.
 418+ 9CBD 3A 0A 8C     	ld a,(Ctrl_0)
 419+ 9CC0 CB 77        	bit 6,a
 420+ 9CC2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 421+ 9CC4
 422+ 9CC4 CD DA 9D     	call Stop_Amadeus_left
 423+ 9CC7 C8           	ret z
 424+ 9CC8 20 4A        	jr nz,8F
 425+ 9CCA
 426+ 9CCA 3A FE 8B     11 ld a,(Coordenada_X)
 427+ 9CCD A7           	and a
 428+ 9CCE 20 44        	jr nz,8F
 429+ 9CD0
 430+ 9CD0 3A 11 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 431+ 9CD3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 432+ 9CD4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 433+ 9CD6
 434+ 9CD6              ; ---------- ---------- ----------
 435+ 9CD6
 436+ 9CD6 3A 22 8C     	ld a,(Vel_left)
 437+ 9CD9 FE 02        	cp 2
 438+ 9CDB 28 0F        	jr z,1F
 439+ 9CDD 38 04        	jr c,6F
 440+ 9CDF FE 04        	cp 4
 441+ 9CE1 28 12        	jr z,7F
 442+ 9CE3
 443+ 9CE3              ; ---------- ---------- ----------
 444+ 9CE3
 445+ 9CE3 3A 11 8C     6 ld a,(CTRL_DESPLZ)
 446+ 9CE6 FE F8        	cp $f8
 447+ 9CE8 20 2A        	jr nz,8F
 448+ 9CEA 18 10        	jr 4F
 449+ 9CEC 3A 11 8C     1 ld a,(CTRL_DESPLZ)
 450+ 9CEF FE F9        	cp $f9
 451+ 9CF1 20 21        	jr nz,8F
 452+ 9CF3 18 07        	jr 4F
 453+ 9CF5 3A 11 8C     7 ld a,(CTRL_DESPLZ)
 454+ 9CF8 FE FB        	cp $fb
 455+ 9CFA 20 18        	jr nz,8F
 456+ 9CFC
 457+ 9CFC              ; ---------- ---------- ----------
 458+ 9CFC
 459+ 9CFC              4
 460+ 9CFC CD 02 9E     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 461+ 9CFF              ;	call Reinicio
 462+ 9CFF
 463+ 9CFF              ; ---------- ---------- ----------
 464+ 9CFF
 465+ 9CFF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 466+ 9D01 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 467+ 9D02
 468+ 9D02              ;	ld hl,(Indice_Sprite_izq)
 469+ 9D02              ;	ld (Puntero_DESPLZ_izq),hl
 470+ 9D02
 471+ 9D02 CD 1B 9D     	call DESPLZ_IZQ
 472+ 9D05 C1           	pop bc
 473+ 9D06 10 F9        	djnz 5B
 474+ 9D08 2A 0D 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 475+ 9D0B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 476+ 9D0C 22 0D 8C     	ld (Posicion_actual),hl
 477+ 9D0F CD F7 95     	call Genera_coordenadas
 478+ 9D12 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 479+ 9D14
 480+ 9D14              ; ---------- ---------- ----------
 481+ 9D14
 482+ 9D14              ; Movemos, no hay recolocación.
 483+ 9D14
 484+ 9D14 2A 0D 8C     8 ld hl,(Posicion_actual)
 485+ 9D17 CD 1B 9D     	call DESPLZ_IZQ
 486+ 9D1A C9           2 ret
 487+ 9D1B
 488+ 9D1B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 489+ 9D1B              ;
 490+ 9D1B              ;	22/9/22
 491+ 9D1B
 492+ 9D1B              DESPLZ_IZQ
 493+ 9D1B
 494+ 9D1B CD 2A 9D     	call Desplaza_izquierda
 495+ 9D1E CD 76 9D         call modifica_parametros_1er_DESPLZ
 496+ 9D21 CD 9E 9D     	call Ciclo_completo_2
 497+ 9D24 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 498+ 9D27 CB BE        	res 7,(hl)
 499+ 9D29 C9           	ret
 500+ 9D2A
 501+ 9D2A              Desplaza_izquierda
 502+ 9D2A
 503+ 9D2A 3A 22 8C     	ld a,(Vel_left)
 504+ 9D2D 47           	ld b,a
 505+ 9D2E 2A 18 8C     	ld hl,(Puntero_DESPLZ_izq)
 506+ 9D31 23           1 inc hl
 507+ 9D32 23           	inc hl
 508+ 9D33 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 509+ 9D35 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 510+ 9D38 CD E2 91     	call Extrae_address
 511+ 9D3B 22 0F 8C     	ld (Puntero_objeto),hl
 512+ 9D3E
 513+ 9D3E              ; Modifica (Puntero_DESPLZ_der).
 514+ 9D3E
 515+ 9D3E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 516+ 9D3E              ; Cuántos movimientos hemos hecho ??
 517+ 9D3E              ; DE contiene (Puntero_DESPLZ_izq).
 518+ 9D3E
 519+ 9D3E 2A 14 8C     7 ld hl,(Indice_Sprite_izq)
 520+ 9D41 EB           	ex de,hl
 521+ 9D42 A7           	and a
 522+ 9D43 ED 52        	sbc hl,de
 523+ 9D45 CB 3D        	srl l
 524+ 9D47 3E 08        6 ld a,8
 525+ 9D49 95           	sub l
 526+ 9D4A 30 1E        	jr nc,3F
 527+ 9D4C
 528+ 9D4C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 529+ 9D4C              ; B="0".
 530+ 9D4C
 531+ 9D4C 04           4 inc b
 532+ 9D4D 3C           	inc a
 533+ 9D4E 20 FC        	jr nz,4B
 534+ 9D50 78           	ld a,b
 535+ 9D51 08           	ex af,af
 536+ 9D52 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 537+ 9D55 23           5 inc hl
 538+ 9D56 23           	inc hl
 539+ 9D57 10 FC        	djnz 5B
 540+ 9D59 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 541+ 9D5C CD E2 91     	call Extrae_address
 542+ 9D5F 22 0F 8C     	ld (Puntero_objeto),hl
 543+ 9D62
 544+ 9D62              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 545+ 9D62              ; _(Posicion_actual).
 546+ 9D62
 547+ 9D62 21 0D 8C     	ld hl,Posicion_actual
 548+ 9D65 35           	dec (hl)
 549+ 9D66 08           	ex af,af
 550+ 9D67 6F           	ld l,a
 551+ 9D68 18 DD        	jr 6B
 552+ 9D6A
 553+ 9D6A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 554+ 9D6A
 555+ 9D6A 47           3 ld b,a
 556+ 9D6B 2A 12 8C     	ld hl,(Indice_Sprite_der)
 557+ 9D6E 23           2 inc hl
 558+ 9D6F 23           	inc hl
 559+ 9D70 10 FC        	djnz 2B
 560+ 9D72 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 561+ 9D75 C9           8 ret
 562+ 9D76
 563+ 9D76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 564+ 9D76              ;
 565+ 9D76              ;	modifica_parametros_1er_DESPLZ
 566+ 9D76              ;
 567+ 9D76              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 568+ 9D76              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 569+ 9D76              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 570+ 9D76
 571+ 9D76 3A 11 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 572+ 9D79 A7           	and a
 573+ 9D7A 20 1E        	jr nz,1F
 574+ 9D7C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 575+ 9D7D 32 11 8C         ld (CTRL_DESPLZ),a
 576+ 9D80 21 0C 8C     	ld hl,Columns
 577+ 9D83 34           	inc (hl)
 578+ 9D84 3A 1C 8C     	ld a,(Cuad_objeto)
 579+ 9D87 E6 01        	and 1
 580+ 9D89 20 0F        	jr nz,1F
 581+ 9D8B 2A 0D 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 582+ 9D8E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 583+ 9D8F 22 0D 8C     	ld (Posicion_actual),hl
 584+ 9D92 CD F7 95     	call Genera_coordenadas
 585+ 9D95 CD F1 9D     	call Dec_CTRL_DESPLZ
 586+ 9D98 18 03        	jr 2F
 587+ 9D9A CD F1 9D     1 call Dec_CTRL_DESPLZ
 588+ 9D9D C9           2 ret
 589+ 9D9E
 590+ 9D9E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 591+ 9D9E
 592+ 9D9E 3A 11 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 593+ 9DA1 FE F7        	cp $f7
 594+ 9DA3 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 595+ 9DA5 30 2C        	jr nc,3F
 596+ 9DA7
 597+ 9DA7              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 598+ 9DA7
 599+ 9DA7 06 00        	ld b,0
 600+ 9DA9 04           4 inc b
 601+ 9DAA 3C           	inc a
 602+ 9DAB FE F7        	cp $f7
 603+ 9DAD 20 FA        	jr nz,4B
 604+ 9DAF 3E FF        	ld a,$ff
 605+ 9DB1 90           	sub b
 606+ 9DB2 32 11 8C     	ld (CTRL_DESPLZ),a
 607+ 9DB5 18 1C        	jr 3F
 608+ 9DB7
 609+ 9DB7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 610+ 9DB7
 611+ 9DB7 21 0C 8C     1 ld hl,Columns
 612+ 9DBA 35           	dec (hl)
 613+ 9DBB AF           	xor a
 614+ 9DBC 32 11 8C     	ld (CTRL_DESPLZ),a
 615+ 9DBF 3A 1C 8C     	ld a,(Cuad_objeto)
 616+ 9DC2 E6 01        	and 1
 617+ 9DC4 28 0A        	jr z,2F
 618+ 9DC6 2A 0D 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 619+ 9DC9 2B           	dec hl
 620+ 9DCA 22 0D 8C     	ld (Posicion_actual),hl
 621+ 9DCD CD F7 95     	call Genera_coordenadas
 622+ 9DD0
 623+ 9DD0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 624+ 9DD0
 625+ 9DD0 CD 0A 92     2 call Inicia_puntero_objeto_izq
 626+ 9DD3 C9           3 ret
 627+ 9DD4
 628+ 9DD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 629+ 9DD4              ;
 630+ 9DD4              ;	19/10/22
 631+ 9DD4              ;
 632+ 9DD4              ;	(cp 29) para un Amadeus de 3 Columns.
 633+ 9DD4              ;	(cp 30)   ""  ""    ""     2 Columns.
 634+ 9DD4
 635+ 9DD4 3A FE 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 636+ 9DD7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 637+ 9DD9 C9           	ret
 638+ 9DDA
 639+ 9DDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 640+ 9DDA              ;
 641+ 9DDA              ;	19/10/22
 642+ 9DDA              ;
 643+ 9DDA              ;	(cp 2) para un Amadeus de 3 Columns.
 644+ 9DDA              ;	(cp 1)   ""  ""    ""     2 Columns.
 645+ 9DDA
 646+ 9DDA 3A FE 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 647+ 9DDD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 648+ 9DDF C9           	ret
 649+ 9DE0
 650+ 9DE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9DE0              ;
 652+ 9DE0              ;	24/7/22
 653+ 9DE0              ;
 654+ 9DE0              ;	Inc_CTRL_DESPLZ
 655+ 9DE0              ;
 656+ 9DE0              ;
 657+ 9DE0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9DE0
 659+ 9DE0 21 11 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9DE3 3A 23 8C     	ld a,(Vel_right)
 661+ 9DE6 A7           	and a
 662+ 9DE7 28 06        	jr z,1F
 663+ 9DE9 47           	ld b,a
 664+ 9DEA 34           3 inc (hl)
 665+ 9DEB 10 FD        	djnz 3B
 666+ 9DED 18 01        	jr 2F
 667+ 9DEF 34           1 inc (hl)
 668+ 9DF0 C9           2 ret
 669+ 9DF1
 670+ 9DF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9DF1              ;
 672+ 9DF1              ;	5/2/23
 673+ 9DF1              ;
 674+ 9DF1              ;	Dec_CTRL_DESPLZ
 675+ 9DF1              ;
 676+ 9DF1              ;
 677+ 9DF1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 678+ 9DF1
 679+ 9DF1 21 11 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 680+ 9DF4 3A 22 8C     	ld a,(Vel_left)
 681+ 9DF7 A7           	and a
 682+ 9DF8 28 06        	jr z,1F
 683+ 9DFA 47           	ld b,a
 684+ 9DFB 35           3 dec (hl)
 685+ 9DFC 10 FD        	djnz 3B
 686+ 9DFE 18 01        	jr 2F
 687+ 9E00 35           1 dec (hl)
 688+ 9E01 C9           2 ret
 689+ 9E02
 690+ 9E02              ; ---------- ---------- ---------- ---------- ---------- ----------
 691+ 9E02
 692+ 9E02 2A 0D 8C     Reaparece_derecha ld hl,(Posicion_actual)
 693+ 9E05 01 1F 00     	ld bc,31
 694+ 9E08 A7           	and a
 695+ 9E09 ED 4A        	adc hl,bc
 696+ 9E0B 22 0D 8C     	ld (Posicion_actual),hl
 697+ 9E0E 21 0A 8C     	ld hl,Ctrl_0														; $xxx1
 698+ 9E11 CB C6        	set 0,(hl)
 699+ 9E13 C9           	ret
 700+ 9E14
 701+ 9E14              ; ---------- ---------- ---------- ---------- ---------- ----------
 702+ 9E14
 703+ 9E14 2A 0D 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 704+ 9E17 01 1F 00     	ld bc,31
 705+ 9E1A A7           	and a
 706+ 9E1B ED 42        	sbc hl,bc
 707+ 9E1D 22 0D 8C     	ld (Posicion_actual),hl 											; $xx1x
 708+ 9E20 21 0A 8C     	ld hl,Ctrl_0
 709+ 9E23 CB CE        	set 1,(hl)
 710+ 9E25 C9           	ret
 711+ 9E26
 712+ 9E26              ; ---------- ---------- ---------- ---------- ---------- ----------
 713+ 9E26
 714+ 9E26 24           Reaparece_abajo inc h
 715+ 9E27 01 E0 17     	ld bc,$17e0
 716+ 9E2A A7           	and a
 717+ 9E2B ED 4A        	adc hl,bc
 718+ 9E2D 22 0D 8C     	ld (Posicion_actual),hl
 719+ 9E30 21 0A 8C     	ld hl,Ctrl_0
 720+ 9E33 CB D6        	set 2,(hl)
 721+ 9E35 C9           	ret
 722+ 9E36
 723+ 9E36              ; ---------- ---------- ---------- ---------- ---------- ----------
 724+ 9E36
 725+ 9E36 01 E0 17     Reaparece_arriba ld bc,$17e0
 726+ 9E39 A7           	and a
 727+ 9E3A ED 42        	sbc hl,bc
 728+ 9E3C 22 0D 8C     	ld (Posicion_actual),hl
 729+ 9E3F 21 0A 8C     	ld hl,Ctrl_0
 730+ 9E42 CB DE        	set 3,(hl)
 731+ 9E44 C9           	ret
 732+ 9E45
 733+ 9E45              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 734+ 9E45              ;
 735+ 9E45              ;	15/07/23
 736+ 9E45
 737+ 9E45              Reinicio
 738+ 9E45
 739+ 9E45              ; Vamos a reiniciar los punteros y variables de movimiento.
 740+ 9E45
 741+ 9E45 AF           	xor a
 742+ 9E46 21 32 8C     	ld hl,Puntero_indice_mov_bucle
 743+ 9E49 CD 67 9E     	call Limpia_contenido_hl
 744+ 9E4C
 745+ 9E4C 21 0D 8C     	ld hl,Posicion_actual
 746+ 9E4F CD 67 9E     	call Limpia_contenido_hl
 747+ 9E52
 748+ 9E52 CD 61 94     	call Situa_Puntero_indice_mov
 749+ 9E55 CD 66 9F     	call Inicia_Puntero_mov
 750+ 9E58
 751+ 9E58 21 34 8C     	ld hl,Incrementa_puntero
 752+ 9E5B 06 05        	ld b,5
 753+ 9E5D 77           1 ld (hl),a
 754+ 9E5E 23           	inc hl
 755+ 9E5F 10 FC        	djnz 1B
 756+ 9E61
 757+ 9E61 21 09 8C     	ld hl,Ctrl_2
 758+ 9E64 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 759+ 9E66
 760+ 9E66 C9           	ret
 761+ 9E67
 762+ 9E67 77           Limpia_contenido_hl	ld (hl),a
 763+ 9E68 23           	inc hl
 764+ 9E69 77           	ld (hl),a
 765+ 9E6A C9           	ret
 766+ 9E6B
 767+ 9E6B              ; ----------------------------------------------------------------------------------------------------------------
 768+ 9E6B              ;
 769+ 9E6B              ;	18/6/24
 770+ 9E6B              ;
 771+ 9E6B
 772+ 9E6B              Amadeus_a_izquierda
 773+ 9E6B
 774+ 9E6B              ;	Actualiza contador de movimientos.
 775+ 9E6B
 776+ 9E6B 21 B7 89     	ld hl,Comm_Amadeus
 777+ 9E6E 35           	dec (hl)
 778+ 9E6F 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 779+ 9E71
 780+ 9E71 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 781+ 9E74 2B           	dec hl
 782+ 9E75 2B           	dec hl
 783+ 9E76 2B           	dec hl
 784+ 9E77 2B           	dec hl
 785+ 9E78 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 786+ 9E7B
 787+ 9E7B 21 74 8C     	ld hl,Ctrl_3
 788+ 9E7E CB EE        	set 5,(hl)
 789+ 9E80
 790+ 9E80 C9           	ret
 791+ 9E81
 792+ 9E81 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 793+ 9E82 C9           	ret
 794+ 9E83
 795+ 9E83
 796+ 9E83              Amadeus_a_derecha
 797+ 9E83
 798+ 9E83              ;	Actualiza contador de movimientos.
 799+ 9E83
 800+ 9E83 21 B7 89     	ld hl,Comm_Amadeus
 801+ 9E86 34           	inc (hl)
 802+ 9E87 3E 7A        	ld a,$7a
 803+ 9E89 BE           	cp (hl)
 804+ 9E8A 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 805+ 9E8C
 806+ 9E8C 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 807+ 9E8F 23           	inc hl
 808+ 9E90 23           	inc hl
 809+ 9E91 23           	inc hl
 810+ 9E92 23           	inc hl
 811+ 9E93 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 812+ 9E96
 813+ 9E96 21 74 8C     	ld hl,Ctrl_3
 814+ 9E99 CB EE        	set 5,(hl)
 815+ 9E9B C9           	ret
 816+ 9E9C
 817+ 9E9C 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 818+ 9E9D C9           	ret
# file closed: Direcciones.asm
2397  9E9E              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E9E              ; ----- ----- ----- ----- -----
   2+ 9E9E              ;
   3+ 9E9E              ;   28/12/23
   4+ 9E9E
   5+ 9E9E              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
   6+ 9E9E
   7+ 9E9E              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
   8+ 9E9E
   9+ 9E9E              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  10+ 9E9E              ;                               Izquierda_y_subiendo+8 (11)
  11+ 9E9E              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  12+ 9E9E              ;                               Izquierda_y_subiendo+8 (8)
  13+ 9E9E              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  14+ 9E9E              ;                               Izquierda_y_subiendo+8 (8)
  15+ 9E9E              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  16+ 9E9E              ;                               Izquierda_y_subiendo+8 (8)
  17+ 9E9E              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  18+ 9E9E              ;                               Izquierda_y_subiendo+8 (8)
  19+ 9E9E              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  20+ 9E9E              ;                               Izquierda_y_subiendo+8 (7)
  21+ 9E9E              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  22+ 9E9E              ;                               Izquierda_y_subiendo+8 (7)
  23+ 9E9E              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  24+ 9E9E              ;                               Izquierda_y_subiendo+8 (7)
  25+ 9E9E              Movimiento
  26+ 9E9E
  27+ 9E9E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  28+ 9E9E
  29+ 9E9E 3A 09 8C         ld a,(Ctrl_2)
  30+ 9EA1 CB 57            bit 2,a
  31+ 9EA3 20 1B            jr nz, Desplazamiento_iniciado
  32+ 9EA5
  33+ 9EA5 2A 30 8C         ld hl,(Puntero_mov)
  34+ 9EA8 7E               ld a,(hl)
  35+ 9EA9
  36+ 9EA9              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  37+ 9EA9
  38+ 9EA9              Inicia_desplazamiento.
  39+ 9EA9
  40+ 9EA9              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  41+ 9EA9
  42+ 9EA9 CD 9C 9F         call Ajusta_velocidad_desplazamiento
  43+ 9EAC
  44+ 9EAC              ; Iniciamos (Repetimos_mov).
  45+ 9EAC
  46+ 9EAC 7E               ld a,(hl)
  47+ 9EAD E6 0F            and $0f
  48+ 9EAF 32 36 8C         ld (Repetimos_desplazamiento),a
  49+ 9EB2 32 37 8C         ld (Repetimos_desplazamiento_backup),a
  50+ 9EB5
  51+ 9EB5              ; Iniciamos (Cola_de_desplazamiento).
  52+ 9EB5
  53+ 9EB5 23               inc hl
  54+ 9EB6 7E               ld a,(hl)
  55+ 9EB7 32 39 8C         ld (Cola_de_desplazamiento),a
  56+ 9EBA 2B               dec hl
  57+ 9EBB
  58+ 9EBB 21 09 8C         ld hl,Ctrl_2
  59+ 9EBE CB D6            set 2,(hl)
  60+ 9EC0
  61+ 9EC0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  62+ 9EC0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  63+ 9EC0
  64+ 9EC0              Desplazamiento_iniciado
  65+ 9EC0
  66+ 9EC0 CD 70 9F         call Aplica_desplazamiento
  67+ 9EC3
  68+ 9EC3              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  69+ 9EC3
  70+ 9EC3 3A 74 8C         ld a,(Ctrl_3)
  71+ 9EC6 CB 4F            bit 1,a
  72+ 9EC8 C0               ret nz
  73+ 9EC9
  74+ 9EC9 21 36 8C     3 ld hl,Repetimos_desplazamiento
  75+ 9ECC 35               dec (hl)
  76+ 9ECD C0               ret nz
  77+ 9ECE
  78+ 9ECE              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  79+ 9ECE              ; Hay que volver a ejecutar este desplazamiento ???.
  80+ 9ECE              ; Analiza (Cola_de_desplazamiento).
  81+ 9ECE
  82+ 9ECE 3A 39 8C     Cola ld a,(Cola_de_desplazamiento)
  83+ 9ED1 A7               and a
  84+ 9ED2 CC C5 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  85+ 9ED5 28 30            jr z,Reinicia_el_movimiento
  86+ 9ED7
  87+ 9ED7 FE FF            cp $ff
  88+ 9ED9 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  89+ 9EDB
  90+ 9EDB FE FE            cp $fe
  91+ 9EDD CC 4A 9F         call z,Fijamos_bucle
  92+ 9EE0 28 25            jr z,Reinicia_el_movimiento
  93+ 9EE2
  94+ 9EE2 FE FD            cp $fd
  95+ 9EE4 20 11            jr nz,1F
  96+ 9EE6
  97+ 9EE6              ; ---
  98+ 9EE6              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  99+ 9EE6
 100+ 9EE6 3A 09 8C         ld a,(Ctrl_2)
 101+ 9EE9 CB 5F            bit 3,a
 102+ 9EEB 20 1A            jr nz,Reinicia_el_movimiento
 103+ 9EED
 104+ 9EED              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 105+ 9EED
 106+ 9EED 21 09 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 107+ 9EF0 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 108+ 9EF2
 109+ 9EF2 CD 5B 9F         call Inicia_Repetimos_movimiento
 110+ 9EF5 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 111+ 9EF7              ; ---
 112+ 9EF7
 113+ 9EF7 FE 01        1 cp 1
 114+ 9EF9 CA 34 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 115+ 9EFC
 116+ 9EFC 3D               dec a
 117+ 9EFD 32 39 8C         ld (Cola_de_desplazamiento),a
 118+ 9F00
 119+ 9F00 3A 37 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 120+ 9F03 32 36 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 121+ 9F06              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 122+ 9F06 C9               ret
 123+ 9F07
 124+ 9F07              Reinicia_el_movimiento
 125+ 9F07
 126+ 9F07 3A 09 8C         ld a,(Ctrl_2)
 127+ 9F0A CB 5F            bit 3,a
 128+ 9F0C 28 1B            jr z,2F
 129+ 9F0E
 130+ 9F0E              ; (Cola_de_desplazamiento)="254".
 131+ 9F0E
 132+ 9F0E 21 38 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 133+ 9F11 35               dec (hl)
 134+ 9F12 20 15            jr nz,2F
 135+ 9F14
 136+ 9F14              ; Fin de las repeticiones del último movimiento.
 137+ 9F14
 138+ 9F14 21 09 8C         ld hl,Ctrl_2
 139+ 9F17 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 140+ 9F19
 141+ 9F19 2A 30 8C         ld hl,(Puntero_mov)
 142+ 9F1C 23               inc hl
 143+ 9F1D 23               inc hl
 144+ 9F1E 23               inc hl
 145+ 9F1F 22 30 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 146+ 9F22              ;                                                               ; _ para ejecutar su mandato. :)
 147+ 9F22 7E               ld a,(hl)
 148+ 9F23 32 39 8C         ld (Cola_de_desplazamiento),a
 149+ 9F26
 150+ 9F26 C3 CE 9E         jp Cola
 151+ 9F29
 152+ 9F29 CD 66 9F     2 call Inicia_Puntero_mov
 153+ 9F2C
 154+ 9F2C 21 09 8C         ld hl,Ctrl_2
 155+ 9F2F CB 96            res 2,(hl)
 156+ 9F31
 157+ 9F31 C3 9E 9E         jp Movimiento
 158+ 9F34
 159+ 9F34              Siguiente_desplazamiento
 160+ 9F34
 161+ 9F34              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 162+ 9F34              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 163+ 9F34
 164+ 9F34 21 09 8C         ld hl,Ctrl_2
 165+ 9F37 CB 96            res 2,(hl)
 166+ 9F39
 167+ 9F39 2A 30 8C         ld hl,(Puntero_mov)
 168+ 9F3C 23               inc hl
 169+ 9F3D 23               inc hl
 170+ 9F3E 22 30 8C         ld (Puntero_mov),hl
 171+ 9F41
 172+ 9F41 7E               ld a,(hl)
 173+ 9F42 A7               and a
 174+ 9F43 CC C5 9F         call z,Incrementa_Puntero_indice_mov
 175+ 9F46 CA 07 9F         jp z,Reinicia_el_movimiento
 176+ 9F49
 177+ 9F49 C9               ret
 178+ 9F4A
 179+ 9F4A              ; Subrutinas -----------------------------------------
 180+ 9F4A              ; ---------- --------- --------- ---------- ----------
 181+ 9F4A              ;
 182+ 9F4A              ;   24/07/23
 183+ 9F4A              ;
 184+ 9F4A              ;   Fijamos_bucle
 185+ 9F4A              ;
 186+ 9F4A              ;
 187+ 9F4A
 188+ 9F4A              Fijamos_bucle
 189+ 9F4A
 190+ 9F4A 3A 34 8C         ld a,(Incrementa_puntero)
 191+ 9F4D 3C               inc a
 192+ 9F4E 32 35 8C         ld (Incrementa_puntero_backup),a
 193+ 9F51
 194+ 9F51 CD C5 9F         call Incrementa_Puntero_indice_mov
 195+ 9F54 2A 2E 8C         ld hl,(Puntero_indice_mov)
 196+ 9F57 22 32 8C         ld (Puntero_indice_mov_bucle),hl
 197+ 9F5A C9               ret
 198+ 9F5B
 199+ 9F5B              ; ---------- --------- --------- ---------- ----------
 200+ 9F5B              ;
 201+ 9F5B              ;   07/7/23
 202+ 9F5B              ;
 203+ 9F5B              ;   Inicia_Repetimos_movimiento
 204+ 9F5B              ;
 205+ 9F5B              ;
 206+ 9F5B
 207+ 9F5B              Inicia_Repetimos_movimiento
 208+ 9F5B
 209+ 9F5B              ; Iniciamos (Repetimos_movimiento).
 210+ 9F5B
 211+ 9F5B DD 2A 30 8C      ld ix,(Puntero_mov)
 212+ 9F5F DD 7E 02         ld a,(ix+2)
 213+ 9F62 32 38 8C         ld (Repetimos_movimiento),a
 214+ 9F65
 215+ 9F65 C9               ret
 216+ 9F66
 217+ 9F66              ; ---------- --------- --------- ---------- ----------
 218+ 9F66              ;
 219+ 9F66              ;   26/6/23
 220+ 9F66              ;
 221+ 9F66              ;   Inicia_Puntero_mov
 222+ 9F66              ;
 223+ 9F66              ;
 224+ 9F66
 225+ 9F66 2A 2E 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 226+ 9F69 CD E2 91         call Extrae_address
 227+ 9F6C 22 30 8C         ld (Puntero_mov),hl
 228+ 9F6F C9               ret
 229+ 9F70
 230+ 9F70              ; ---------- --------- --------- ---------- ----------
 231+ 9F70              ;
 232+ 9F70              ;   27/06/23
 233+ 9F70              ;
 234+ 9F70              ;   Aplica_movimiento.
 235+ 9F70
 236+ 9F70              Aplica_desplazamiento
 237+ 9F70
 238+ 9F70              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 239+ 9F70
 240+ 9F70 2A 30 8C         ld hl, (Puntero_mov)
 241+ 9F73
 242+ 9F73 7E               ld a,(hl)
 243+ 9F74 E6 F0            and $f0
 244+ 9F76 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 245+ 9F77
 246+ 9F77 CB 7E            bit 7,(hl)
 247+ 9F79 28 03            jr z,1F
 248+ 9F7B CD 66 9B         call Mov_up
 249+ 9F7E 2A 30 8C     1 ld hl, (Puntero_mov)
 250+ 9F81 CB 76            bit 6,(hl)
 251+ 9F83 28 03            jr z,2F
 252+ 9F85 CD 32 9B         call Mov_down
 253+ 9F88
 254+ 9F88              ; Se ha aplicado reinicio ???
 255+ 9F88              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 256+ 9F88
 257+ 9F88              ;    ld a,(Ctrl_3)
 258+ 9F88              ;    bit 1,a
 259+ 9F88              ;    ret nz
 260+ 9F88
 261+ 9F88 2A 30 8C     2 ld hl, (Puntero_mov)
 262+ 9F8B CB 6E            bit 5,(hl)
 263+ 9F8D 28 03            jr z,3F
 264+ 9F8F CD BD 9C         call Mov_left
 265+ 9F92 2A 30 8C     3 ld hl, (Puntero_mov)
 266+ 9F95 CB 66            bit 4,(hl)
 267+ 9F97 C8               ret z
 268+ 9F98 CD A4 9B         call Mov_right
 269+ 9F9B C9               ret
 270+ 9F9C
 271+ 9F9C              ; ---------- --------- --------- ---------- ----------
 272+ 9F9C              ;
 273+ 9F9C              ;   26/06/23
 274+ 9F9C              ;
 275+ 9F9C              ;   Ajusta_velocidad_desplazamiento.
 276+ 9F9C
 277+ 9F9C              Ajusta_velocidad_desplazamiento
 278+ 9F9C
 279+ 9F9C              ; 1er byte de la cadena de movimiento.
 280+ 9F9C              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 281+ 9F9C
 282+ 9F9C CD BA 9F         call Extrae_nibble_alto
 283+ 9F9F
 284+ 9F9F 32 24 8C         ld (Vel_up),a
 285+ 9FA2 79               ld a,c
 286+ 9FA3 E6 0F            and $0f
 287+ 9FA5 32 25 8C         ld (Vel_down),a
 288+ 9FA8
 289+ 9FA8              ; Saltamos al 2º byte de la cadena de movimiento.
 290+ 9FA8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 291+ 9FA8
 292+ 9FA8 23               inc hl
 293+ 9FA9 CD BA 9F         call Extrae_nibble_alto
 294+ 9FAC
 295+ 9FAC 32 22 8C         ld (Vel_left),a
 296+ 9FAF 79               ld a,c
 297+ 9FB0 E6 0F            and $0f
 298+ 9FB2 32 23 8C         ld (Vel_right),a
 299+ 9FB5
 300+ 9FB5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 301+ 9FB5
 302+ 9FB5 23               inc hl
 303+ 9FB6 22 30 8C         ld (Puntero_mov),hl
 304+ 9FB9 C9               ret
 305+ 9FBA
 306+ 9FBA 06 04        Extrae_nibble_alto ld b,4
 307+ 9FBC 7E               ld a,(hl)
 308+ 9FBD 4F               ld c,a
 309+ 9FBE E6 F0            and $f0
 310+ 9FC0 CB 3F        1 srl a
 311+ 9FC2 10 FC            djnz 1B
 312+ 9FC4 C9               ret
 313+ 9FC5
 314+ 9FC5              ; ---------- --------- --------- ---------- ----------
 315+ 9FC5              ;
 316+ 9FC5              ;   5/7/23
 317+ 9FC5              ;
 318+ 9FC5              ;   Incrementa_Puntero_indice_mov
 319+ 9FC5
 320+ 9FC5              Incrementa_Puntero_indice_mov
 321+ 9FC5
 322+ 9FC5 21 34 8C         ld hl,Incrementa_puntero
 323+ 9FC8 34               inc (hl)
 324+ 9FC9
 325+ 9FC9 2A 2E 8C         ld hl,(Puntero_indice_mov)
 326+ 9FCC 01 02 00         ld bc,2
 327+ 9FCF A7               and a
 328+ 9FD0 09               add hl,bc
 329+ 9FD1 22 2E 8C         ld (Puntero_indice_mov),hl
 330+ 9FD4
 331+ 9FD4 7E               ld a,(hl)
 332+ 9FD5 A7               and a
 333+ 9FD6
 334+ 9FD6              ;! STOP. Fin del patrón de movimiento de la entidad.
 335+ 9FD6
 336+ 9FD6              ;    jr z,$
 337+ 9FD6
 338+ 9FD6              ;! Reinicia el Patrón de movimiento.
 339+ 9FD6
 340+ 9FD6 CC DB 9F         call z,Inicializa_Puntero_indice_mov_2
 341+ 9FD9
 342+ 9FD9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 343+ 9FDA
 344+ 9FDA C9               ret
 345+ 9FDB
 346+ 9FDB              ; ---------- --------- --------- ---------- ----------
 347+ 9FDB              ;
 348+ 9FDB              ;   15/01/24
 349+ 9FDB              ;
 350+ 9FDB              ;   Inicializa_Puntero_indice_mov
 351+ 9FDB
 352+ 9FDB              Inicializa_Puntero_indice_mov_2
 353+ 9FDB
 354+ 9FDB              ; Existe etiqueta de bucle principal???
 355+ 9FDB
 356+ 9FDB 2A 32 8C         ld hl,(Puntero_indice_mov_bucle)
 357+ 9FDE 24               inc h
 358+ 9FDF 25               dec h
 359+ 9FE0 28 05            jr z,2F
 360+ 9FE2
 361+ 9FE2 22 2E 8C         ld (Puntero_indice_mov),hl
 362+ 9FE5 18 14            jr 3F
 363+ 9FE7
 364+ 9FE7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 365+ 9FE7
 366+ 9FE7 3A 34 8C     2 ld a,(Incrementa_puntero)
 367+ 9FEA 47               ld b,a
 368+ 9FEB
 369+ 9FEB 2A 2E 8C         ld hl,(Puntero_indice_mov)
 370+ 9FEE 2B           1 dec hl
 371+ 9FEF 2B               dec hl
 372+ 9FF0 10 FC            djnz 1B
 373+ 9FF2 22 2E 8C         ld (Puntero_indice_mov),hl
 374+ 9FF5
 375+ 9FF5 AF               xor a
 376+ 9FF6 32 34 8C         ld (Incrementa_puntero),a
 377+ 9FF9 18 06            jr 4F
 378+ 9FFB
 379+ 9FFB 3A 35 8C     3 ld a,(Incrementa_puntero_backup)
 380+ 9FFE 32 34 8C         ld (Incrementa_puntero),a
 381+ A001 C9           4 ret
 382+ A002
 383+ A002              ; ----------------------------------------------------------------------
 384+ A002              ;
 385+ A002              ;   24/11/24
 386+ A002              ;
 387+ A002              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 388+ A002
 389+ A002 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 390+ A005 CD 70 95         call Calcula_salto_en_BC
 391+ A008 21 26 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 392+ A00B A7               and a
 393+ A00C ED 4A            adc hl,bc
 394+ A00E C9               ret
 395+ A00F
 396+ A00F              ; ----------------------------------------------------------------------
 397+ A00F              ;
 398+ A00F              ;   24/11/24
 399+ A00F              ;
 400+ A00F              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 401+ A00F              ;
 402+ A00F              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 403+ A00F
 404+ A00F 4E           Transfiere_datos_de_contadores ld c,(hl)
 405+ A010 23               inc hl
 406+ A011 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 407+ A012 DD 71 09         ld (ix+9),c
 408+ A015 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 409+ A018 C9               ret
 410+ A019
# file closed: Movimiento.asm
2398  A019              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A019              ; --------------------------------------------------------------------------------------
   2+ A019              ;
   3+ A019              ;   25/10/24
   4+ A019              ;
   5+ A019
   6+ A019              Pinta_disparos_Entidades
   7+ A019
   8+ A019 ED 73 4C 8C      ld (Stack),sp
   9+ A01D ED 7B 5E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A021
  11+ A021 3E 02            ld a,2
  12+ A023 08               ex af,af
  13+ A024
  14+ A024 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A026              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A026              ;                                     _ No encontraría "0".
  17+ A026 FD E1        4 pop iy
  18+ A028 D1               pop de                          ; 1er .db IYL
  19+ A029              ;                                   ; 2º  .db IYH
  20+ A029              ;                                   ; 3er .db E.
  21+ A029              ;   Album vacío ???
  22+ A029
  23+ A029 FD 7D            ld a,iyl
  24+ A02B FD 84            add iyh
  25+ A02D 83               add e
  26+ A02E 28 1F            jr z,1F
  27+ A030
  28+ A030              ;   Imprime album, (contiene datos).
  29+ A030
  30+ A030 3B               dec sp
  31+ A031
  32+ A031 E1               pop hl                          ; Puntero de impresión en HL.
  33+ A032
  34+ A032              ; Imprime el 1er scanline del disparo.
  35+ A032
  36+ A032 FD 7D            ld a,iyl
  37+ A034 AE               xor (hl)
  38+ A035 77               ld (hl),a
  39+ A036
  40+ A036 2C               inc l
  41+ A037
  42+ A037 FD 7C            ld a,iyh
  43+ A039 AE               xor (hl)
  44+ A03A 77               ld (hl),a
  45+ A03B
  46+ A03B 2C               inc l
  47+ A03C
  48+ A03C 7B               ld a,e
  49+ A03D AE               xor (hl)
  50+ A03E 77               ld (hl),a
  51+ A03F
  52+ A03F              ; Imprime el 2º scanline del disparo.
  53+ A03F
  54+ A03F E1               pop hl
  55+ A040
  56+ A040 FD 7D            ld a,iyl
  57+ A042 AE               xor (hl)
  58+ A043 77               ld (hl),a
  59+ A044
  60+ A044 2C               inc l
  61+ A045
  62+ A045 FD 7C            ld a,iyh
  63+ A047 AE               xor (hl)
  64+ A048 77               ld (hl),a
  65+ A049
  66+ A049 2C               inc l
  67+ A04A
  68+ A04A 7B               ld a,e
  69+ A04B AE               xor (hl)
  70+ A04C 77               ld (hl),a
  71+ A04D
  72+ A04D 10 D7            djnz 4B
  73+ A04F
  74+ A04F 08           1 ex af,af
  75+ A050 3D               dec a
  76+ A051 20 05            jr nz,2F
  77+ A053
  78+ A053 ED 7B 4C 8C      ld sp,(Stack)
  79+ A057 C9               ret
  80+ A058
  81+ A058 ED 7B 5C 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A05C 08               ex af,af
  83+ A05D 18 C5            jr 3B
  84+ A05F
  85+ A05F              ; --------------------------------------------------------------------------------------
  86+ A05F              ;
  87+ A05F              ;   2/12/24
  88+ A05F              ;
  89+ A05F
  90+ A05F              Motor_de_disparos_entidades
  91+ A05F
  92+ A05F 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A062 FE 07            cp 7
  94+ A064 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A065
  96+ A065 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A067 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A06A
  99+ A06A CD E2 91     1 call Extrae_address
 100+ A06D 1C               inc e
 101+ A06E 1C               inc e
 102+ A06F ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A073
 104+ A073               ; Caja vacía ???
 105+ A073
 106+ A073 2D               dec l
 107+ A074 7E               ld a,(hl)
 108+ A075 A7               and a
 109+ A076 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A078
 111+ A078              ; --- Trabajamos con caja:
 112+ A078
 113+ A078 2C               inc l
 114+ A079
 115+ A079              ; --- Existe posibilidad de impacto ???
 116+ A079
 117+ A079 3A 9D 8C         ld a,(Shield)
 118+ A07C A7               and a
 119+ A07D 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A07F
 121+ A07F CB 46            bit 0,(hl)
 122+ A081 C4 C1 A0         call nz, Comprueba_impacto_con_Amadeus
 123+ A084 20 37            jr nz,3F
 124+ A086
 125+ A086 CD 48 A1     6 call Rota_disparo_si_procede
 126+ A089
 127+ A089              ; ------------------------------------------------------------
 128+ A089
 129+ A089 2D               dec l
 130+ A08A 2D               dec l
 131+ A08B
 132+ A08B CD E2 91         call Extrae_address
 133+ A08E
 134+ A08E              ;   (Puntero_de_impresion) del disparo en HL
 135+ A08E              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A08E
 137+ A08E 3A 76 8C         ld a,(Ctrl_5)
 138+ A091 CB 57            bit 2,a
 139+ A093 28 09            jr z,4F
 140+ A095
 141+ A095 CB 97            res 2,a
 142+ A097 32 76 8C         ld (Ctrl_5),a
 143+ A09A 2C               inc l
 144+ A09B 2C               inc l
 145+ A09C 18 0C            jr 5F
 146+ A09E
 147+ A09E CB 5F        4 bit 3,a
 148+ A0A0 28 08            jr z,5F
 149+ A0A2
 150+ A0A2 CB 9F            res 3,a
 151+ A0A4 32 76 8C         ld (Ctrl_5),a
 152+ A0A7 2D               dec l
 153+ A0A8 2D               dec l
 154+ A0A9 2D               dec l
 155+ A0AA
 156+ A0AA              ; ---------------------------------------------------------------------
 157+ A0AA
 158+ A0AA              ;! Velocidad del disparo de entidades.
 159+ A0AA
 160+ A0AA CD EC 9A     5 call NextScan
 161+ A0AD CD EC 9A         call NextScan
 162+ A0B0
 163+ A0B0              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A0B0
 165+ A0B0 CD 25 A1         call Fin_de_disparo_de_entidad
 166+ A0B3
 167+ A0B3 EB               ex de,hl
 168+ A0B4
 169+ A0B4 73               ld (hl),e
 170+ A0B5 23               inc hl
 171+ A0B6 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A0B7
 173+ A0B7 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A0BA 18 02            jr 2F
 175+ A0BC
 176+ A0BC C9               ret
 177+ A0BD
 178+ A0BD EB           3 ex de,hl
 179+ A0BE 10 AA        2 djnz 1B
 180+ A0C0
 181+ A0C0 C9               ret
 182+ A0C1
 183+ A0C1              ; ------------- ------------- ------------
 184+ A0C1              ;
 185+ A0C1              ;   1/11/24
 186+ A0C1
 187+ A0C1              Comprueba_impacto_con_Amadeus
 188+ A0C1
 189+ A0C1              ;   El disparo se encuentra en zona de Amadeus.
 190+ A0C1              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A0C1
 192+ A0C1              ;   Modificamos registros, así que guardamos ...
 193+ A0C1
 194+ A0C1 C5               push bc
 195+ A0C2 E5               push hl
 196+ A0C3 D5               push de
 197+ A0C4
 198+ A0C4 2D               dec l
 199+ A0C5 2D               dec l
 200+ A0C6
 201+ A0C6 CD E2 91         call Extrae_address
 202+ A0C9
 203+ A0C9 3A AF 89         ld a,(CX_Amadeus)
 204+ A0CC 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A0CD
 206+ A0CD 7D               ld a,l
 207+ A0CE E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A0D0
 209+ A0D0 06 03            ld b,3
 210+ A0D2
 211+ A0D2 B9           1 cp c
 212+ A0D3 28 15            jr z,Coincidencia
 213+ A0D5 0C               inc c
 214+ A0D6 10 FA            djnz 1B
 215+ A0D8
 216+ A0D8 0D               dec c
 217+ A0D9 0D               dec c
 218+ A0DA 0D               dec c
 219+ A0DB
 220+ A0DB 3C               inc a
 221+ A0DC B9               cp c
 222+ A0DD 28 0B            jr z,Coincidencia
 223+ A0DF
 224+ A0DF 3C               inc a
 225+ A0E0 B9               cp c
 226+ A0E1 28 07            jr z,Coincidencia
 227+ A0E3
 228+ A0E3 D1           2 pop de
 229+ A0E4 E1               pop hl
 230+ A0E5 C1               pop bc
 231+ A0E6
 232+ A0E6              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A0E6
 234+ A0E6 CB 86            res 0,(hl)
 235+ A0E8 AF               xor a                       ; Z before RET.
 236+ A0E9 C9               ret
 237+ A0EA
 238+ A0EA              Coincidencia
 239+ A0EA
 240+ A0EA              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A0EA              ;   Existe posibilidad de impacto.
 242+ A0EA              ;   Vamos a averiguarlo ...
 243+ A0EA
 244+ A0EA 1D               dec e
 245+ A0EB 1D               dec e
 246+ A0EC 1D               dec e
 247+ A0ED
 248+ A0ED              ; DE en Puntero_objeto del disparo.
 249+ A0ED              ; HL en Puntero_de_impresión del disparo.
 250+ A0ED
 251+ A0ED              ; Comparador:
 252+ A0ED
 253+ A0ED 06 03            ld b,3
 254+ A0EF
 255+ A0EF 1A           3 ld a,(de)
 256+ A0F0 4F               ld c,a
 257+ A0F1 A6               and (hl)
 258+ A0F2 B9               cp c
 259+ A0F3 20 06            jr nz,Amadeus_impactado
 260+ A0F5
 261+ A0F5 2C               inc l
 262+ A0F6 1C               inc e
 263+ A0F7
 264+ A0F7 10 F6            djnz 3B
 265+ A0F9
 266+ A0F9 18 E8            jr 2B
 267+ A0FB
 268+ A0FB              Amadeus_impactado
 269+ A0FB
 270+ A0FB              ; Borramos disparo.
 271+ A0FB
 272+ A0FB              ;   Exclusion.
 273+ A0FB
 274+ A0FB D1               pop de
 275+ A0FC E1               pop hl
 276+ A0FD
 277+ A0FD E5               push hl
 278+ A0FE D5               push de
 279+ A0FF
 280+ A0FF CD B3 A1         call Borra_6_bytes
 281+ A102
 282+ A102 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A105 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A106
 285+ A106              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A106
 287+ A106 21 B2 89         ld hl,Impacto_Amadeus
 288+ A109 36 01            ld (hl),1
 289+ A10B
 290+ A10B              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A10B              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A10B
 293+ A10B 3A B3 89         ld a,(p.imp.amadeus)
 294+ A10E FE DE            cp $de
 295+ A110 20 04            jr nz,1F
 296+ A112
 297+ A112 3D               dec a
 298+ A113 32 B3 89         ld (p.imp.amadeus),a
 299+ A116
 300+ A116              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A116
 302+ A116 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A119 21 B5 89         ld hl,Pamm_Amadeus
 304+ A11C
 305+ A11C 73               ld (hl),e
 306+ A11D 23               inc hl
 307+ A11E 72               ld (hl),d
 308+ A11F
 309+ A11F D1               pop de
 310+ A120 E1               pop hl
 311+ A121 C1               pop bc
 312+ A122
 313+ A122 AF               xor a
 314+ A123 3C               inc a               ; NZ before RET.
 315+ A124 C9               ret
 316+ A125
 317+ A125              ; ------------- ------------- ------------
 318+ A125              ;
 319+ A125              ;   31/10/24
 320+ A125
 321+ A125              Fin_de_disparo_de_entidad
 322+ A125
 323+ A125              ; Estamos en zona de Amadeus ??
 324+ A125
 325+ A125 7C               ld a,h
 326+ A126 FE 54            cp $54
 327+ A128 38 0D            jr c,1F
 328+ A12A
 329+ A12A D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A12B
 331+ A12B 5D               ld e,l
 332+ A12C 54               ld d,h
 333+ A12D
 334+ A12D 21 E0 57         ld hl,$57e0
 335+ A130 ED 52            sbc hl,de
 336+ A132
 337+ A132 38 6F            jr c,Elimina_disparo_entidad
 338+ A134
 339+ A134 6B               ld l,e
 340+ A135 62               ld h,d
 341+ A136
 342+ A136 D1               pop de
 343+ A137
 344+ A137 7C           1 ld a,h
 345+ A138 FE 50            cp $50
 346+ A13A D8               ret c
 347+ A13B
 348+ A13B 7D               ld a,l
 349+ A13C FE C0            cp $c0
 350+ A13E D8               ret c
 351+ A13F
 352+ A13F              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A13F              ; Así podremos comprobar si hay colisión más adelante.
 354+ A13F
 355+ A13F 1C               inc e
 356+ A140 1C               inc e
 357+ A141
 358+ A141 EB               ex de,hl
 359+ A142 CB C6            set 0,(hl)
 360+ A144 EB               ex de,hl
 361+ A145
 362+ A145 1D               dec e
 363+ A146 1D               dec e
 364+ A147
 365+ A147 C9               ret
 366+ A148
 367+ A148              ; ----------------------------------------------------------
 368+ A148              ;
 369+ A148              ;   08/10/24
 370+ A148
 371+ A148              ;   Estructura de un disparo de entidades.
 372+ A148
 373+ A148              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A148              ; 	defw 0											; Puntero de impresión.
 375+ A148              ;	defw 0											; Control.
 376+ A148
 377+ A148              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A148              ;   _de la entidad en el momento de disparar.
 379+ A148
 380+ A148              ;   El byte alto muestra la siguiente información:
 381+ A148              ;
 382+ A148              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A148              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A148              ;
 385+ A148              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A148              ;
 387+ A148              ;                        10xx ..... Izquierda.
 388+ A148              ;                        01xx ..... Derecha.
 389+ A148              ;                        00xx ..... Recto.
 390+ A148
 391+ A148              Rota_disparo_si_procede
 392+ A148
 393+ A148              ;   Nos situamos en el byte alto de (Control).
 394+ A148
 395+ A148 CB 76            bit 6,(hl)
 396+ A14A 20 2D            jr nz,Rota_a_derecha
 397+ A14C CB 7E            bit 7,(hl)
 398+ A14E C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A14F
 400+ A14F              Rota_a_izq
 401+ A14F
 402+ A14F E5               push hl
 403+ A150
 404+ A150 7D               ld a,l
 405+ A151 D6 05            sub 5
 406+ A153 6F               ld l,a
 407+ A154
 408+ A154 E5               push hl
 409+ A155 FD E1            pop iy
 410+ A157
 411+ A157 A7               and a
 412+ A158
 413+ A158 FD CB 02 16      rl (iy+02)
 414+ A15C FD CB 01 16      rl (iy+01)
 415+ A160 FD CB 00 16      rl (iy+00)
 416+ A164
 417+ A164 30 3B            jr nc,Exit
 418+ A166
 419+ A166              ; Desplazamiento completo hasta Carry.
 420+ A166              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A166
 422+ A166 FD 36 02 03      ld (iy+02),$03
 423+ A16A FD 36 01 00      ld (iy+01),$00
 424+ A16E FD 36 00 00      ld (iy+00),$00
 425+ A172
 426+ A172 21 76 8C         ld hl,Ctrl_5
 427+ A175 CB DE            set 3,(hl)
 428+ A177
 429+ A177 18 28            jr Exit
 430+ A179
 431+ A179              Rota_a_derecha
 432+ A179
 433+ A179 E5               push hl
 434+ A17A
 435+ A17A 7D               ld a,l
 436+ A17B D6 05            sub 5
 437+ A17D 6F               ld l,a
 438+ A17E
 439+ A17E E5               push hl
 440+ A17F FD E1            pop iy
 441+ A181
 442+ A181 A7               and a
 443+ A182
 444+ A182 FD CB 00 1E      rr (iy+00)
 445+ A186 FD CB 01 1E      rr (iy+01)
 446+ A18A FD CB 02 1E      rr (iy+02)
 447+ A18E
 448+ A18E 30 11            jr nc,Exit
 449+ A190
 450+ A190              ; Desplazamiento completo hasta Carry.
 451+ A190              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A190
 453+ A190 FD 36 00 01      ld (iy+00),$01
 454+ A194 FD 36 01 80      ld (iy+01),$80
 455+ A198 FD 36 02 00      ld (iy+02),$00
 456+ A19C
 457+ A19C 21 76 8C         ld hl,Ctrl_5
 458+ A19F CB D6            set 2,(hl)
 459+ A1A1
 460+ A1A1 E1           Exit pop hl
 461+ A1A2 C9               ret
 462+ A1A3
 463+ A1A3              ; ------------ ----------- ------------
 464+ A1A3              ;
 465+ A1A3              ;   25/9/24
 466+ A1A3
 467+ A1A3              Elimina_disparo_entidad
 468+ A1A3
 469+ A1A3 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A1A6 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A1A7
 472+ A1A7 E1               pop hl
 473+ A1A8 E5               push hl
 474+ A1A9
 475+ A1A9 2C               inc l
 476+ A1AA 2C               inc l
 477+ A1AB
 478+ A1AB CD B3 A1         call Borra_6_bytes
 479+ A1AE
 480+ A1AE D1               pop de
 481+ A1AF
 482+ A1AF 21 00 00         ld hl,0
 483+ A1B2
 484+ A1B2 C9               ret
 485+ A1B3
 486+ A1B3              ; ----- ----- ----- ----- -----
 487+ A1B3
 488+ A1B3              Borra_6_bytes
 489+ A1B3
 490+ A1B3 16 06            ld d,6                                                    ; Contador
 491+ A1B5 AF               xor a                                                     ; Borrador
 492+ A1B6 77           1 ld (hl),a
 493+ A1B7 2D               dec l
 494+ A1B8 15               dec d
 495+ A1B9 20 FB            jr nz,1B
 496+ A1BB
 497+ A1BB C9               ret
 498+ A1BC
 499+ A1BC              ; --------------------------------------------------------------------------------------
 500+ A1BC              ;
 501+ A1BC              ;   12/10/24
 502+ A1BC              ;
 503+ A1BC
 504+ A1BC              Genera_datos_de_impresion_disparos_Entidades
 505+ A1BC
 506+ A1BC 3E 07            ld a,7
 507+ A1BE 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A1BF
 509+ A1BF              ; ---------------
 510+ A1BF
 511+ A1BF              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A1BF
 513+ A1BF 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A1C2
 515+ A1C2 CD E2 91     1 call Extrae_address
 516+ A1C5
 517+ A1C5 13               inc de
 518+ A1C6 13               inc de
 519+ A1C7
 520+ A1C7 ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A1CB
 522+ A1CB 2D               dec l
 523+ A1CC 7E               ld a,(hl)
 524+ A1CD A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A1CE 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A1D0
 527+ A1D0              ; ----- ----- ----- -----
 528+ A1D0
 529+ A1D0 2D               dec l
 530+ A1D1 CD E2 91         call Extrae_address
 531+ A1D4 E5               push hl
 532+ A1D5
 533+ A1D5 1D               dec e
 534+ A1D6
 535+ A1D6 EB               ex de,hl
 536+ A1D7
 537+ A1D7 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A1D8 2D               dec l
 539+ A1D9 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A1DA 2D               dec l
 541+ A1DB 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A1DC
 543+ A1DC E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A1DD
 545+ A1DD              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A1DD
 547+ A1DD FD 2A 60 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A1E1 FD 73 00         ld (iy+0),e
 549+ A1E4 FD 70 01         ld (iy+1),b
 550+ A1E7 FD 71 02         ld (iy+2),c
 551+ A1EA
 552+ A1EA FD 75 03         ld (iy+3),l
 553+ A1ED FD 74 04         ld (iy+4),h
 554+ A1F0
 555+ A1F0 CD EC 9A         call NextScan
 556+ A1F3
 557+ A1F3 FD 75 05         ld (iy+5),l
 558+ A1F6 FD 74 06         ld (iy+6),h
 559+ A1F9
 560+ A1F9 FD E5            push iy
 561+ A1FB E1               pop hl
 562+ A1FC
 563+ A1FC 3E 07            ld a,7
 564+ A1FE 85               add l
 565+ A1FF 6F               ld l,a
 566+ A200
 567+ A200 22 60 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A203
 569+ A203              ; ----- ----- ----- -----
 570+ A203
 571+ A203              Situa_en_siguiente_caja
 572+ A203
 573+ A203 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A204 3D               dec a
 575+ A205 C8               ret z
 576+ A206
 577+ A206 08               ex af,af
 578+ A207 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A20A 18 B6            jr 1B
 580+ A20C
 581+ A20C              ; --------------------------------------------------------------------------------------
 582+ A20C              ;
 583+ A20C              ;   12/10/24
 584+ A20C              ;
 585+ A20C
 586+ A20C              Genera_disparo_de_entidad_maldosa
 587+ A20C
 588+ A20C              ;   Estructura de un disparo de entidades.
 589+ A20C
 590+ A20C              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A20C              ; 	defw 0											; Puntero de impresión.
 592+ A20C              ;	defw 0											; Control.
 593+ A20C
 594+ A20C              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A20C              ;   _de la entidad en el momento de disparar.
 596+ A20C
 597+ A20C              ;   El byte de control muestra la siguiente información:
 598+ A20C
 599+ A20C              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A20C              ;
 601+ A20C              ;                        10xx ..... Izquierda.
 602+ A20C              ;                        01xx ..... Derecha.
 603+ A20C              ;                        00xx ..... Recto.
 604+ A20C
 605+ A20C              ;*  Exclusiones.
 606+ A20C
 607+ A20C              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A20C              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A20C
 610+ A20C 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A20F A7               and a
 612+ A210 C8               ret z
 613+ A211
 614+ A211 3A FF 8B         ld a,(Coordenada_y)
 615+ A214 A7               and a
 616+ A215 C8               ret z
 617+ A216
 618+ A216 3D               dec a
 619+ A217 C8               ret z
 620+ A218
 621+ A218 FE 10            cp 16
 622+ A21A D0               ret nc
 623+ A21B
 624+ A21B              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A21B              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A21B              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A21B
 628+ A21B 21 66 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A21E 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A21F
 631+ A21F              ;   Decrementa el numero de disparos de entidades.
 632+ A21F
 633+ A21F 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A222 35               dec (hl)
 635+ A223
 636+ A223 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A226
 638+ A226 CD E2 91     1 call Extrae_address
 639+ A229
 640+ A229 13               inc de
 641+ A22A 13               inc de
 642+ A22B
 643+ A22B ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A22F
 645+ A22F              ;   Comprobamos si la caja está vacía.
 646+ A22F
 647+ A22F 2D               dec l
 648+ A230 7E               ld a,(hl)
 649+ A231 A7               and a
 650+ A232 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A234 2C               inc l
 652+ A235
 653+ A235              ;   Caja vacía, vamos a generar un disparo.
 654+ A235              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A235
 656+ A235 CD 56 A2         call Genera_byte_inclinacion
 657+ A238
 658+ A238 7E               ld a,(hl)
 659+ A239 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A23A
 661+ A23A 2D               dec l
 662+ A23B
 663+ A23B CD 72 A2         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A23E
 665+ A23E 70               ld (hl),b
 666+ A23F 2D               dec l
 667+ A240 71               ld (hl),c
 668+ A241
 669+ A241 2D               dec l
 670+ A242
 671+ A242              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A242
 673+ A242 FD 7E 02         ld a,(iy+02)
 674+ A245 77               ld (hl),a
 675+ A246 2D               dec l
 676+ A247
 677+ A247 FD 7E 01         ld a,(iy+01)
 678+ A24A 77               ld (hl),a
 679+ A24B 2D               dec l
 680+ A24C
 681+ A24C FD 7E 00         ld a,(iy+00)
 682+ A24F 77               ld (hl),a
 683+ A250
 684+ A250 C9               ret
 685+ A251
 686+ A251              ;   --- --- ---
 687+ A251
 688+ A251              Situa_en_siguiente_disparo
 689+ A251
 690+ A251 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A254 18 D0            jr 1B
 692+ A256
 693+ A256              ; --------------------------------------------------------------------------------------
 694+ A256              ;
 695+ A256              ;   09/10/24
 696+ A256              ;
 697+ A256
 698+ A256              Genera_byte_inclinacion
 699+ A256
 700+ A256              ; Determina tendencia del disparo.
 701+ A256
 702+ A256 3A AF 89         ld a,(CX_Amadeus)
 703+ A259 47               ld b,a
 704+ A25A 3A FE 8B         ld a,(Coordenada_X)
 705+ A25D 90               sub b
 706+ A25E 38 07            jr c,Disparo_a_derecha
 707+ A260
 708+ A260 FE 06        Disparo_a_izquierda cp 6
 709+ A262
 710+ A262 D8               ret c
 711+ A263 C8               ret z
 712+ A264
 713+ A264 CB FE            set 7,(hl)
 714+ A266 C9               ret
 715+ A267
 716+ A267 47           Disparo_a_derecha ld b,a
 717+ A268 3E FF            ld a,$ff
 718+ A26A 90               sub b
 719+ A26B
 720+ A26B FE 05            cp 5
 721+ A26D
 722+ A26D D8               ret c
 723+ A26E C8               ret z
 724+ A26F
 725+ A26F CB F6            set 6,(hl)
 726+ A271 C9               ret
 727+ A272
 728+ A272              ; --------------------------------------------------------------------------------------
 729+ A272              ;
 730+ A272              ;   09/10/24
 731+ A272              ;
 732+ A272
 733+ A272              Modifica_puntero_de_impresion
 734+ A272
 735+ A272              ;   Puntero de impresión del disparo en BC.
 736+ A272
 737+ A272 E5               push hl
 738+ A273
 739+ A273 2A 79 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A276 CD EC 9A         call NextScan
 741+ A279
 742+ A279 4D               ld c,l
 743+ A27A 44               ld b,h
 744+ A27B
 745+ A27B E1               pop hl
 746+ A27C
 747+ A27C 08               ex af,af
 748+ A27D CB 77            bit 6,a
 749+ A27F 28 06            jr z,1F
 750+ A281
 751+ A281 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A285 0C               inc c
 753+ A286 C9               ret
 754+ A287
 755+ A287 CB 7F        1 bit 7,a
 756+ A289 28 F6            jr z,2B
 757+ A28B
 758+ A28B FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A28F 0D               dec c
 760+ A290
 761+ A290 C9               ret
 762+ A291
 763+ A291              ; --------------------------------------------------------------------------------------
 764+ A291              ;
 765+ A291              ;   28/11/24
 766+ A291              ;
 767+ A291
 768+ A291              Compara_con_coordenadas_de_disparo
 769+ A291
 770+ A291 DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A294 47               ld b,a
 772+ A295 3A 7E 8C         ld a,(Coordenadas_disparo_certero)
 773+ A298 90               sub b
 774+ A299
 775+ A299              ; A = "0" ok
 776+ A299              ; A = "1" ok
 777+ A299
 778+ A299 28 08            jr z,Comprueba_coordenada_X
 779+ A29B 3D               dec a
 780+ A29C 28 05            jr z,Comprueba_coordenada_X
 781+ A29E
 782+ A29E              ; A = "$ff" ok
 783+ A29E
 784+ A29E FE FE            cp $fe
 785+ A2A0 28 01            jr z,Comprueba_coordenada_X
 786+ A2A2
 787+ A2A2 C9               ret
 788+ A2A3
 789+ A2A3              Comprueba_coordenada_X
 790+ A2A3
 791+ A2A3 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A2A6 47               ld b,a
 793+ A2A7 21 7F 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A2AA 7E               ld a,(hl)
 795+ A2AB 90               sub b
 796+ A2AC
 797+ A2AC              ; A = "0" ok
 798+ A2AC              ; A = "1" ok
 799+ A2AC
 800+ A2AC 28 09            jr z,Activa_Impacto_en_entidad
 801+ A2AE 3D               dec a
 802+ A2AF 28 06            jr z,Activa_Impacto_en_entidad
 803+ A2B1
 804+ A2B1              ; A = "2" ok
 805+ A2B1
 806+ A2B1 3D               dec a
 807+ A2B2 28 03            jr z,Activa_Impacto_en_entidad
 808+ A2B4
 809+ A2B4              ; A = "$ff"
 810+ A2B4
 811+ A2B4 FE FD            cp $fd
 812+ A2B6 C0               ret nz
 813+ A2B7
 814+ A2B7              Activa_Impacto_en_entidad
 815+ A2B7
 816+ A2B7              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A2B7
 818+ A2B7 3E 02            ld a,2
 819+ A2B9 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A2BC
 821+ A2BC              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A2BC
 823+ A2BC 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A2BF
 825+ A2BF DD 73 07         ld (ix+7),e
 826+ A2C2 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A2C5
 828+ A2C5              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A2C5
 830+ A2C5 21 7B 8C         ld hl,Impacto2
 831+ A2C8 CB 9E            res 3,(hl)
 832+ A2CA
 833+ A2CA C9               ret
 834+ A2CB
 835+ A2CB              ; --------------------------------------------------------------------------------------
 836+ A2CB              ;
 837+ A2CB              ;   13/10/24
 838+ A2CB              ;
 839+ A2CB
 840+ A2CB              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A2CB
 842+ A2CB              Limpia_album_de_pintado_disparos_Amadeus
 843+ A2CB
 844+ A2CB 2A 58 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A2CE 06 06            ld b,6
 846+ A2D0 AF               xor a
 847+ A2D1 77           1 ld (hl),a
 848+ A2D2 2C               inc l
 849+ A2D3 10 FC            djnz 1B
 850+ A2D5
 851+ A2D5 C9               ret
 852+ A2D6
 853+ A2D6              ; --------------------------------------------------------------------------------------
 854+ A2D6              ;
 855+ A2D6              ;   29/09/24
 856+ A2D6              ;
 857+ A2D6
 858+ A2D6              Calcula_bytes_pintado_disparos
 859+ A2D6
 860+ A2D6 2A 5C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A2D9 45               ld b,l
 862+ A2DA 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A2DD 7D               ld a,l
 864+ A2DE
 865+ A2DE 90               sub b
 866+ A2DF 32 62 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A2E2
 868+ A2E2 C9               ret
 869+ A2E3
 870+ A2E3              ; --------------------------------------------------------------------------------------
 871+ A2E3              ;
 872+ A2E3              ;   26/10/24
 873+ A2E3              ;
 874+ A2E3              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A2E3              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A2E3              ;   _disparos que el álbum del FRAME actual).
 877+ A2E3
 878+ A2E3              Limpia_album_de_pintado_disparos_entidades
 879+ A2E3
 880+ A2E3 21 63 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A2E6 7E               ld a,(hl)
 882+ A2E7 2D               dec l
 883+ A2E8 46               ld b,(hl)
 884+ A2E9 90               sub b
 885+ A2EA
 886+ A2EA D8               ret c
 887+ A2EB C8               ret z
 888+ A2EC
 889+ A2EC F5               push af
 890+ A2ED 80               add b
 891+ A2EE 77               ld (hl),a
 892+ A2EF F1               pop af
 893+ A2F0
 894+ A2F0              ; Clean.
 895+ A2F0
 896+ A2F0 47           2 ld b,a
 897+ A2F1 AF               xor a
 898+ A2F2 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A2F5 77           1 ld (hl),a
 900+ A2F6 23               inc hl
 901+ A2F7 10 FC            djnz 1B
 902+ A2F9
 903+ A2F9 C9               ret
 904+ A2FA
 905+ A2FA              ; --------------------------------------------------------------------------------------
 906+ A2FA              ;
 907+ A2FA              ;   29/09/24
 908+ A2FA              ;
 909+ A2FA
 910+ A2FA              Motor_Disparos_Amadeus
 911+ A2FA
 912+ A2FA 21 1D 89         ld hl,Disparo_Amad+1
 913+ A2FD
 914+ A2FD 34               inc (hl)
 915+ A2FE 35               dec (hl)
 916+ A2FF
 917+ A2FF C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A300
 919+ A300              ;   Esta caja contiene un disparo.
 920+ A300
 921+ A300 CD 07 A3         call Consulta_Impacto
 922+ A303 CC 20 A3         call z,Mueve_disparo_Amadeus
 923+ A306
 924+ A306 C9               ret
 925+ A307
 926+ A307              ; ----------------------
 927+ A307              ;
 928+ A307              ;
 929+ A307              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A307              ;
 931+ A307              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A307
 933+ A307
 934+ A307              Consulta_Impacto
 935+ A307
 936+ A307              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A307              ;   _sea lo más coherente posible.
 938+ A307
 939+ A307 E5               push hl
 940+ A308 2B               dec hl
 941+ A309 CD FC A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A30C E1               pop hl
 943+ A30D 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A30E
 945+ A30E C8               ret z
 946+ A30F
 947+ A30F 3A 7B 8C         ld a,(Impacto2)
 948+ A312 CB DF            set 3,a
 949+ A314 32 7B 8C         ld (Impacto2),a
 950+ A317
 951+ A317 E5               push hl
 952+ A318 CD E9 A3         call Genera_coordenadas_de_disparo_Amadeus
 953+ A31B E1               pop hl
 954+ A31C CD 39 A3         call Elimina_disparo_Amadeus
 955+ A31F
 956+ A31F C9               ret
 957+ A320
 958+ A320              ; ----------------------
 959+ A320              ;
 960+ A320              ;
 961+ A320              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A320
 963+ A320              Mueve_disparo_Amadeus
 964+ A320
 965+ A320 CD E2 91         call Extrae_address
 966+ A323
 967+ A323 CD FB 9A         call PreviousScan
 968+ A326 CD FB 9A         call PreviousScan
 969+ A329 CD FB 9A         call PreviousScan
 970+ A32C CD FB 9A         call PreviousScan
 971+ A32F
 972+ A32F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A32F
 974+ A32F 7C               ld a,h
 975+ A330 D6 40            sub $40
 976+ A332 EB               ex de,hl
 977+ A333 38 04            jr c,Elimina_disparo_Amadeus
 978+ A335
 979+ A335               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A335
 981+ A335 73               ld (hl),e
 982+ A336 23               inc hl
 983+ A337 72               ld (hl),d
 984+ A338
 985+ A338 C9               ret
 986+ A339
 987+ A339              ; ----------------------
 988+ A339              ;
 989+ A339              ;   29/9/24
 990+ A339
 991+ A339              Elimina_disparo_Amadeus
 992+ A339
 993+ A339              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A339              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A339
 996+ A339              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A339              ;   	defw 0											; Puntero de impresión.
 998+ A339
 999+ A339 2B               dec hl
1000+ A33A 2B               dec hl
1001+ A33B
1002+ A33B AF               xor a
1003+ A33C 77               ld (hl),a
1004+ A33D 23               inc hl
1005+ A33E 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A33F
1007+ A33F 23               inc hl
1008+ A340 77               ld (hl),a
1009+ A341 23               inc hl
1010+ A342 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A343
1012+ A343 3E 01            ld a,1
1013+ A345 32 65 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A348
1015+ A348 CD CB A2         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A34B
1017+ A34B AF               xor a
1018+ A34C 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A34D
1020+ A34D C9               ret
1021+ A34E
1022+ A34E              ; --------------------------------------------------------------------------------------
1023+ A34E              ;
1024+ A34E              ;   13/10/24
1025+ A34E              ;
1026+ A34E
1027+ A34E              Pinta_disparos_Amadeus
1028+ A34E
1029+ A34E 06 02            ld b,2
1030+ A350 ED 73 4C 8C      ld (Stack),sp
1031+ A354 ED 7B 5A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A358 D1           3 pop de
1033+ A359 14               inc d
1034+ A35A 15               dec d
1035+ A35B 28 1C            jr z,1F
1036+ A35D E1               pop hl
1037+ A35E
1038+ A35E              Imprime_scanlines_en_pantalla
1039+ A35E
1040+ A35E              ; 1er scanline
1041+ A35E
1042+ A35E 1A               ld a,(de)
1043+ A35F AE               xor (hl)
1044+ A360 77               ld (hl),a
1045+ A361
1046+ A361 1C               inc e
1047+ A362 2C               inc l
1048+ A363
1049+ A363 1A               ld a,(de)
1050+ A364 AE               xor (hl)
1051+ A365 77               ld (hl),a
1052+ A366
1053+ A366 1D               dec e
1054+ A367 E1               pop hl
1055+ A368
1056+ A368              ; 2º scanline
1057+ A368
1058+ A368 1A               ld a,(de)
1059+ A369 AE               xor (hl)
1060+ A36A 77               ld (hl),a
1061+ A36B
1062+ A36B 1C               inc e
1063+ A36C 2C               inc l
1064+ A36D
1065+ A36D 1A               ld a,(de)
1066+ A36E AE               xor (hl)
1067+ A36F 77               ld (hl),a
1068+ A370
1069+ A370 1D               dec e
1070+ A371
1071+ A371 18 06            jr 1F
1072+ A373
1073+ A373 ED 7B 58 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A377 18 DF            jr 3B
1075+ A379 10 F8        1 djnz 2B
1076+ A37B ED 7B 4C 8C      ld sp,(Stack)
1077+ A37F C9               ret
1078+ A380
1079+ A380              ; --------------------------------------------------------------------------------------
1080+ A380              ;
1081+ A380              ;   13/10/24
1082+ A380              ;
1083+ A380              ;   Modifica: HL,BC y DE.
1084+ A380
1085+ A380
1086+ A380              Genera_datos_de_impresion_disparos_Amadeus
1087+ A380
1088+ A380 ED 73 4C 8C      ld (Stack),sp
1089+ A384 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A387 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A388
1092+ A388 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A389 15               dec d
1094+ A38A
1095+ A38A 28 0E            jr z,Salida
1096+ A38C
1097+ A38C              Genera_scanlines_de_disparo_Amadeus
1098+ A38C
1099+ A38C E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A38D              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A38D ED 7B 58 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A391
1103+ A391 C1               pop bc
1104+ A392 C1               pop bc
1105+ A393 C1               pop bc
1106+ A394
1107+ A394 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A395 CD FB 9A         call PreviousScan
1109+ A398 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A399 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A39A
1112+ A39A              Salida
1113+ A39A
1114+ A39A ED 7B 4C 8C      ld sp,(Stack)
1115+ A39E
1116+ A39E C9               ret
1117+ A39F
1118+ A39F              ; --------------------------------------------------------------------------------------
1119+ A39F              ;
1120+ A39F              ;   12/09/24
1121+ A39F              ;
1122+ A39F
1123+ A39F              Genera_disparo_Amadeus
1124+ A39F
1125+ A39F              ;*  Exclusiones.
1126+ A39F
1127+ A39F 3A 65 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A3A2 A7               and a
1129+ A3A3 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A3A4
1131+ A3A4 3D               dec a
1132+ A3A5 32 65 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A3A8
1134+ A3A8              Define_puntero_objeto_disparo
1135+ A3A8
1136+ A3A8              ;   Inicializamos contador.
1137+ A3A8
1138+ A3A8 06 00            ld b,0
1139+ A3AA
1140+ A3AA 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A3AD 2C               inc l
1142+ A3AE
1143+ A3AE 3E 80            ld a,$80
1144+ A3B0 BE               cp (hl)
1145+ A3B1 28 0D            jr z,1F
1146+ A3B3
1147+ A3B3 04               inc b
1148+ A3B4
1149+ A3B4 3E 60            ld a,$60
1150+ A3B6 BE               cp (hl)
1151+ A3B7 28 07            jr z,1F
1152+ A3B9
1153+ A3B9
1154+ A3B9 04               inc b
1155+ A3BA
1156+ A3BA 3E 18            ld a,$18
1157+ A3BC BE               cp (hl)
1158+ A3BD 28 01            jr z,1F
1159+ A3BF
1160+ A3BF 04               inc b
1161+ A3C0
1162+ A3C0              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A3C0
1164+ A3C0              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A3C0
1166+ A3C0 CD FB 9A     1 call PreviousScan
1167+ A3C3
1168+ A3C3 78               ld a,b
1169+ A3C4 CB 3F            srl a
1170+ A3C6 28 03            jr z,4F
1171+ A3C8
1172+ A3C8              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A3C8 E5               push hl
1174+ A3C9 18 02            jr 5F
1175+ A3CB 2D           4 dec l
1176+ A3CC E5               push hl
1177+ A3CD              ; ---
1178+ A3CD
1179+ A3CD              ;   Calcula el Puntero_objeto del disparo.
1180+ A3CD
1181+ A3CD 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A3D0 04               inc b
1183+ A3D1 05               dec b
1184+ A3D2 28 04            jr z,2F
1185+ A3D4
1186+ A3D4              ;   Nos desplazamos por el índice de disparos.
1187+ A3D4
1188+ A3D4 2C           3 inc l
1189+ A3D5 2C               inc l
1190+ A3D6 10 FC            djnz 3B
1191+ A3D8
1192+ A3D8              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A3D8 CD E2 91     2 call Extrae_address
1194+ A3DB E5               push hl
1195+ A3DC              ; ---
1196+ A3DC
1197+ A3DC              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A3DC              ; HL en el 1er .db de la caja.
1199+ A3DC
1200+ A3DC 21 1C 89         ld hl,Disparo_Amad
1201+ A3DF
1202+ A3DF 06 02            ld b,2
1203+ A3E1
1204+ A3E1 D1           6 pop de
1205+ A3E2 73               ld (hl),e
1206+ A3E3 23               inc hl
1207+ A3E4 72               ld (hl),d
1208+ A3E5 23               inc hl
1209+ A3E6
1210+ A3E6 10 F9            djnz 6B
1211+ A3E8
1212+ A3E8 C9               ret
1213+ A3E9
1214+ A3E9              Genera_coordenadas_de_disparo_Amadeus
1215+ A3E9
1216+ A3E9              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A3E9              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A3E9              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A3E9
1220+ A3E9 CD E2 91         call Extrae_address
1221+ A3EC CD F7 95         call Genera_coordenadas
1222+ A3EF
1223+ A3EF 3D               dec a
1224+ A3F0
1225+ A3F0 21 7E 8C         ld hl,Coordenadas_disparo_certero
1226+ A3F3 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A3F4 23               inc hl
1228+ A3F5 3A FE 8B         ld a,(Coordenada_X)
1229+ A3F8 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A3F9
1231+ A3F9 AF               xor a
1232+ A3FA 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A3FB
1234+ A3FB C9               ret
1235+ A3FC
1236+ A3FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A3FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A3FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A3FC
1240+ A3FC              ; ----------------------------------------------
1241+ A3FC              ;
1242+ A3FC              ;   27/08/24
1243+ A3FC              ;
1244+ A3FC              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A3FC              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A3FC
1247+ A3FC              Detecta_impacto_en_disparo_de_Amadeus
1248+ A3FC
1249+ A3FC              Extraccion_de_datos
1250+ A3FC
1251+ A3FC 13               inc de
1252+ A3FD 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A3FE
1254+ A3FE 5E               ld e,(hl)
1255+ A3FF 23               inc hl
1256+ A400 56               ld d,(hl)
1257+ A401
1258+ A401 23               inc hl
1259+ A402
1260+ A402 4E               ld c,(hl)
1261+ A403 23               inc hl
1262+ A404 46               ld b,(hl)
1263+ A405
1264+ A405 C5               push bc
1265+ A406 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A407
1267+ A407              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A407
1269+ A407 CD FB 9A         call PreviousScan
1270+ A40A CD FB 9A         call PreviousScan
1271+ A40D
1272+ A40D              Detecta_impacto_
1273+ A40D
1274+ A40D 1A               ld a,(de)
1275+ A40E A6               and (hl)
1276+ A40F C0               ret nz
1277+ A410
1278+ A410 13               inc de
1279+ A411 23               inc hl
1280+ A412
1281+ A412 1A               ld a,(de)
1282+ A413 A6               and (hl)
1283+ A414 C9               ret
1284+ A415
1285+ A415              ; -------------------------------------------------------------------------------------------------------------
1286+ A415              ;
1287+ A415              ;   25/11//24
1288+ A415              ;
1289+ A415              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A415              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A415              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A415              ;
1293+ A415              ;   MODIFICA: HL,DE,BC y A.
1294+ A415              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A415              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A415
1297+ A415              Colision_Entidad_Amadeus
1298+ A415
1299+ A415              ; Posible contacto de entidad con Amadeus. ?????
1300+ A415
1301+ A415              ; Exclusiones:
1302+ A415
1303+ A415 3A 9D 8C         ld a,(Shield)
1304+ A418 A7               and a
1305+ A419 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A41A
1307+ A41A 21 74 8C         ld hl,Ctrl_3
1308+ A41D CB 76            bit 6,(hl)
1309+ A41F C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A420
1311+ A420 21 7B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A423 CB 56            bit 2,(hl)
1313+ A425 C0               ret nz
1314+ A426
1315+ A426 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A429 FE 14        	cp $14
1317+ A42B D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A42C
1319+ A42C 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A42F A7               and a
1321+ A430 C0               ret nz
1322+ A431
1323+ A431              Genera_coordenadas_X
1324+ A431
1325+ A431              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A431              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A431
1328+ A431              ;   Limpiamos almacenes.
1329+ A431
1330+ A431              ;    call Limpia_Coordenadas_X
1331+ A431
1332+ A431              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A431
1334+ A431 21 80 8C         ld hl,Coordenadas_X_Entidad
1335+ A434 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A437 CD 5D A4         call Guarda_coordenadas_X
1337+ A43A
1338+ A43A              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A43A
1340+ A43A 3A AF 89         ld a,(CX_Amadeus)
1341+ A43D CD 5D A4         call Guarda_coordenadas_X
1342+ A440
1343+ A440 DD E5            push ix
1344+ A442 CD 71 A4         call Compara_coordenadas_X
1345+ A445 DD E1            pop ix
1346+ A447
1347+ A447 C0               ret nz
1348+ A448
1349+ A448 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A44A DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A44D
1352+ A44D DD 7D            ld a,ixl
1353+ A44F C6 04            add 4
1354+ A451 DD 6F            ld ixl,a
1355+ A453
1356+ A453 DD 22 7C 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A457
1358+ A457 21 7B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A45A CB D6            set 2,(hl)
1360+ A45C
1361+ A45C C9               ret
1362+ A45D
1363+ A45D               ; ----- ----- ----- ----- -----
1364+ A45D
1365+ A45D 77           Guarda_coordenadas_X ld (hl),a
1366+ A45E 3C               inc a
1367+ A45F 2C               inc l
1368+ A460 77               ld (hl),a
1369+ A461 3C               inc a
1370+ A462 2C               inc l
1371+ A463 77               ld (hl),a
1372+ A464 2C               inc l
1373+ A465 C9               ret
1374+ A466
1375+ A466 AF           Limpia_Coordenadas_X xor a
1376+ A467 06 06            ld b,6
1377+ A469 21 83 8C         ld hl,Coordenadas_X_Amadeus
1378+ A46C 77           1 ld (hl),a
1379+ A46D 23               inc hl
1380+ A46E 10 FC            djnz 1B
1381+ A470 C9               ret
1382+ A471
1383+ A471              ; ----- ----- ----- ----- -----
1384+ A471
1385+ A471              Compara_coordenadas_X
1386+ A471
1387+ A471 DD 21 80 8C      ld ix,Coordenadas_X_Entidad
1388+ A475 DD 7E 00         ld a,(ix+0)
1389+ A478 CD 86 A4         call Comparando
1390+ A47B C8               ret z
1391+ A47C
1392+ A47C 3C               inc a
1393+ A47D CD 95 A4         call Comparando_1
1394+ A480 C8               ret z
1395+ A481
1396+ A481 3C               inc a
1397+ A482 CD 95 A4         call Comparando_1
1398+ A485 C9               ret
1399+ A486
1400+ A486              ; ----- ----- ----- ----- -----
1401+ A486              ;
1402+ A486              ;   4/12/23
1403+ A486              ;
1404+ A486              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A486
1406+ A486              Comparando
1407+ A486
1408+ A486 DD 2C            inc ixl
1409+ A488 DD 2C            inc ixl
1410+ A48A DD 2C            inc ixl
1411+ A48C
1412+ A48C DD 46 00         ld b,(ix+0)
1413+ A48F DD 4E 01         ld c,(ix+1)
1414+ A492 DD 56 02         ld d,(ix+2)
1415+ A495
1416+ A495 B8           Comparando_1 cp b
1417+ A496 C8               ret z
1418+ A497 B9               cp c
1419+ A498 C8               ret z
1420+ A499 BA               cp d
1421+ A49A C9               ret
1422+ A49B
1423+ A49B              ; -----------------------------------------------------------------------
1424+ A49B              ;
1425+ A49B              ;   04/7/24
1426+ A49B              ;
1427+ A49B
1428+ A49B              Detecta_colision_nave_entidad
1429+ A49B
1430+ A49B              ; Exclusiones:
1431+ A49B
1432+ A49B              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A49B
1434+ A49B 21 7B 8C     	ld hl,Impacto2
1435+ A49E CB 56        	bit 2,(hl)
1436+ A4A0 C8           	ret z
1437+ A4A1
1438+ A4A1              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A4A1
1440+ A4A1 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A4A4 CD E2 91         call Extrae_address
1442+ A4A7 54               ld d,h
1443+ A4A8 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A4A9
1445+ A4A9 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A4AC 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A4AE FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A4B1
1449+ A4B1 C5           1 push bc
1450+ A4B2 06 03            ld b,3
1451+ A4B4 E5               push hl
1452+ A4B5
1453+ A4B5              ; .db
1454+ A4B5
1455+ A4B5 1A           3 ld a,(de)
1456+ A4B6 A7               and a
1457+ A4B7 20 03            jr nz,4F
1458+ A4B9
1459+ A4B9 2C               inc l
1460+ A4BA 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A4BC
1462+ A4BC ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A4BE 28 04            jr z,2F
1464+ A4C0
1465+ A4C0              ; Impacto.
1466+ A4C0 FD 2D            dec iyl
1467+ A4C2 28 22            jr z,5F
1468+ A4C4
1469+ A4C4 1C           2 inc e
1470+ A4C5 10 EE            djnz 3B
1471+ A4C7
1472+ A4C7 E1               pop hl
1473+ A4C8
1474+ A4C8              ; Hay salto de línea en el puntero de impresión ???
1475+ A4C8
1476+ A4C8 7C               ld a,h
1477+ A4C9 D6 57            sub $57
1478+ A4CB 20 0A            jr nz,6F
1479+ A4CD
1480+ A4CD              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A4CD
1482+ A4CD 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A4D0 3E 20            ld a,$20
1484+ A4D2 A7               and a
1485+ A4D3 85               add l
1486+ A4D4 6F               ld l,a
1487+ A4D5 18 01            jr 7F
1488+ A4D7
1489+ A4D7 24           6 inc h
1490+ A4D8
1491+ A4D8 C1           7 pop bc
1492+ A4D9 10 D6            djnz 1B
1493+ A4DB
1494+ A4DB              ;   Fin de la comparativa.
1495+ A4DB
1496+ A4DB              ;   NO HAY COLISIÓN !!!!!.
1497+ A4DB              ;
1498+ A4DB              ;   .db (Impacto) de Amadeus a "0".
1499+ A4DB              ;   RES el bit2 de (Impacto2).
1500+ A4DB              ;
1501+ A4DB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A4DB              ;   Lo colocamos a "0".
1503+ A4DB
1504+ A4DB 21 7B 8C         ld hl,Impacto2
1505+ A4DE CB 96            res 2,(hl)
1506+ A4E0 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A4E3 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A4E5 C9               ret
1509+ A4E6
1510+ A4E6              ;   COLISIÓN !!!!!.
1511+ A4E6              ;
1512+ A4E6              ;   .db (Impacto) de Amadeus a "1".
1513+ A4E6              ;   SET el bit3 de (Impacto2).
1514+ A4E6              ;
1515+ A4E6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A4E6
1517+ A4E6 E1           5 pop hl
1518+ A4E7 C1               pop bc
1519+ A4E8
1520+ A4E8 21 B2 89         ld hl,Impacto_Amadeus
1521+ A4EB 36 01            ld (hl),1
1522+ A4ED 21 7B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A4F0 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A4F2
1525+ A4F2 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A4F5 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A4F8
1528+ A4F8 23               inc hl
1529+ A4F9 23               inc hl
1530+ A4FA 23               inc hl
1531+ A4FB
1532+ A4FB 73               ld (hl),e
1533+ A4FC 23               inc hl
1534+ A4FD 72               ld (hl),d
1535+ A4FE
1536+ A4FE              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A4FE
1538+ A4FE 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A501 21 B5 89         ld hl,Pamm_Amadeus
1540+ A504
1541+ A504 73               ld (hl),e
1542+ A505 23               inc hl
1543+ A506 72               ld (hl),d
1544+ A507
1545+ A507 C9               ret
1546+ A508
1547+ A508
1548+ A508
# file closed: Disparo.asm
2399  A508
2400  A508              	SAVESNA "Pruebas.sna", START
2401  A508
2402  A508
2403  A508
2404  A508
# file closed: Banco_de_pruebas.asm
