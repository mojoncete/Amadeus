# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 74 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 31 A3     	call Pinta_disparos_Amadeus
  74  82F6 CD FC 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 9D 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 2D 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 9B 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 9B 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 4B 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 04 40        Pos_inicio_entidad1	defw $4004	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  96+ 8A63
  97+ 8A63              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  98+ 8A63
  99+ 8A63              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 100+ 8A63              ;                               Izquierda_y_subiendo+8 (11)
 101+ 8A63              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 102+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 103+ 8A63              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 104+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 105+ 8A63              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 106+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 107+ 8A63              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 108+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 109+ 8A63              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 110+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 111+ 8A63              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 112+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 113+ 8A63              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 114+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 115+ 8A63
 116+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 117+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 118+ 8A6B
 119+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 120+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 120+ 8A73 08 00
 121+ 8A75
 122+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 123+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 123+ 8A7D 0F FE
 124+ 8A7F
 125+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 126+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 127+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 128+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 129+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 130+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 131+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 132+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 133+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 134+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 135+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 136+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 137+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 138+ 8AB3
 139+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 140+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 140+ 8ABB 06 00
 141+ 8ABD
 142+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 143+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 143+ 8AC5 02 00
 144+ 8AC7
 145+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 146+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 146+ 8ACF 04 00
 147+ 8AD1
 148+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 149+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 149+ 8AD9 08 00
 150+ 8ADB
 151+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 152+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 152+ 8AE3 02 00
 153+ 8AE5
 154+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 155+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 155+ 8AED 06 00
 156+ 8AEF
 157+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 158+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 158+ 8AF7 06 00
 159+ 8AF9
 160+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 161+ 8AF9
 162+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 163+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 164+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 165+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 166+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 167+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 168+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 169+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 170+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 171+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 172+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 173+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 174+ 8B29
 175+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 176+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 177+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 178+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 179+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 180+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 181+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 182+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 183+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 184+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 185+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 186+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 187+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 188+ 8B5D
 189+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 190+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 190+ 8B65 06 00
 191+ 8B67
 192+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 193+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 193+ 8B6F 02 00
 194+ 8B71
 195+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 196+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 196+ 8B79 04 00
 197+ 8B7B
 198+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 199+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 199+ 8B83 08 00
 200+ 8B85
 201+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 202+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 202+ 8B8D 02 00
 203+ 8B8F
 204+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 205+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 205+ 8B97 06 00
 206+ 8B99
 207+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 208+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 208+ 8BA1 06 00
 209+ 8BA3
 210+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 211+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 212+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 213+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 214+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 215+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 216+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 217+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 218+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 219+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 220+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 221+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 222+ 8BD3
 223+ 8BD3
 224+ 8BD3
 225+ 8BD3
 226+ 8BD3
 227+ 8BD3
 228+ 8BD3
 229+ 8BD3
 230+ 8BD3
 231+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 F0 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 14           Nivel_1 db 20									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 01 01 01 01  	db 1,1,1,1,1
  19+ 8BEF 01
  20+ 8BF0
  21+ 8BF0 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 8BF1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  22+ 8BF5 01 02
  23+ 8BF7 02 01 01 01  	db 2,1,1,1,1,2
  23+ 8BFB 01 02
  24+ 8BFD
# file closed: Niveles.asm
 150  8BFD
 151  8BFD              ; --------------------------------------------------------------------------------
 152  8BFD              ;
 153  8BFD              ; 12/05/24
 154  8BFD              ;
 155  8BFD              ; Parámetros DRAW.
 156  8BFD              ;
 157  8BFD
 158  8BFD              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BFD
 160  8BFD 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BFE              ;															- Patrón de movimiento.
 162  8BFE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8C00
 165  8C00 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8C01              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8C01
 168  8C01              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8C01              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8C01              ; Ejemplos.
 171  8C01
 172  8C01              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8C01              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8C01              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8C01              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8C01              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8C01
 178  8C01 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8C02              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8C02              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8C02
 182  8C02 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8C04              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8C04
 185  8C04 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C06
 187  8C06              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C06
 189  8C06 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C08              ;														; _palabras que componen el "movimiento_masticado".
 191  8C08
 192  8C08              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C08
 194  8C08 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C09              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C09              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C09              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C09              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C09
 200  8C09 00           Ctrl_2 db 0
 201  8C0A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C0A              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C0A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C0A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C0A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C0A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C0A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C0A              ;
 209  8C0A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C0A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C0A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C0A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C0A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C0A              ;														BIT 4, ???
 215  8C0A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C0A
 217  8C0A 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C0B              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C0B              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C0B              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C0B              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C0B              ;
 223  8C0B              ; 														DESCRIPCIÖN:
 224  8C0B              ;
 225  8C0B              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C0B              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C0B              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C0B              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C0B              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C0B              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C0B              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C0B              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C0B              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C0B              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C0B              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C0B              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C0B              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C0B              ;
 239  8C0B              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C0B              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C0B              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C0B
 243  8C0B              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C0B
 245  8C0B 00           Filas db 0												; Filas. [DRAW]
 246  8C0C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C0D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C11
 250  8C11              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C11
 252  8C11 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C12              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C12              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C12
 256  8C12              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C12
 258  8C12              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C12              ;
 260  8C12              ;	COLORES: 0 ..... NEGRO
 261  8C12              ;    		 1 ..... AZUL
 262  8C12              ; 			 2 ..... ROJO
 263  8C12              ;			 3 ..... MAGENTA
 264  8C12              ; 			 4 ..... VERDE
 265  8C12              ; 			 5 ..... CIAN
 266  8C12              ;			 6 ..... AMARILLO
 267  8C12              ; 			 7 ..... BLANCO
 268  8C12
 269  8C12 00 00        Indice_Sprite_der defw 0
 270  8C14 00 00        Indice_Sprite_izq defw 0
 271  8C16 00 00        Puntero_DESPLZ_der defw 0
 272  8C18 00 00        Puntero_DESPLZ_izq defw 0
 273  8C1A
 274  8C1A 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C1C 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C1D 00           Columnas db 0
 277  8C1E 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C20              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C20 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C21
 281  8C21              ; variables de control general.
 282  8C21
 283  8C21 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C22
 285  8C22              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C22
 287  8C22              Perfiles_de_velocidad
 288  8C22
 289  8C22 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C23 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C24 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C25 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C26
 294  8C26              ; Contadores de 16 bits.
 295  8C26
 296  8C26 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C28 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C2A 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C2C 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C2E
 301  8C2E              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C2E
 303  8C2E 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C30 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C32 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C34              ;
 307  8C34              ;
 308  8C34 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C35              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C35              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C35 00           Incrementa_puntero_backup db 0
 312  8C36 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C37              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C37 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C38 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C39 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C3A              ;
 318  8C3A              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C3A              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C3A              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C3A              ;
 322  8C3A              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C3A              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C3A              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C3A              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C3A              ;
 327  8C3A              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C3A              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C3A              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C3A
 331  8C3A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C3B
 333  8C3B              ;														DESCRIPCIÓN:
 334  8C3B              ;
 335  8C3B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C3B              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C3B              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C3B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C3B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C3B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C3B
 342  8C3B              ;														BIT 3, Recarga de nueva oleada.
 343  8C3B              ;														BIT 4, Recarga de nueva oleada.
 344  8C3B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C3B              ;														BIT 6, **** Frame completo.
 346  8C3B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C3B
 348  8C3B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C3D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C3D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C3D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C3D
 353  8C3D              ; Gestión de ENTIDADES y CAJAS.
 354  8C3D
 355  8C3D 00 00        Puntero_store_caja defw 0
 356  8C3F 00 00        Puntero_restore_caja defw 0
 357  8C41 00 00        Indice_restore_caja defw 0
 358  8C43 00 00        Puntero_indice_master defw 0
 359  8C45
 360  8C45 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C46 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C47 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C48
 364  8C48 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C4A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C4C              ;														; _ puntero (Indice_entidades).
 367  8C4C
 368  8C4C              ;---------------------------------------------------------------------------------------------------------------
 369  8C4C              ;
 370  8C4C              ;	13/10/24
 371  8C4C              ;
 372  8C4C              ;	Álbumes.
 373  8C4C
 374  8C4C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C4E              ;														; _variable para almacenar lo posición del puntero_
 376  8C4E              ; 														; _de pila, SP.
 377  8C4E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C50              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C50
 380  8C50              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C50
 382  8C50 00 00        Album_de_pintado defw 0
 383  8C52 00 00        Album_de_borrado defw 0
 384  8C54 00 00        Album_de_pintado_Amadeus defw 0
 385  8C56 00 00        Album_de_borrado_Amadeus defw 0
 386  8C58
 387  8C58 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C5A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C5C
 390  8C5C 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C5E 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C60
 393  8C60
 394  8C60 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C62
 396  8C62 00           Num_de_bytes_album_de_disparos db 0
 397  8C63 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C64
 399  8C64 07           Numero_de_disparos_de_entidades db 7
 400  8C65
 401  8C65 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C66 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C67
 404  8C67 00 00        Techo_Scanlines_album defw 0
 405  8C69 00 00        Techo_Scanlines_album_2 defw 0
 406  8C6B 00           Switch db 0
 407  8C6C 00 00        Techo defw 0
 408  8C6E 00 00        Scanlines_album_SP defw 0
 409  8C70 00 89        India_SP defw Tabla_de_pintado
 410  8C72 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C74
 412  8C74 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C75              ;
 414  8C75              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C75              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C75              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C75              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C75              ;																Habilita el borrado/pintado de sprites.
 419  8C75              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C75              ;																_ a la baja.
 421  8C75              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C75              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C75              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C75              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C75              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C75              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C75
 428  8C75 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C76              ;
 430  8C76              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C76
 432  8C76 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C77              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C77              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C77
 436  8C77              ; Gestión de Disparos.
 437  8C77
 438  8C77 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C79 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C7B 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C7C
 442  8C7C              ;
 443  8C7C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C7C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C7C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C7C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C7C
 448  8C7C
 449  8C7C
 450  8C7C
 451  8C7C
 452  8C7C
 453  8C7C
 454  8C7C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C7E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C7E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C7E
 458  8C7E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C80              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C80 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C83              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C83 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C86              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C86
 465  8C86              ;---------------------------------------------------------------------------------------------------------------
 466  8C86
 467  8C86              ; Relojes y temporizaciones.
 468  8C86
 469  8C86 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C87 05           Clock_explosion_Amadeus db 5
 471  8C88 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C89
 473  8C89 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C8B F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C8D 00           Numero_rnd_disparos db 0
 476  8C8E
 477  8C8E 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C90 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C91 A0           CLOCK_disparos_de_entidades db $a0
 480  8C92
 481  8C92              ;---------------------------------------------------------------------------------------------------------------
 482  8C92
 483  8C92              ; Gestión de NIVELES.
 484  8C92
 485  8C92 00           Nivel db 0												; Nivel actual del juego.
 486  8C93 00 00        Puntero_indice_NIVELES defw 0
 487  8C95 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C97              ; 														; _ que definen el NIVEL.
 489  8C97
 490  8C97              ; ---------------------------------------------------------------------------------------------------------------
 491  8C97
 492  8C97              ; Temporizaciones Shield.
 493  8C97
 494  8C97 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C9B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C9D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C9E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C9F 00           Shield_3 db 0
 499  8CA0
 500  8CA0 07           Lives db 7
 501  8CA1
 502  8CA1              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8CA1              ;
 504  8CA1              ;	13/11/24
 505  8CA1
 506  8CA1              START
 507  8CA1
 508  8CA1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8CA4 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8CA6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8CA8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8CAA F3           	DI
 513  8CAB
 514  8CAB              ; Limpiamos pantalla.
 515  8CAB
 516  8CAB 3E 07        	ld a,%00000111
 517  8CAD CD C6 95     	call Cls
 518  8CB0 CD 22 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8CB3
 520  8CB3              INICIALIZACION
 521  8CB3
 522  8CB3 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8CB5 CD BD 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CB8 CD 3C 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CBB 6F           	ld l,a
 526  8CBC 26 00        	ld h,0
 527  8CBE 22 8E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CC1
 529  8CC1              ;	Inicia los álbumes de líneas.
 530  8CC1
 531  8CC1 CD 74 91     	call Inicia_albumes_de_lineas
 532  8CC4 CD 84 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CC7 CD 91 91     	call Inicia_albumes_de_disparos
 534  8CCA
 535  8CCA              ;	Inicia 1er Nivel.
 536  8CCA
 537  8CCA CD 1F 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CCD CD ED 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CD0              ;														   _reponiendo entidades eliminadas.
 540  8CD0 CD 53 94     	call Prepara_Cajas_de_Entidades
 541  8CD3 CD A4 94     	call Inicia_Amadeus
 542  8CD6              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 543  8CD6              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 544  8CD6              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 545  8CD6 11 AE 89     	ld de,Amadeus_BOX
 546  8CD9 CD 95 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 547  8CDC CD E9 94     	call Limpiamos_bandeja_DRAW
 548  8CDF
 549  8CDF              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 550  8CDF
 551  8CDF 06 3C        	ld b,60
 552  8CE1 CD 4E 9E     2 call Amadeus_a_izquierda
 553  8CE4 10 FB        	djnz 2B
 554  8CE6
 555  8CE6 CD 52 91     	call Genera_datos_de_impresion_Amadeus
 556  8CE9
 557  8CE9              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 558  8CE9
 559  8CE9 CD AD 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 560  8CEC
 561  8CEC CD 2D 92     	call Inicia_Shield
 562  8CEF
 563  8CEF 2A 6E 8C     6 ld hl,(Scanlines_album_SP)
 564  8CF2 22 67 8C     	ld (Techo_Scanlines_album),hl
 565  8CF5
 566  8CF5 2A 52 8C     	ld hl,(Album_de_borrado)
 567  8CF8 22 6E 8C     	ld (Scanlines_album_SP),hl
 568  8CFB
 569  8CFB 21 00 89     	ld hl,Tabla_de_pintado
 570  8CFE 22 70 8C     	ld (India_SP),hl
 571  8D01
 572  8D01 21 74 8C     	ld hl,Ctrl_3
 573  8D04 CB C6        	set 0,(hl) 											; Indica Frame completo.
 574  8D06 CB D6        	set 2,(hl)
 575  8D08 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 576  8D0A
 577  8D0A FB           	ei 													; Ha de apuntar a $5c3a.
 578  8D0B
 579  8D0B 76           	halt
 580  8D0C
 581  8D0C              ; ------------------------------------
 582  8D0C
 583  8D0C              Main
 584  8D0C              ;
 585  8D0C              ; 07/11/24.
 586  8D0C
 587  8D0C F3           	di
 588  8D0D 18 FE        	jr $
 589  8D0F FB           	ei
 590  8D10
 591  8D10              ; Gestión de disparos.
 592  8D10
 593  8D10 CD 11 8F     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 594  8D13 CD 42 A0     	call Motor_de_disparos_entidades
 595  8D16 CD DD A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 596  8D19
 597  8D19              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 598  8D19              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 599  8D19              ; Este hecho lo indica el bit2 de (Impacto2).
 600  8D19
 601  8D19 CD 7E A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 602  8D1C
 603  8D1C              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 604  8D1C
 605  8D1C 21 91 8C     	ld hl,CLOCK_disparos_de_entidades
 606  8D1F 35           	dec (hl)
 607  8D20 CC 52 8E     	call z,Autoriza_disparo_de_entidades
 608  8D23
 609  8D23 2A 8E 8C     	ld hl,(Clock_next_entity)
 610  8D26 ED 4B 78 5C  	ld bc,(FRAMES)
 611  8D2A A7           	and a
 612  8D2B ED 42        	sbc hl,bc
 613  8D2D 20 21        	jr nz,1F
 614  8D2F
 615  8D2F              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 616  8D2F
 617  8D2F CD 3C 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 618  8D32 CD 53 8F     	call Define_Clock_next_entity
 619  8D35
 620  8D35              ; GESTIÓN DE ENTIDADES.
 621  8D35
 622  8D35              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 623  8D35              ; _ (Clock_next_entity) para la siguiente entidad.
 624  8D35
 625  8D35              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 626  8D35              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 627  8D35              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 628  8D35
 629  8D35 21 46 8C     	ld hl,Numero_parcial_de_entidades
 630  8D38 46           	ld b,(hl)
 631  8D39
 632  8D39 04           	inc b
 633  8D3A 05           	dec b
 634  8D3B
 635  8D3B F3           	di
 636  8D3C 28 FE        	jr z,$													;! Nivel superado !!!!!
 637  8D3E FB           	ei
 638  8D3F
 639  8D3F 3A 47 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 640  8D42 B8           	cp b
 641  8D43 28 0B        	jr z,1F
 642  8D45 30 09        	jr nc,1F
 643  8D47
 644  8D47              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 645  8D47
 646  8D47 3C           	inc a
 647  8D48 32 47 8C     	ld (Entidades_en_curso),a
 648  8D4B
 649  8D4B 21 75 8C     	ld hl,Ctrl_4
 650  8D4E CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 651  8D50
 652  8D50              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 653  8D50
 654  8D50              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 655  8D50              ;	call Define_Clock_next_entity
 656  8D50
 657  8D50 3A 47 8C     1 ld a,(Entidades_en_curso)
 658  8D53 A7           	and a
 659  8D54 CA F8 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 660  8D57 47           	ld b,a													; No hay entidades que gestionar.
 661  8D58
 662  8D58              ; ( Código que ejecutamos con cada entidad: ).
 663  8D58
 664  8D58              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 665  8D58              ;
 666  8D58              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 667  8D58
 668  8D58 21 00 89     	ld hl,Tabla_de_pintado
 669  8D5B 22 70 8C     	ld (India_SP),hl
 670  8D5E
 671  8D5E 21 74 8C     	ld hl,Ctrl_3
 672  8D61 CB D6        	set 2,(hl)
 673  8D63 CD E6 8E     	call Change
 674  8D66
 675  8D66 C5           2 push bc 												; Nº de entidades en curso.
 676  8D67
 677  8D67 DD 2A 3D 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 678  8D6B CD FE 91     	call Salta_caja_de_entidades_vacia
 679  8D6E
 680  8D6E              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 681  8D6E
 682  8D6E DD 7E 00     	ld a,(ix+0)
 683  8D71 CB 7F        	bit 7,a
 684  8D73 28 11        	jr z,5F
 685  8D75
 686  8D75              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 687  8D75
 688  8D75 21 75 8C     	ld hl,Ctrl_4
 689  8D78 CB 46        	bit 0,(hl)
 690  8D7A CC 0D 92     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 691  8D7D 28 E8        	jr z,6B
 692  8D7F
 693  8D7F CB 86        	res 0,(hl)											; Restaura bit "despertador".
 694  8D81 CB BF        	res 7,a
 695  8D83 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 696  8D86
 697  8D86              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 698  8D86              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 699  8D86
 700  8D86 3A 7B 8C     5 ld a,(Impacto2)
 701  8D89 CB 5F        	bit 3,a
 702  8D8B C4 74 A2     	call nz,Compara_con_coordenadas_de_disparo
 703  8D8E
 704  8D8E              ; Existe colisión entre esta entidad y Amadeus ???
 705  8D8E
 706  8D8E DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 707  8D91 CB 4F        	bit 1,a
 708  8D93 C4 18 93     	call nz,Genera_explosion
 709  8D96 20 43        	jr nz,Gestiona_siguiente_entidad
 710  8D98
 711  8D98 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 712  8D9B A7           	and a
 713  8D9C 28 0C        	jr z,3F
 714  8D9E
 715  8D9E              ; IMPACTO en entidad por colisión con Amadeus.
 716  8D9E
 717  8D9E              ; 5/7/24
 718  8D9E              ; Nota importante:
 719  8D9E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 720  8D9E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 721  8D9E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 722  8D9E
 723  8D9E 3A B2 89     	ld a,(Impacto_Amadeus)
 724  8DA1 A7           	and a
 725  8DA2 C4 18 93     	call nz,Genera_explosion
 726  8DA5 20 34        	jr nz,Gestiona_siguiente_entidad
 727  8DA7
 728  8DA7              ; Falsa colisión !!!
 729  8DA7
 730  8DA7 32 01 8C     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 731  8DAA
 732  8DAA              ; -------------------------------------------
 733  8DAA
 734  8DAA CD 97 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 735  8DAD CD BE 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 736  8DB0 CD EF 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 737  8DB3
 738  8DB3 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 739  8DB5 DD 2A 02 8C  	ld ix,(Puntero_de_impresion)
 740  8DB9 CD 06 96     	call Genera_datos_de_impresion
 741  8DBC DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 742  8DBE
 743  8DBE CD 0C 95     	call Decrementa_Contador_de_mov_masticados
 744  8DC1
 745  8DC1              ; -------------------------------------------
 746  8DC1
 747  8DC1              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 748  8DC1
 749  8DC1 2A 02 8C     	ld hl,(Puntero_de_impresion)
 750  8DC4 CD DA 95     	call Genera_coordenadas
 751  8DC7
 752  8DC7 ED 4B FE 8B  	ld bc,(Coordenada_X)
 753  8DCB
 754  8DCB DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 755  8DCE DD 70 02     	ld (ix+2),b
 756  8DD1
 757  8DD1              ; TODO: Generamos disparo ???
 758  8DD1
 759  8DD1 3A 66 8C     	ld a,(Permiso_de_disparo_Entidades)
 760  8DD4 A7           	and a
 761  8DD5 C4 67 8E     	call nz,Entidad_genera_disparo_si_procede
 762  8DD8
 763  8DD8 CD F8 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 764  8DDB
 765  8DDB              Gestiona_siguiente_entidad
 766  8DDB
 767  8DDB CD 0D 92     	call Incrementa_punteros_de_cajas
 768  8DDE
 769  8DDE C1           	pop bc
 770  8DDF 10 85        	djnz 2B
 771  8DE1
 772  8DE1              ; Hemos gestionado todas las entidades.
 773  8DE1              ; ----- ----- -----
 774  8DE1
 775  8DE1 CD AB 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 776  8DE4 CD C2 8F     	call Ordena_tabla_de_impresion
 777  8DE7 CD AD 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 778  8DEA
 779  8DEA CD 68 8F     	call Borra_diferencia
 780  8DED
 781  8DED 3A 74 8C     	ld a,(Ctrl_3)
 782  8DF0 CB 5F        	bit 3,a
 783  8DF2 20 04        	jr nz,Gestion_de_Amadeus
 784  8DF4
 785  8DF4 EB           	ex de,hl
 786  8DF5 71           	ld (hl),c
 787  8DF6 2C           	inc l
 788  8DF7 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 789  8DF8
 790  8DF8              ;! GESTIONA AMADEUS !!!!!!!!!!
 791  8DF8
 792  8DF8              Gestion_de_Amadeus
 793  8DF8
 794  8DF8 21 74 8C     	ld hl,Ctrl_3
 795  8DFB CB 76        	bit 6,(hl)
 796  8DFD 28 13        	jr z,Amadeus_vivo
 797  8DFF
 798  8DFF              ; Amadeus ha sido destruido.
 799  8DFF              ; Decrementa (Temp_new_live).
 800  8DFF
 801  8DFF 21 88 8C     	ld hl,Temp_new_live
 802  8E02 35           	dec (hl)
 803  8E03 20 26        	jr nz,End_frame
 804  8E05
 805  8E05              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 806  8E05
 807  8E05 21 A0 8C     	ld hl,Lives
 808  8E08 35           	dec (hl)
 809  8E09
 810  8E09              ;! Fin del juego
 811  8E09
 812  8E09 F3           	di
 813  8E0A 28 FE        	jr z,$														;! GAME OVER !!!!!
 814  8E0C FB           	ei
 815  8E0D
 816  8E0D              ; Nueva nave.
 817  8E0D
 818  8E0D CD 84 8E     	call Reinicia_Amadeus
 819  8E10 18 19        	jr End_frame
 820  8E12
 821  8E12              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 822  8E12
 823  8E12              Amadeus_vivo
 824  8E12
 825  8E12 3A B2 89     	ld a,(Impacto_Amadeus)
 826  8E15 A7           	and a
 827  8E16 C4 88 93     	call nz, Genera_explosion_Amadeus
 828  8E19 20 10        	jr nz, End_frame
 829  8E1B
 830  8E1B CD F5 92     	call Teclado
 831  8E1E 21 74 8C     	ld hl,Ctrl_3
 832  8E21
 833  8E21 CB 6E        	bit 5,(hl)
 834  8E23 28 06        	jr z,End_frame
 835  8E25
 836  8E25              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 837  8E25
 838  8E25 CD 01 8F     	call Change_Amadeus
 839  8E28 CD 52 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 840  8E2B
 841  8E2B              End_frame
 842  8E2B
 843  8E2B              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 844  8E2B              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 845  8E2B
 846  8E2B CD 9F A1     	call Genera_datos_de_impresion_disparos_Entidades
 847  8E2E CD 63 A3     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 848  8E31 CD B9 A2     	call Calcula_bytes_pintado_disparos
 849  8E34 CD C6 A2     	call Limpia_album_de_pintado_disparos_entidades
 850  8E37
 851  8E37              ; ------------ ------------- --------------
 852  8E37
 853  8E37 2A 52 8C     	ld hl,(Album_de_borrado)
 854  8E3A 22 6E 8C     	ld (Scanlines_album_SP),hl
 855  8E3D
 856  8E3D 21 74 8C     	ld hl,Ctrl_3
 857  8E40 CB C6        	set 0,(hl) 											; Indica Frame completo.
 858  8E42 CB 9E        	res 3,(hl)
 859  8E44 CB A6        	res 4,(hl)
 860  8E46
 861  8E46 21 75 8C     	ld hl,Ctrl_4
 862  8E49 CB 86        	res 0,(hl)
 863  8E4B
 864  8E4B AF           	xor a
 865  8E4C D3 FE        	out ($fe),a
 866  8E4E
 867  8E4E 76           	halt
 868  8E4F
 869  8E4F C3 0C 8D     	jp Main
 870  8E52
 871  8E52              ;------------------------------------------
 872  8E52              ;
 873  8E52              ;	07/11/24
 874  8E52
 875  8E52              Autoriza_disparo_de_entidades
 876  8E52
 877  8E52 3E 01        	ld a,1
 878  8E54 32 66 8C     	ld (Permiso_de_disparo_Entidades),a
 879  8E57
 880  8E57 3A 90 8C     	ld a,(Repone_CLOCK_disparos)
 881  8E5A FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 882  8E5C 38 02        	jr c,1F
 883  8E5E
 884  8E5E              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 885  8E5E              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 886  8E5E              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 887  8E5E
 888  8E5E D6 04        	sub 4								; Aumenta la cadencia del disparo.
 889  8E60
 890  8E60 32 90 8C     1 ld (Repone_CLOCK_disparos),a
 891  8E63 32 91 8C     	ld (CLOCK_disparos_de_entidades),a
 892  8E66
 893  8E66 C9           	ret
 894  8E67
 895  8E67              ;------------------------------------------
 896  8E67              ;
 897  8E67              ;	14/09/24
 898  8E67              ;
 899  8E67              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 900  8E67
 901  8E67              Entidad_genera_disparo_si_procede
 902  8E67
 903  8E67 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 904  8E6A CB 06        	rlc (hl)
 905  8E6C
 906  8E6C DC EF A1     	call c,Genera_disparo_de_entidad_maldosa
 907  8E6F
 908  8E6F C9           	ret
 909  8E70
 910  8E70              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 911  8E70              ;
 912  8E70              ;	30/09/24
 913  8E70
 914  8E70              Actuaiza_sp_de_disparos_de_entidades
 915  8E70
 916  8E70 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 917  8E73 23           	inc hl
 918  8E74 22 8B 8C     	ld (Puntero_num_aleatorios_disparos),hl
 919  8E77
 920  8E77 11 FD 88     	ld de,Numeros_aleatorios+7
 921  8E7A 7B           	ld a,e
 922  8E7B 95           	sub l
 923  8E7C C0           	ret nz
 924  8E7D
 925  8E7D 21 F6 88     1 ld hl,Numeros_aleatorios
 926  8E80 22 8B 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 927  8E83 C9           	ret
 928  8E84
 929  8E84              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 930  8E84              ;
 931  8E84              ;	24/07/24
 932  8E84
 933  8E84              Reinicia_Amadeus
 934  8E84
 935  8E84              ;	Reinicia posición y estado.
 936  8E84
 937  8E84 21 CF 50     	ld hl,$50cf
 938  8E87 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 939  8E8A 21 CC DC     	ld hl,$dccc
 940  8E8D 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 941  8E90 21 3D 00     	ld hl,$003d
 942  8E93 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 943  8E96
 944  8E96              ;	limpiamos el álbum de borrado.
 945  8E96
 946  8E96 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
 947  8E99
 948  8E99 AF           	xor a
 949  8E9A 77           	ld (hl),a
 950  8E9B
 951  8E9B E5           	push hl
 952  8E9C D1           	pop de
 953  8E9D 13           	inc de
 954  8E9E
 955  8E9E 01 23 00     	ld bc,35
 956  8EA1 ED B0        	ldir
 957  8EA3
 958  8EA3 CD 52 91     	call Genera_datos_de_impresion_Amadeus
 959  8EA6
 960  8EA6              ;	Reinicia temporizaciones.
 961  8EA6
 962  8EA6 CD 2D 92     	call Inicia_Shield
 963  8EA9
 964  8EA9 3E 5A        	ld a,90
 965  8EAB 32 9D 8C     	ld (Shield),a
 966  8EAE
 967  8EAE 3E 64        	ld a,100
 968  8EB0 32 88 8C     	ld (Temp_new_live),a
 969  8EB3
 970  8EB3              ; 	Restauramos el FLAG: Amadeus vivo.
 971  8EB3
 972  8EB3 21 74 8C     	ld hl,Ctrl_3
 973  8EB6 CB B6        	res 6,(hl)
 974  8EB8
 975  8EB8              ;	Fuerza la impresión de la nave en el siguiente frame.
 976  8EB8
 977  8EB8 21 74 8C      	ld hl,Ctrl_3
 978  8EBB CB EE        	set 5,(hl)
 979  8EBD
 980  8EBD C9           	ret
 981  8EBE
 982  8EBE              ; --------------------------------------------------------------------------------------------------------------
 983  8EBE              ;
 984  8EBE              ;	23/11/24
 985  8EBE
 986  8EBE              Ajusta_velocidad_entidad
 987  8EBE
 988  8EBE DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 989  8EC1 A7           	and a
 990  8EC2 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 991  8EC3              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 992  8EC3              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 993  8EC3
 994  8EC3
 995  8EC3              ; Incrementa (Contador_de_vueltas)x2.
 996  8EC3              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 997  8EC3
 998  8EC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 999  8EC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1000  8EC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1001  8EC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1002  8EC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1003  8EC3
1004  8EC3
1005  8EC3 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1006  8EC5 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1007  8EC8 E6 10        	and $10
1008  8ECA C8           	ret z
1009  8ECB
1010  8ECB              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1011  8ECB
1012  8ECB DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1013  8ECE CB 2F        	sra a
1014  8ED0 CB 2F        	sra a
1015  8ED2 DD 77 0B     	ld (ix+11),a
1016  8ED5
1017  8ED5 DD 6E 07     	ld l,(ix+7)
1018  8ED8 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1019  8EDB
1020  8EDB              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1021  8EDB 23           	inc hl
1022  8EDC 23           	inc hl
1023  8EDD 23           	inc hl
1024  8EDE 23           	inc hl
1025  8EDF              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1026  8EDF
1027  8EDF DD 75 07     	ld (ix+7),l
1028  8EE2 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1029  8EE5
1030  8EE5 C9           	ret
1031  8EE6
1032  8EE6              ; --------------------------------------------------------------------------------------------------------------
1033  8EE6              ;
1034  8EE6              ;	25/08/24
1035  8EE6
1036  8EE6              Change
1037  8EE6
1038  8EE6 3A 6B 8C     	ld a,(Switch)
1039  8EE9 EE 01        	xor 1
1040  8EEB 32 6B 8C     	ld (Switch),a
1041  8EEE 2A 50 8C     	ld hl,(Album_de_pintado)
1042  8EF1 ED 5B 52 8C  	ld de,(Album_de_borrado)
1043  8EF5 EB           	ex de,hl
1044  8EF6 22 50 8C     	ld (Album_de_pintado),hl
1045  8EF9 22 6E 8C     	ld (Scanlines_album_SP),hl
1046  8EFC ED 53 52 8C  	ld (Album_de_borrado),de
1047  8F00 C9           	ret
1048  8F01
1049  8F01              Change_Amadeus
1050  8F01
1051  8F01 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1052  8F04 ED 5B 56 8C  	ld de,(Album_de_borrado_Amadeus)
1053  8F08 EB           	ex de,hl
1054  8F09 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1055  8F0C ED 53 56 8C  	ld (Album_de_borrado_Amadeus),de
1056  8F10 C9           	ret
1057  8F11
1058  8F11              Change_Disparos
1059  8F11
1060  8F11              ; Álbumes de Amadeus.
1061  8F11
1062  8F11 2A 58 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1063  8F14 ED 5B 5A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1064  8F18 EB           	ex de,hl
1065  8F19 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1066  8F1C ED 53 5A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1067  8F20 CD AE A2     	call Limpia_album_de_pintado_disparos_Amadeus
1068  8F23
1069  8F23              ; Álbumes de entidades.
1070  8F23
1071  8F23 2A 5C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1072  8F26 ED 5B 5E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1073  8F2A EB           	ex de,hl
1074  8F2B 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1075  8F2E ED 53 5E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1076  8F32 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1077  8F35
1078  8F35 3A 62 8C     	ld a,(Num_de_bytes_album_de_disparos)
1079  8F38 32 63 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1080  8F3B
1081  8F3B C9           	ret
1082  8F3C
1083  8F3C              ; ------------------------------------
1084  8F3C              ;
1085  8F3C              ; 1/05/24
1086  8F3C
1087  8F3C              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1088  8F3C              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1089  8F3C
1090  8F3C              ;	DESTRUYE: HL,DE,A
1091  8F3C              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1092  8F3C
1093  8F3C              ;	Variables implicadas: (RND_SP).
1094  8F3C
1095  8F3C              Extrae_numero_aleatorio_y_avanza
1096  8F3C
1097  8F3C 21 FD 88     	ld hl,Numeros_aleatorios+7
1098  8F3F EB           	ex de,hl
1099  8F40 2A 89 8C     	ld hl,(RND_SP)
1100  8F43
1101  8F43 7B           	ld a,e
1102  8F44 95           	sub l
1103  8F45 20 06        	jr nz,1F
1104  8F47
1105  8F47              ; Sitúa HL al principio de la tabla de nº aleatorios.
1106  8F47
1107  8F47 21 F6 88     	ld hl,Numeros_aleatorios
1108  8F4A 22 89 8C     	ld (RND_SP),HL
1109  8F4D
1110  8F4D              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1111  8F4D
1112  8F4D 7E           1 ld a,(hl)
1113  8F4E 23           	inc hl
1114  8F4F 22 89 8C     	ld (RND_SP),hl
1115  8F52 C9           	ret
1116  8F53
1117  8F53              ; ------------------------------------
1118  8F53              ;
1119  8F53              ; 1/05/24
1120  8F53
1121  8F53              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1122  8F53              ; (1 a 4 segundos).
1123  8F53              ; Actualizamos (Clock_next_entity) con A.
1124  8F53
1125  8F53              ;	DESTRUYE: A y B.
1126  8F53              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1127  8F53              ;			 Actualiza (Clock_next_entity) con A.
1128  8F53
1129  8F53              ;	Variables implicadas: (Clock_next_entity).
1130  8F53
1131  8F53              ; Notas:
1132  8F53
1133  8F53              ; 	$32 1 seg.
1134  8F53              ; 	$64 2 seg.
1135  8F53              ; 	$96 3 seg.
1136  8F53              ; 	$c8 4 seg.
1137  8F53              ; 	$fa 5 seg.
1138  8F53
1139  8F53              ; $ffff 1310,7 seg, 22 minutos.
1140  8F53
1141  8F53              ;	$0100  5 seg. aproximadamente.
1142  8F53              ;	$0200 10 seg. aproximadamente.
1143  8F53              ;	$0300 15 seg. aproximadamente.
1144  8F53              ;	$0400 20 seg. aproximadamente.
1145  8F53              ;	$0500 25 seg. aproximadamente.
1146  8F53              ;	$0600 30 seg. aproximadamente.
1147  8F53
1148  8F53              Define_Clock_next_entity
1149  8F53
1150  8F53 FE 34        	cp $34
1151  8F55 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1152  8F57
1153  8F57              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1154  8F57
1155  8F57 4F           3 ld c,a
1156  8F58 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1157  8F5A 2A 78 5C     	ld hl,(FRAMES)
1158  8F5D A7           	and a
1159  8F5E ED 4A        	adc hl,bc
1160  8F60 22 8E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1161  8F63 C9           	ret
1162  8F64
1163  8F64 3E 34        1 ld a,$34
1164  8F66 18 EF        	jr 3B
1165  8F68
1166  8F68              ; ------------------------------------
1167  8F68              ;
1168  8F68              ; 18/03/24
1169  8F68
1170  8F68              Borra_diferencia
1171  8F68
1172  8F68 ED 4B 6E 8C  	ld bc,(Scanlines_album_SP)
1173  8F6C
1174  8F6C 3A 6B 8C     	ld a,(Switch)
1175  8F6F A7           	and a
1176  8F70 28 08        	jr z,2F
1177  8F72
1178  8F72 2A 69 8C     	ld hl,(Techo_Scanlines_album_2)
1179  8F75 11 69 8C     	ld de,Techo_Scanlines_album_2
1180  8F78 18 06        	jr 3F
1181  8F7A
1182  8F7A 2A 67 8C     2 ld hl,(Techo_Scanlines_album)
1183  8F7D 11 67 8C     	ld de,Techo_Scanlines_album
1184  8F80
1185  8F80              ; Diferencia.
1186  8F80
1187  8F80 ED 42        3 sbc hl,bc
1188  8F82
1189  8F82 C8           	ret z
1190  8F83 D8           	ret c
1191  8F84
1192  8F84              ; Nuevo techo, (más bajo que el anterior).
1193  8F84              ; Fijamos nuevo techo y borramos bytes sobrantes.
1194  8F84
1195  8F84 EB           	ex de,hl
1196  8F85
1197  8F85 71           	ld (hl),c
1198  8F86 2C           	inc l
1199  8F87 70           	ld (hl),b
1200  8F88
1201  8F88 AF           	xor a
1202  8F89 43           	ld b,e
1203  8F8A
1204  8F8A 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1205  8F8D
1206  8F8D 77           1 ld (hl),a
1207  8F8E 23           	inc hl
1208  8F8F 10 FC        	djnz 1B
1209  8F91
1210  8F91              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1211  8F91
1212  8F91 21 74 8C     	ld hl,Ctrl_3
1213  8F94 CB DE        	set 3,(hl)
1214  8F96
1215  8F96 C9           	ret
1216  8F97
1217  8F97              ; --------------------------------------------------------------------------------------------------------------
1218  8F97              ;
1219  8F97              ;	23/11/24
1220  8F97              ;
1221  8F97              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1222  8F97
1223  8F97              Entidad_a_Tabla_de_pintado
1224  8F97
1225  8F97              ; Almacena la Coordenada Y de la entidad en curso.
1226  8F97
1227  8F97              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1228  8F97
1229  8F97 DD 7E 02     	ld a,(ix+2)
1230  8F9A 2A 70 8C     	ld hl,(India_SP)
1231  8F9D 77           	ld (hl),a
1232  8F9E 2C           	inc l
1233  8F9F
1234  8F9F              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1235  8F9F
1236  8F9F ED 5B 6E 8C  	ld de,(Scanlines_album_SP)
1237  8FA3
1238  8FA3 73           	ld (hl),e
1239  8FA4 2C           	inc l
1240  8FA5 72           	ld (hl),d
1241  8FA6 2C           	inc l
1242  8FA7
1243  8FA7 22 70 8C     	ld (India_SP),hl
1244  8FAA
1245  8FAA C9           	ret
1246  8FAB
1247  8FAB              ; --------------------------------------------------------------------------------------------------------------
1248  8FAB              ;
1249  8FAB              ;	27/03/24
1250  8FAB              ;
1251  8FAB
1252  8FAB              Inicializa_India_y_limpia_Tabla_de_impresion
1253  8FAB
1254  8FAB 2A 70 8C     	ld hl,(India_SP)
1255  8FAE 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1256  8FB1
1257  8FB1 79           	ld a,c
1258  8FB2 95           	sub l
1259  8FB3 28 06        	jr z,2F
1260  8FB5 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1261  8FB6              ;														; _ y pasamos a inicializar (India_SP).
1262  8FB6 AF           	xor a
1263  8FB7
1264  8FB7 77           1 ld (hl),a
1265  8FB8 2C           	inc l
1266  8FB9 10 FC        	djnz 1B												; Limpia Tabla.
1267  8FBB
1268  8FBB 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1269  8FBE 22 70 8C     	ld (India_SP),hl
1270  8FC1
1271  8FC1 C9           	ret
1272  8FC2
1273  8FC2              ; --------------------------------------------------------------------------------------------------------------
1274  8FC2              ;
1275  8FC2              ;	31/3/24
1276  8FC2
1277  8FC2              Ordena_tabla_de_impresion
1278  8FC2
1279  8FC2              ; 5794 T/states.
1280  8FC2              ; 6278 T/states.
1281  8FC2              ; 5310 T/states.
1282  8FC2
1283  8FC2              ; Inicializamos punteros (India_SP) e (India_2_SP).
1284  8FC2              ; Inicializamos contador de comparaciones, [C].
1285  8FC2              ; Cargamos los registros A y B para efectuar comparación.
1286  8FC2
1287  8FC2 FD 2E 00     	ld iyl,0
1288  8FC5
1289  8FC5 3A 47 8C     	ld a,(Entidades_en_curso)
1290  8FC8 FE 04        	cp 4 	;	4
1291  8FCA D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1292  8FCB
1293  8FCB 3D           	dec a
1294  8FCC 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1295  8FCD 51           	ld d,c 										; Copia de respaldo.
1296  8FCE
1297  8FCE 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1298  8FCF
1299  8FCF 21 03 89     	ld hl,Tabla_de_pintado+3
1300  8FD2 46           	ld b,(hl)
1301  8FD3 22 72 8C     	ld (India_2_SP),hl
1302  8FD6
1303  8FD6 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1304  8FD7 DC FF 8F     	call c, Avanza_India_2_SP
1305  8FDA CC FF 8F     	call z, Avanza_India_2_SP
1306  8FDD
1307  8FDD FD 2D        	dec iyl
1308  8FDF 28 18        	jr z,2F
1309  8FE1
1310  8FE1
1311  8FE1              ; --------------------------------------------------------------------------------------------------------------
1312  8FE1              ;
1313  8FE1              ;	7/4/24
1314  8FE1
1315  8FE1              Trueque
1316  8FE1
1317  8FE1              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1318  8FE1              ;  			A contiene en nº de fila de (India_SP).
1319  8FE1              ;			HL contiene (India_2_SP).
1320  8FE1
1321  8FE1 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1322  8FE2 E5           	push hl										; Preservo (India_2_SP).
1323  8FE3
1324  8FE3 ED 5B 70 8C  	ld de,(India_SP)
1325  8FE7 EB           	ex de,hl
1326  8FE8 70           	ld (hl),b
1327  8FE9 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1328  8FEA
1329  8FEA CD 2B 90     	call Intercambia_1_byte
1330  8FED CD 2B 90     	call Intercambia_1_byte
1331  8FF0
1332  8FF0
1333  8FF0              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1334  8FF0              ; Recuperamos (India_2_SP) en HL.
1335  8FF0
1336  8FF0 2A 70 8C     	ld hl,(India_SP)
1337  8FF3 7E           	ld a,(hl)
1338  8FF4
1339  8FF4 E1           	pop hl
1340  8FF5 D1           	pop de
1341  8FF6
1342  8FF6              ; --------------------------------------------------------------------------------------------------------------
1343  8FF6
1344  8FF6 CD FF 8F     	call Avanza_India_2_SP
1345  8FF9
1346  8FF9 14           2 inc d
1347  8FFA 15           	dec d
1348  8FFB C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1349  8FFC 18 D8        	jr 1B
1350  8FFE
1351  8FFE C9           	ret
1352  8FFF
1353  8FFF              ; ----- ----- ----- ----- -----
1354  8FFF
1355  8FFF              Avanza_India_2_SP
1356  8FFF
1357  8FFF 0D           	dec c
1358  9000 28 0A        	jr z,Avanza_punteros_indios
1359  9002
1360  9002 FD 2C        	inc iyl
1361  9004
1362  9004 2C           	inc l
1363  9005 2C           	inc l
1364  9006 2C           	inc l
1365  9007
1366  9007 46           	ld b,(hl)
1367  9008 22 72 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1368  900B
1369  900B C9           	ret
1370  900C
1371  900C              ; ----- ----- ----- ----- -----
1372  900C
1373  900C              Avanza_punteros_indios
1374  900C
1375  900C 15           	dec d
1376  900D 28 15        	jr z,Prepara_salida
1377  900F
1378  900F 4A           	ld c,d
1379  9010
1380  9010 2A 70 8C     	ld hl,(India_SP)
1381  9013 2C           	inc l
1382  9014 2C           	inc l
1383  9015 2C           	inc l
1384  9016 7E           	ld a,(hl)
1385  9017 22 70 8C     	ld (India_SP),hl
1386  901A
1387  901A 2C           	inc l
1388  901B 2C           	inc l
1389  901C 2C           	inc l
1390  901D 46           	ld b,(hl)
1391  901E 22 72 8C     	ld (India_2_SP),hl
1392  9021
1393  9021 FD 2C        	inc iyl
1394  9023
1395  9023 C9           	ret
1396  9024
1397  9024              Prepara_salida
1398  9024
1399  9024 21 00 89     	ld hl,Tabla_de_pintado
1400  9027 22 70 8C     	ld (India_SP),hl
1401  902A C9           	ret
1402  902B
1403  902B
1404  902B 2C           Intercambia_1_byte inc l
1405  902C 1C           	inc e
1406  902D 46           	ld b,(hl)
1407  902E 1A           	ld a,(de)
1408  902F EB           	ex de,hl
1409  9030 70           	ld (hl),b
1410  9031 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1411  9032 C9           	ret
1412  9033
1413  9033              ; -----------------------------------------------------------------------------------
1414  9033              ;
1415  9033              ;	20/01/24
1416  9033              ;
1417  9033              ;
1418  9033
1419  9033              Construye_movimientos_masticados_entidad
1420  9033
1421  9033 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1422  9036 E5           	push hl
1423  9037 CD B6 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1424  903A              ;															; _ el (Contador_de_mov_masticados).
1425  903A CD C9 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1426  903D              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1427  903D CD ED 9A     	call Recompone_posicion_inicio
1428  9040
1429  9040 CD 1D 98     1 call Draw
1430  9043
1431  9043 CD C3 90     	call Codifica_movimiento
1432  9046 CD 9B 90     	call Guarda_movimiento_masticado
1433  9049
1434  9049 18 37        	jr 2F
1435  904B
1436  904B              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------------------------
1437  904B              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1438  904B              ;! -------------------------------------------------------------------------------------------------------------------------------
1439  904B              ;! -------------------------------------------------------------------------------------------------------------------------------
1440  904B
1441  904B F5           	push af
1442  904C C5           	push bc
1443  904D D5           	push de
1444  904E E5           	push hl
1445  904F FD E5        	push iy
1446  9051 DD E5        	push ix
1447  9053
1448  9053 AF           	xor a
1449  9054 D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1450  9056
1451  9056              ;	8BF2 00           CTRL_DESPLZ
1452  9056              ;	8Be5 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1453  9056              ;	$ddc0			  Almacén de movimientos masticados.
1454  9056              ;	8BE3 00 00        Puntero_de_impresion defw 0
1455  9056              ;	8Bdf 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
1456  9056              ;	8Be0 00  	      Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
1457  9056              ;	8Bee 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
1458  9056              ;	8Bf0 00 00		  Puntero_objeto defw 0 									; Donde están los datos para pintar el Sprite.
1459  9056
1460  9056              ; -------------------------------------------------------------------------
1461  9056
1462  9056              ; 	Pos_actual $43fe -
1463  9056              ;	Puntero_de_impresion $44be
1464  9056              ;	Puntero_objeto $8540
1465  9056              ;	Ctrl_Desplz $00
1466  9056
1467  9056              ;	En función de la Posicion_actual:
1468  9056
1469  9056              ;	Coordenada_X $1e
1470  9056              ;	Coordenada_y $07
1471  9056
1472  9056              ; -------------------------------------------------------------------------
1473  9056
1474  9056 2A 50 8C     	ld hl,(Album_de_pintado)
1475  9059 22 6E 8C     	ld (Scanlines_album_SP),hl
1476  905C
1477  905C FD E5        	push iy
1478  905E D1           	pop de
1479  905F
1480  905F D5           	push de
1481  9060 CD 06 96     	call Genera_datos_de_impresion
1482  9063 D1           	pop de
1483  9064
1484  9064
1485  9064              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1486  9064              ;
1487  9064              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1488  9064              ;							DE (Puntero objeto).
1489  9064
1490  9064
1491  9064 2A 50 8C     	ld hl,(Album_de_pintado)
1492  9067 EB           	ex de,hl
1493  9068 CD FA 96     	call Pinta_Sprites
1494  906B
1495  906B              ;	ld a,(Coordenada_X)
1496  906B              ;	cp 30
1497  906B              ;	jr z,$
1498  906B              ;	cp 31
1499  906B              ;	jr z,$
1500  906B              ;	cp 0
1501  906B              ;	jr z,$
1502  906B              ;	cp 1
1503  906B              ;	jr z,$
1504  906B
1505  906B              ;	jr $
1506  906B
1507  906B              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1508  906B 3E 38        	ld a,%00111000
1509  906D CD C6 95     	call Cls
1510  9070
1511  9070              ; Borra album de pintado.
1512  9070
1513  9070 AF           	xor a
1514  9071 21 00 80     	ld hl,$8000
1515  9074 06 28        	ld b,40
1516  9076 77           23 ld (hl),a
1517  9077 2C           	inc l
1518  9078 10 FC        	djnz 23b
1519  907A
1520  907A              ; ----- ----- ----- ----- -----
1521  907A
1522  907A DD E1        	pop ix
1523  907C FD E1        	pop iy
1524  907E E1           	pop hl
1525  907F D1           	pop de
1526  9080 C1           	pop bc
1527  9081 F1           	pop af
1528  9082
1529  9082              ;! -------------------------------------------------------------------------------------------------------------------------------
1530  9082              ;! -------------------------------------------------------------------------------------------------------------------------------
1531  9082              ;! -------------------------------------------------------------------------------------------------------------------------------
1532  9082              ;! -------------------------------------------------------------------------------------------------------------------------------
1533  9082
1534  9082 CD 81 9E     2 call Movimiento
1535  9085
1536  9085 3A 74 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1537  9088 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1538  908A 28 B4        	jr z,1B
1539  908C
1540  908C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1541  908C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1542  908C
1543  908C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1544  908D 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1545  9090
1546  9090              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1547  9090
1548  9090 CD E5 9F     	call Situa_en_contador_general_de_mov_masticados
1549  9093
1550  9093              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1551  9093              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1552  9093
1553  9093 ED 4B 06 8C  	ld bc,(Contador_de_mov_masticados)
1554  9097
1555  9097 71           	ld (hl),c
1556  9098 23           	inc hl
1557  9099 70           	ld (hl),b
1558  909A
1559  909A C9           	ret
1560  909B
1561  909B              ; -----------------------------------------------------------------------------------
1562  909B              ;
1563  909B              ;	28/12/23
1564  909B              ;
1565  909B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1566  909B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1567  909B
1568  909B              Guarda_movimiento_masticado
1569  909B
1570  909B ED 73 4C 8C  	ld (Stack),sp
1571  909F ED 7B 04 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1572  90A3
1573  90A3 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1574  90A5 FD E5            push iy 												; Pushea Puntero_objeto.
1575  90A7
1576  90A7 ED 7B 4C 8C      ld sp,(Stack)
1577  90AB
1578  90AB 2A 06 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1579  90AE 23           	inc hl
1580  90AF 22 06 8C     	ld (Contador_de_mov_masticados),hl
1581  90B2
1582  90B2 CD B6 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1583  90B5              ;															; _ el (Contador_de_mov_masticados).
1584  90B5 C9               ret
1585  90B6
1586  90B6              ; --------------------------------------------------------------------------------------------------------------
1587  90B6              ;
1588  90B6              ;	12/1/24
1589  90B6              ;
1590  90B6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1591  90B6
1592  90B6              Actualiza_Puntero_de_almacen_de_mov_masticados
1593  90B6
1594  90B6 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1595  90B9 01 04 00     	ld bc,4
1596  90BC A7           	and a
1597  90BD ED 4A        	adc hl,bc
1598  90BF 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1599  90C2 C9           	ret
1600  90C3
1601  90C3              ; --------------------------------------------------------------------------------------------------------------
1602  90C3              ;
1603  90C3              ;	14/1/25
1604  90C3              ;
1605  90C3              ;	IX ..... (Puntero_de_impresion).
1606  90C3              ;	IY ..... (Puntero_objeto).
1607  90C3
1608  90C3              Codifica_movimiento
1609  90C3
1610  90C3 3A 1D 8C     	ld a,(Columnas)
1611  90C6 3D           	dec a
1612  90C7 28 04        	jr z,Una_Columna
1613  90C9 3D           	dec a
1614  90CA 28 13        	jr z,Dos_Columnas
1615  90CC C9           	ret
1616  90CD
1617  90CD DD 7C        Una_Columna ld a,ixh
1618  90CF CB EF        	set 5,a
1619  90D1 CB B7        	res 6,a
1620  90D3 DD 67        	ld ixh,a
1621  90D5
1622  90D5 3A FE 8B     	ld a,(Coordenada_X)
1623  90D8 A7           	and a
1624  90D9 C0           	ret nz
1625  90DA
1626  90DA FD 2C        	inc iyl
1627  90DC FD 2C        	inc iyl
1628  90DE C9           	ret
1629  90DF
1630  90DF FD 7C        Dos_Columnas ld a,iyh
1631  90E1 CB FF        	set 7,a
1632  90E3 CB B7        	res 6,a
1633  90E5 DD 67        	ld ixh,a
1634  90E7
1635  90E7 3A FE 8B     	ld a,(Coordenada_X)
1636  90EA 3D           	dec a
1637  90EB C0           	ret nz
1638  90EC
1639  90EC FD 2C        	inc iyl
1640  90EE C9           	ret
1641  90EF
1642  90EF              ; ------------------------------------------
1643  90EF              ;
1644  90EF              ;	23/11/24
1645  90EF              ;
1646  90EF              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1647  90EF
1648  90EF
1649  90EF              Obtenemos_puntero_de_impresion
1650  90EF
1651  90EF DD 6E 07     	ld l,(ix+7)
1652  90F2 DD 66 08     	ld h,(ix+8)
1653  90F5
1654  90F5              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1655  90F5
1656  90F5 ED 73 4C 8C  	ld (Stack),sp
1657  90F9 F9           	ld sp,hl
1658  90FA
1659  90FA AF           	xor a
1660  90FB 67           	ld h,a
1661  90FC 6C           	ld l,h															; ld hl,"0"
1662  90FD
1663  90FD              ;	Extrae movimiento del Almacen_de_movimientos_masticados de esta unidad.
1664  90FD
1665  90FD D1           	pop de															; (Puntero_objeto) en DE.
1666  90FE C1           	pop bc															; (Puntero_de_impresión) CODIFICADO en DE.
1667  90FF
1668  90FF 18 FE        	jr $
1669  9101
1670  9101              Decodifica_Puntero_de_impresion
1671  9101
1672  9101              ; 	Almacena (Puntero_de_impresion) en caja.
1673  9101
1674  9101 DD 71 05     1 ld (ix+5),c
1675  9104 DD 70 06     	ld (ix+6),b
1676  9107
1677  9107 ED 43 02 8C  	ld (Puntero_de_impresion),bc
1678  910B
1679  910B              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1680  910B
1681  910B 39           	add hl,sp
1682  910C DD 75 07     	ld (ix+7),l
1683  910F DD 74 08     	ld (ix+8),h
1684  9112
1685  9112 C1           	pop bc
1686  9113
1687  9113 79           	ld a,c
1688  9114 80           	add b															; Comprueba si ya no hay datos en el almacén.
1689  9115
1690  9115 ED 7B 4C 8C  	ld sp,(Stack)
1691  9119
1692  9119 CC 1A 95     	call z,Reinicia_entidad_maliciosa
1693  911C
1694  911C C9           	ret
1695  911D
1696  911D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1697  911D              ;
1698  911D              ;	25/11/24
1699  911D
1700  911D              Cargamos_registros_con_explosion
1701  911D
1702  911D DD 6E 07     	ld l,(ix+7)
1703  9120 DD 66 08     	ld h,(ix+8)
1704  9123 CD C3 91     	call Extrae_address
1705  9126 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1706  9127
1707  9127 DD 6E 05     	ld l,(ix+5)
1708  912A DD 66 06     	ld h,(ix+6)
1709  912D
1710  912D E5           	push hl
1711  912E DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1712  9130
1713  9130 C9           	ret
1714  9131
1715  9131
1716  9131              Cargamos_registros_con_explosion_Amadeus
1717  9131
1718  9131 2A B5 89     	ld hl,(Pamm_Amadeus)
1719  9134 CD C3 91     	call Extrae_address
1720  9137
1721  9137 5D           	ld e,l
1722  9138 54           	ld d,h
1723  9139
1724  9139 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1725  913D
1726  913D C9           	ret
1727  913E
1728  913E              ; --------------------------------------------------------------------------------------------------------------
1729  913E              ;
1730  913E              ;	17/06/24
1731  913E              ;
1732  913E              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1733  913E              ;
1734  913E              ;	IX contiene el puntero de impresión.
1735  913E              ;	DE contiene (Puntero_objeto).
1736  913E
1737  913E
1738  913E              Cargamos_registros_con_mov_masticado_Amadeus
1739  913E
1740  913E ED 73 4C 8C  	ld (Stack),sp
1741  9142 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1742  9146 D1           	pop de 															; DE contiene Puntero_objeto
1743  9147 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1744  9149 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1745  914D ED 7B 4C 8C  	ld sp,(Stack)
1746  9151 C9           	ret
1747  9152
1748  9152              ; ---------------------------------------------------------------------------------------------------------------------
1749  9152              ;
1750  9152              ;	18/6/24
1751  9152              ;
1752  9152              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1753  9152
1754  9152              Genera_datos_de_impresion_Amadeus
1755  9152
1756  9152 3A B2 89     	ld a,(Impacto_Amadeus)
1757  9155 A7           	and a
1758  9156 20 03        	jr nz,1F
1759  9158
1760  9158              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1761  9158              ; _apuntando a la correspondiente explosión.
1762  9158
1763  9158 CD 3E 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1764  915B
1765  915B DD 7D        1 ld a,ixl
1766  915D E6 1F        	and $1f
1767  915F 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1768  9162
1769  9162 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1770  9165 E5           	push hl
1771  9166
1772  9166 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1773  9169 22 6E 8C     	ld (Scanlines_album_SP),hl
1774  916C
1775  916C CD 06 96     	call Genera_datos_de_impresion
1776  916F
1777  916F E1           	pop hl
1778  9170 22 6E 8C     	ld (Scanlines_album_SP),hl
1779  9173
1780  9173 C9           	ret
1781  9174
1782  9174              ; ---------------------------------------------------------------------------------------------------------------------
1783  9174              ;
1784  9174              ;	13/03/24
1785  9174              ;
1786  9174              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1787  9174
1788  9174              Inicia_albumes_de_lineas
1789  9174
1790  9174 21 00 80     	ld hl,Scanlines_album
1791  9177 22 50 8C     	ld (Album_de_pintado),hl
1792  917A 22 6E 8C     	ld (Scanlines_album_SP),hl
1793  917D
1794  917D 21 1A 81     	ld hl,Scanlines_album_2
1795  9180 22 52 8C     	ld (Album_de_borrado),hl
1796  9183
1797  9183 C9           	ret
1798  9184
1799  9184              Inicia_albumes_de_lineas_Amadeus
1800  9184
1801  9184 21 34 82     	ld hl,Amadeus_scanlines_album
1802  9187 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1803  918A 21 58 82     	ld hl,Amadeus_scanlines_album_2
1804  918D 22 56 8C     	ld (Album_de_borrado_Amadeus),hl
1805  9190
1806  9190 C9           	ret
1807  9191
1808  9191              Inicia_albumes_de_disparos
1809  9191
1810  9191 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1811  9194 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1812  9197 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1813  919A 22 5A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1814  919D
1815  919D 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1816  91A0 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1817  91A3 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1818  91A6
1819  91A6 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1820  91A9 22 5E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1821  91AC
1822  91AC C9           	ret
1823  91AD
1824  91AD              ; ---------------------------------------------------------------------------------------------------------------------
1825  91AD              ;
1826  91AD              ; 8/1/23
1827  91AD              ;
1828  91AD              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1829  91AD              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1830  91AD              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1831  91AD
1832  91AD              ; Destruye HL y DE !!!!!
1833  91AD
1834  91AD              Inicia_punteros_de_cajas
1835  91AD
1836  91AD 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1837  91B0 CD C3 91         call Extrae_address
1838  91B3 22 3D 8C         ld (Puntero_store_caja),hl
1839  91B6 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1840  91B9 22 41 8C     	ld (Indice_restore_caja),hl
1841  91BC CD C3 91     	call Extrae_address
1842  91BF 22 3F 8C     	ld (Puntero_restore_caja),hl
1843  91C2 C9               ret
1844  91C3
1845  91C3              ; *************************************************************************************************************************************************************
1846  91C3
1847  91C3              ;
1848  91C3              ; 20/10/22
1849  91C3              ;
1850  91C3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1851  91C3              ;
1852  91C3              ; Destruye el puntero y DE !!!!!
1853  91C3
1854  91C3 5E           Extrae_address ld e,(hl)
1855  91C4 23           	inc hl
1856  91C5 56           	ld d,(hl)
1857  91C6 2B           	dec hl
1858  91C7 EB           	ex de,hl
1859  91C8 C9           	ret
1860  91C9
1861  91C9              ; *************************************************************************************************************************************************************
1862  91C9              ;
1863  91C9              ;	20/1/24
1864  91C9              ;
1865  91C9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1866  91C9              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1867  91C9              ;
1868  91C9              ;   Destruye HL y BC !!!!!,
1869  91C9              ;
1870  91C9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1871  91C9              ;					"0" ..... Izquierda.
1872  91C9
1873  91C9              Inicia_Puntero_objeto
1874  91C9
1875  91C9 3A 1C 8C     	ld a,(Cuad_objeto)
1876  91CC E6 01        	and 1
1877  91CE F5           	push af
1878  91CF CC EB 91     	call z,Inicia_puntero_objeto_izq
1879  91D2 F1           	pop af
1880  91D3 C8           	ret z
1881  91D4 CD D8 91     	call Inicia_puntero_objeto_der
1882  91D7 C9           	ret
1883  91D8
1884  91D8              ; Arrancamos desde la parte izquierda de la pantalla.
1885  91D8              ; Iniciamos (Indice_Sprite_der).
1886  91D8
1887  91D8 2A 12 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1888  91DB 22 16 8C     	ld (Puntero_DESPLZ_der),hl
1889  91DE CD C3 91     	call Extrae_address
1890  91E1 22 0F 8C     	ld (Puntero_objeto),hl
1891  91E4
1892  91E4 2A 14 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1893  91E7 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1894  91EA C9           	ret
1895  91EB
1896  91EB              ; Arrancamos desde la parte derecha de la pantalla.
1897  91EB              ; Iniciamos (Indice_Sprite_izq).
1898  91EB
1899  91EB 2A 14 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1900  91EE 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1901  91F1 CD C3 91     	call Extrae_address
1902  91F4 22 0F 8C     	ld (Puntero_objeto),hl
1903  91F7
1904  91F7 2A 12 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1905  91FA 22 16 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1906  91FD C9           	ret
1907  91FE
1908  91FE              ; **************************************************************************************************
1909  91FE              ;
1910  91FE              ;	27/11/24
1911  91FE              ;
1912  91FE              ;	INPUT: IX contiene (Puntero_store_caja).
1913  91FE              ;
1914  91FE              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1915  91FE
1916  91FE              Salta_caja_de_entidades_vacia
1917  91FE
1918  91FE DD 7E 00     	ld a,(ix+0)
1919  9201 A7           	and a
1920  9202 C0           	ret nz
1921  9203
1922  9203 CD 0D 92     	call Incrementa_punteros_de_cajas
1923  9206 DD 2A 3D 8C  	ld ix,(Puntero_store_caja)
1924  920A 18 F2        	jr Salta_caja_de_entidades_vacia
1925  920C
1926  920C C9           	ret
1927  920D
1928  920D              ; **************************************************************************************************
1929  920D              ;
1930  920D              ;	08/05/23
1931  920D              ;
1932  920D              ;	Incrementamos los dos punteros de entidades. (+1).
1933  920D
1934  920D              Incrementa_punteros_de_cajas
1935  920D
1936  920D 2A 3F 8C     	ld hl,(Puntero_restore_caja)
1937  9210 22 3D 8C     	ld (Puntero_store_caja),hl
1938  9213 2A 41 8C     	ld hl,(Indice_restore_caja)
1939  9216 23           	inc hl
1940  9217 23           	inc hl
1941  9218 22 41 8C     	ld (Indice_restore_caja),hl
1942  921B CD C3 91         call Extrae_address
1943  921E 22 3F 8C         ld (Puntero_restore_caja),hl
1944  9221 C9               ret
1945  9222
1946  9222              ; -----------------------------------------------------------
1947  9222
1948  9222              ; Teclado.
1949  9222
1950  9222 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1951  9224 DB FE        	in a,($fe)
1952  9226 E6 01        	and $01
1953  9228 28 02        	jr z,1f
1954  922A 18 F6        	jr Pulsa_ENTER
1955  922C C9           1 ret
1956  922D
1957  922D              ; **************************************************************************************************
1958  922D              ;
1959  922D              ; Temporización.
1960  922D
1961  922D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1962  922D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1963  922D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1964  922D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1965  922D
1966  922D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1967  922D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1968  922D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1969  922D
1970  922D              ; A partir de $4f61 no hace falta DELAY.
1971  922D
1972  922D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1973  922D
1974  922D              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1975  922D              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1976  922D              ;	LD A,B
1977  922D              ;	AND A
1978  922D              ;	JR NZ,wait
1979  922D              ;	RET
1980  922D
1981  922D              ; ---------------------------------------------------------------------------------------------------------------
1982  922D              ;
1983  922D              ;	13/07/24
1984  922D              ;
1985  922D
1986  922D              Inicia_Shield
1987  922D
1988  922D 21 97 8C     	ld hl,Datos_Shield
1989  9230 22 9B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1990  9233
1991  9233 7E           	ld a,(hl)
1992  9234 32 9E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1993  9237
1994  9237 3E 01        	ld a,1
1995  9239 32 9F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1996  923C
1997  923C C9           	ret
1998  923D
1999  923D              ; ---------- ---------- ---------- ---------- ----------
2000  923D              ;
2001  923D              ;	30/11/24
2002  923D              ;
2003  923D              ;	Limpia la caja de entidades de una entidad eliminada.
2004  923D              ;
2005  923D              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2006  923D              ;	MODIFY: A,BC,DE y HL.
2007  923D
2008  923D              Limpia_caja_de_entidades
2009  923D
2010  923D DD E5        	push ix
2011  923F E1           	pop hl
2012  9240 AF           	xor a
2013  9241 77           	ld (hl),a
2014  9242 5D           	ld e,l
2015  9243 54           	ld d,h
2016  9244 1C           	inc e
2017  9245 01 0B 00     	ld bc,11
2018  9248 ED B0        	ldir
2019  924A C9           	ret
2020  924B
2021  924B              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2022  924B              ;
2023  924B              ;	4/6/24
2024  924B              ;
2025  924B              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2026  924B              ;
2027  924B              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2028  924B              ;
2029  924B
2030  924B              Actualiza_pantalla
2031  924B
2032  924B 3E 02        	ld a,2
2033  924D D3 FE        	out ($fe),a
2034  924F
2035  924F 3A 74 8C     	ld a,(Ctrl_3)
2036  9252 CB 57        	bit 2,a
2037  9254 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2038  9256
2039  9256              Borrando_entidades
2040  9256
2041  9256 2A 6E 8C     	ld hl,(Scanlines_album_SP)
2042  9259 CD C3 91     	call Extrae_address
2043  925C 24           	inc h
2044  925D 25           	dec h
2045  925E 28 05        	jr z,Pintando_entidades
2046  9260 CD FA 96     	call Pinta_Sprites
2047  9263 18 F1        	jr Borrando_entidades
2048  9265
2049  9265              Pintando_entidades
2050  9265
2051  9265 2A 70 8C     	ld hl,(India_SP)
2052  9268 2C           	inc l
2053  9269 CD C3 91     	call Extrae_address
2054  926C 24           	inc h
2055  926D 25           	dec h
2056  926E 28 0E        	jr z,Ejecuta_escudo
2057  9270 1C           	inc e
2058  9271 1C           	inc e
2059  9272 ED 53 70 8C  	ld (India_SP),de
2060  9276 CD C3 91     	call Extrae_address
2061  9279 CD FA 96     	call Pinta_Sprites
2062  927C 18 E7        	jr Pintando_entidades
2063  927E
2064  927E              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2065  927E
2066  927E              Ejecuta_escudo
2067  927E
2068  927E 3A 9D 8C     	ld a,(Shield)
2069  9281 A7           	and a
2070  9282 20 2F        	jr nz,Aplica_Shield
2071  9284
2072  9284              Borrando_Amadeus
2073  9284
2074  9284 21 74 8C     	ld hl,Ctrl_3
2075  9287 CB 6E        	bit 5,(hl)
2076  9289 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2077  928B
2078  928B 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
2079  928E CD C3 91     	call Extrae_address
2080  9291 24           	inc h
2081  9292 25           	dec h
2082  9293 28 03        	jr z,Pintando_Amadeus
2083  9295 CD FA 96     	call Pinta_Sprites
2084  9298
2085  9298              Pintando_Amadeus
2086  9298
2087  9298 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
2088  929B CD C3 91     	call Extrae_address
2089  929E 24           	inc h
2090  929F 25           	dec h
2091  92A0 28 03        	jr z,1F
2092  92A2 CD FA 96     	call Pinta_Sprites
2093  92A5
2094  92A5              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2095  92A5
2096  92A5 21 74 8C     1 ld hl,Ctrl_3
2097  92A8 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2098  92AA CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2099  92AC CB AE        	res 5,(hl)
2100  92AE
2101  92AE 3E 01        	ld a,1												; Borde azul.
2102  92B0 D3 FE        	out ($fe),a
2103  92B2
2104  92B2 C9           	ret
2105  92B3
2106  92B3              Aplica_Shield
2107  92B3
2108  92B3              ;	Bit 1 "1" (Shield_3) Sólo borra.
2109  92B3              ;		  "0"     ""     Borra/Pinta.
2110  92B3              ;	Bit 2    ""  RET.	 No borra, no pinta.
2111  92B3
2112  92B3 21 9F 8C     	ld hl,Shield_3
2113  92B6
2114  92B6 CB 5E        	bit 3,(hl)
2115  92B8 20 DE        	jr nz,Pintando_Amadeus
2116  92BA
2117  92BA CB 56        	bit 2,(hl)
2118  92BC 20 E7        	jr nz,1B
2119  92BE
2120  92BE CB 4E        	bit 1,(hl)
2121  92C0 C4 C7 92     	call nz,Borra_Amadeus_shield
2122  92C3
2123  92C3 28 BF        	jr z,Borrando_Amadeus
2124  92C5 18 DE        	jr 1B
2125  92C7
2126  92C7              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2127  92C7
2128  92C7              Borra_Amadeus_shield
2129  92C7
2130  92C7 3A 74 8C     	ld a,(Ctrl_3)
2131  92CA CB 6F        	bit 5,a
2132  92CC 28 08        	jr z,1F
2133  92CE
2134  92CE 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
2135  92D1 CD C3 91     	call Extrae_address
2136  92D4 18 06        	jr 2F
2137  92D6
2138  92D6 2A 54 8C     1 ld hl,(Album_de_pintado_Amadeus)
2139  92D9 CD C3 91     	call Extrae_address
2140  92DC
2141  92DC CD FA 96     2 call Pinta_Sprites
2142  92DF
2143  92DF AF           	xor a
2144  92E0 3C           	inc a											; Asegura NZ en la salida de la rutina.
2145  92E1
2146  92E1 C9           	ret
2147  92E2
2148  92E2              Pinta_Amadeus_shield
2149  92E2
2150  92E2 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
2151  92E5 CD C3 91     	call Extrae_address
2152  92E8 CD FA 96     	call Pinta_Sprites
2153  92EB
2154  92EB AF           	xor a
2155  92EC 3C           	inc a											; Asegura NZ en la salida de la rutina.
2156  92ED
2157  92ED C9           	ret
2158  92EE
2159  92EE              Borra_Pinta_Amadeus_shield
2160  92EE
2161  92EE CD C7 92     	call Borra_Amadeus_shield
2162  92F1 CD E2 92     	call Pinta_Amadeus_shield
2163  92F4 C9           	ret
2164  92F5
2165  92F5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2166  92F5              ;
2167  92F5              ;	19/6/24
2168  92F5              ;
2169  92F5
2170  92F5              Teclado
2171  92F5
2172  92F5              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2173  92F5
2174  92F5 3E F7        	ld a,$f7												; "5" para disparar.
2175  92F7 DB FE        	in a,($fe)
2176  92F9 E6 10        	and $10
2177  92FB
2178  92FB CC 82 A3     	call z,Genera_disparo_Amadeus
2179  92FE
2180  92FE 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2181  9300 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2182  9302 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2183  9304 CC 4E 9E         call z,Amadeus_a_izquierda
2184  9307
2185  9307 3E F7        	ld a,$f7
2186  9309 DB FE        	in a,($fe)
2187  930B E6 01        	and $01
2188  930D C8           	ret z
2189  930E
2190  930E 3E F7        	ld a,$f7
2191  9310 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2192  9312 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2193  9314 CC 66 9E     	call z,Amadeus_a_derecha
2194  9317
2195  9317 C9           	ret
2196  9318
2197  9318              ; ------------------------------------------------------------------------------------------------------------------------
2198  9318              ;
2199  9318              ;	06/07/24
2200  9318              ;
2201  9318
2202  9318              Genera_explosion
2203  9318
2204  9318 21 86 8C     	ld hl,Clock_explosion
2205  931B 35           	dec (hl)
2206  931C 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2207  931E
2208  931E              Borra_entidad_colisionada
2209  931E
2210  931E CD 97 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2211  9321
2212  9321 DD E5        	push ix
2213  9323 CD 1D 91     	call Cargamos_registros_con_explosion
2214  9326 CD 06 96     	call Genera_datos_de_impresion
2215  9329 DD E1        	pop ix
2216  932B
2217  932B AF           	xor a
2218  932C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2219  932D
2220  932D C9           	ret
2221  932E
2222  932E              Siguiente_frame_explosion
2223  932E
2224  932E 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2225  9330
2226  9330              ; Avanza Frame de explosión.
2227  9330
2228  9330 DD 6E 07     	ld l,(ix+7)
2229  9333 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2230  9336
2231  9336 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2232  9339
2233  9339 79           	ld a,c
2234  933A 95           	sub l
2235  933B 20 41        	jr nz,1F
2236  933D
2237  933D
2238  933D              ; Fín de la entidad !!!!!!!!!!!!!
2239  933D              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2240  933D
2241  933D              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2242  933D              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2243  933D              ; Entidades_en_curso db 0								; Entidades en pantalla.
2244  933D
2245  933D              ; La entidad eliminada, es la última del nivel ?
2246  933D
2247  933D 3A 45 8C     	ld a,(Numero_de_entidades)
2248  9340 A7           	and a
2249  9341 28 30        	jr z,2F
2250  9343
2251  9343              ; Decrementa (Numero_de_entidades)
2252  9343
2253  9343 3D           	dec a
2254  9344 32 45 8C     	ld (Numero_de_entidades),a
2255  9347 21 47 8C     	ld hl,Entidades_en_curso
2256  934A 35           	dec (hl)
2257  934B
2258  934B              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2259  934B              ; IX apunta al 1er .db de la entidad eliminada.
2260  934B
2261  934B 2A 43 8C     	ld hl,(Puntero_indice_master)
2262  934E CD C3 91     	call Extrae_address
2263  9351
2264  9351 DD E5        	push ix
2265  9353 D1           	pop de
2266  9354
2267  9354 01 0C 00     	ld bc,12
2268  9357 ED B0        	ldir
2269  9359
2270  9359              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2271  9359
2272  9359 CD EF 90     	call Obtenemos_puntero_de_impresion
2273  935C
2274  935C DD 6E 05     	ld l,(ix+5)
2275  935F 2C           	inc l
2276  9360 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2277  9363
2278  9363 CD DA 95     	call Genera_coordenadas
2279  9366
2280  9366 ED 4B FE 8B  	ld bc,(Coordenada_X)
2281  936A
2282  936A DD 71 01     	ld (ix+1),c
2283  936D DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2284  9370
2285  9370 AF           	xor a
2286  9371 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2287  9372
2288  9372 C9           	ret
2289  9373
2290  9373              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2291  9373
2292  9373 21 46 8C     2 ld hl,Numero_parcial_de_entidades
2293  9376 35           	dec (hl)
2294  9377 23           	inc hl
2295  9378 35           	dec (hl)
2296  9379
2297  9379 CD 3D 92     	call Limpia_caja_de_entidades
2298  937C 18 A0        	jr Borra_entidad_colisionada
2299  937E
2300  937E 23           1 inc hl
2301  937F 23           	inc hl
2302  9380
2303  9380 DD 75 07     	ld (ix+7),l
2304  9383 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2305  9386
2306  9386 18 96        	jr Borra_entidad_colisionada
2307  9388
2308  9388              ; ----- ----- ----- ----- -----
2309  9388
2310  9388              Genera_explosion_Amadeus
2311  9388
2312  9388 21 87 8C     	ld hl,Clock_explosion_Amadeus
2313  938B 35           	dec (hl)
2314  938C 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2315  938E
2316  938E              Borra_Amadeus_impactado
2317  938E
2318  938E CD 01 8F     	call Change_Amadeus
2319  9391 CD 31 91     	call Cargamos_registros_con_explosion_Amadeus
2320  9394 CD 52 91     	call Genera_datos_de_impresion_Amadeus
2321  9397
2322  9397 21 74 8C     	ld hl,Ctrl_3
2323  939A CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2324  939C
2325  939C AF           	xor a
2326  939D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2327  939E
2328  939E C9           	ret
2329  939F
2330  939F              Siguiente_frame_explosion_Amadeus
2331  939F
2332  939F 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2333  93A1
2334  93A1              ; Avanza Frame de explosión.
2335  93A1
2336  93A1 2A B5 89     	ld hl,(Pamm_Amadeus)
2337  93A4 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2338  93A7
2339  93A7 79           	ld a,c
2340  93A8 95           	sub l
2341  93A9 20 0B        	jr nz,1F
2342  93AB
2343  93AB              ; Fín de Amadeus !!!!!!!!!!!!!
2344  93AB              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2345  93AB
2346  93AB AF           	xor a
2347  93AC 32 B2 89     	ld (Impacto_Amadeus),a
2348  93AF 21 74 8C     	ld hl,Ctrl_3
2349  93B2 CB F6        	set 6,(hl)
2350  93B4
2351  93B4 18 D8        	jr Borra_Amadeus_impactado
2352  93B6
2353  93B6 23           1 inc hl
2354  93B7 23           	inc hl
2355  93B8 22 B5 89     	ld (Pamm_Amadeus),hl
2356  93BB 18 D1        	jr Borra_Amadeus_impactado
2357  93BD
2358  93BD              ; ---------------------------------------------------------------
2359  93BD
2360  93BD              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 93BD              ; ******************************************************************************************************************************************************************************************
   2+ 93BD              ;
   3+ 93BD              ;   21/04/24
   4+ 93BD              ;
   5+ 93BD              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 93BD              ;   (XOR) bit a bit.
   7+ 93BD              ;
   8+ 93BD              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 93BD
  10+ 93BD              Derivando_RND
  11+ 93BD
  12+ 93BD 21 F6 88         ld hl,Numeros_aleatorios
  13+ 93C0
  14+ 93C0 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 93C2 C5               push bc
  16+ 93C3              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 93C3 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 93C6              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 93C6
  20+ 93C6 A7           6 and a                                 ; Carry a "0".
  21+ 93C7 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 93C9 30 02            jr nc,1F
  23+ 93CB
  24+ 93CB CB C1            set 0,c
  25+ 93CD
  26+ 93CD 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 93CE E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 93D0 5F               ld e,a
  29+ 93D1
  30+ 93D1 7A               ld a,d
  31+ 93D2 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 93D4 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 93D6
  34+ 93D6 CB 3F            srl a
  35+ 93D8
  36+ 93D8 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 93D9
  38+ 93D9 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 93DA 28 04            jr z,4F
  40+ 93DC
  41+ 93DC CB FF            set 7,a
  42+ 93DE 18 02            jr 5F
  43+ 93E0
  44+ 93E0 CB BF        4 res 7,a
  45+ 93E2
  46+ 93E2 CB 21        5 sla c
  47+ 93E4 10 E0            djnz 6B
  48+ 93E6
  49+ 93E6 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 93E7
  51+ 93E7 77               ld (hl),a
  52+ 93E8 23               inc hl
  53+ 93E9 C1               pop bc
  54+ 93EA 10 D4            djnz 3B
  55+ 93EC
  56+ 93EC C9               ret
  57+ 93ED
  58+ 93ED
  59+ 93ED
# file closed: RND_Derivando.asm
2361  93ED              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 93ED              ;---------------------------------------------------------------------------------------------------------------
   2+ 93ED              ;
   3+ 93ED              ;   13/11/24
   4+ 93ED
   5+ 93ED              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 93ED
   7+ 93ED              Genera_movimientos_masticados_del_nivel
   8+ 93ED
   9+ 93ED              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 93ED
  11+ 93ED              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 93ED              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 93ED              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 93ED
  15+ 93ED 2D           	dec l
  16+ 93EE 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 93EF 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 93F0 4E           	ld c,(hl)
  19+ 93F1
  20+ 93F1 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 93F2 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 93F3
  23+ 93F3              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 93F3
  25+ 93F3 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 93F4
  27+ 93F4 CD 32 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 93F7
  29+ 93F7              ;	Caja Master inicializada ???
  30+ 93F7
  31+ 93F7 7E           	ld a,(hl)
  32+ 93F8 A7           	and a
  33+ 93F9 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 93FB
  35+ 93FB              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 93FB
  37+ 93FB C1           	pop bc
  38+ 93FC 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 93FD C5           	push bc
  40+ 93FE
  41+ 93FE CD D4 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9401 CD 68 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9404
  44+ 9404 3A FD 8B     	ld a,(Tipo)
  45+ 9407 CD 42 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 940A
  47+ 940A              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 940A
  49+ 940A              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 940A              ;	ld a,(hl)
  51+ 940A              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 940A
  53+ 940A              ;	ld hl,Posicion_inicio
  54+ 940A              ;	ld (hl),a
  55+ 940A
  56+ 940A              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 940A              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 940A
  59+ 940A CD 33 90     	call Construye_movimientos_masticados_entidad
  60+ 940D
  61+ 940D 2A 43 8C     	ld hl,(Puntero_indice_master)
  62+ 9410 CD C3 91     	call Extrae_address
  63+ 9413
  64+ 9413 5D           	ld e,l
  65+ 9414 54           	ld d,h
  66+ 9415
  67+ 9415 CD 95 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9418
  69+ 9418              Movimientos_masticados_construidos
  70+ 9418
  71+ 9418 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9419
  73+ 9419 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 941A 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 941B
  76+ 941B 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 941C 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 941E
  79+ 941E C9           	ret
  80+ 941F
  81+ 941F              ;---------------------------------------------------------------------------------------------------------------
  82+ 941F              ;
  83+ 941F              ;   9/11/24
  84+ 941F              ;
  85+ 941F              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 941F              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 941F              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 941F              ;	_ de la 1ª entidad del Nivel.
  89+ 941F              ;
  90+ 941F              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 941F
  92+ 941F              ;	MODIFICA: HL,DE y A.
  93+ 941F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 941F
  95+ 941F              Inicializa_1er_Nivel
  96+ 941F
  97+ 941F              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 941F
  99+ 941F 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 9422 CD C3 91     	call Extrae_address
 101+ 9425 ED 53 93 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9429
 103+ 9429 7E           	ld a,(hl)
 104+ 942A 32 45 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 942D
 106+ 942D 2C           	inc l
 107+ 942E 22 95 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9431
 109+ 9431 C9           	ret
 110+ 9432
 111+ 9432              ; ----------------------
 112+ 9432              ;
 113+ 9432              ;	13/11/24
 114+ 9432              ;
 115+ 9432
 116+ 9432              Situa_en_Caja_Master
 117+ 9432
 118+ 9432 CD 53 95         call Calcula_salto_en_BC
 119+ 9435 21 58 89         ld hl,Indice_de_cajas_master
 120+ 9438 A7               and a
 121+ 9439 ED 4A            adc hl,bc
 122+ 943B 22 43 8C       	ld (Puntero_indice_master),hl
 123+ 943E CD C3 91     	call Extrae_address
 124+ 9441 C9           	ret
 125+ 9442
 126+ 9442              ; ----------------------
 127+ 9442
 128+ 9442              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9442              ; 	ld bc,4
 130+ 9442              ; 	ldir
 131+ 9442              ; 	ret
 132+ 9442
 133+ 9442 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9443 CD 53 95         call Calcula_salto_en_BC
 135+ 9446 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9449 A7               and a
 137+ 944A ED 4A            adc hl,bc
 138+ 944C CD C3 91         call Extrae_address
 139+ 944F 22 2E 8C         ld (Puntero_indice_mov),hl
 140+ 9452 C9               ret
 141+ 9453
 142+ 9453              ;---------------------------------------------------------------------------------------------------------------
 143+ 9453              ;
 144+ 9453              ;   13/11/24
 145+ 9453              ;
 146+ 9453              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9453
 148+ 9453
 149+ 9453              Prepara_Cajas_de_Entidades
 150+ 9453
 151+ 9453              ; Preparamos los punteros de las cajas de entidades:
 152+ 9453
 153+ 9453 CD AD 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9456              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9456 CD 9E 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9459
 157+ 9459 2A 95 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 945C
 159+ 945C              ; En este punto:
 160+ 945C              ;
 161+ 945C              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 945C              ; B contiene (Numero_parcial_de_entidades).
 163+ 945C
 164+ 945C C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 945D
 166+ 945D 7E           	ld a,(hl)
 167+ 945E
 168+ 945E CD 32 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9461
 170+ 9461 ED 5B 3D 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9465
 172+ 9465 D5           	push de
 173+ 9466 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9468
 175+ 9468 01 0C 00     	ld bc,12
 176+ 946B ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 946D              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 946D
 179+ 946D              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 946D              ;
 181+ 946D              ;
 182+ 946D              ; ------------------------------------------------------ IX
 183+ 946D              ; ------------------------------------------------------ IX
 184+ 946D              ; ------------------------------------------------------ IX
 185+ 946D              ; ------------------------------------------------------ IX
 186+ 946D
 187+ 946D DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 946F
 189+ 946F CD EF 90     	call Obtenemos_puntero_de_impresion
 190+ 9472
 191+ 9472 DD 6E 05     	ld l,(ix+5)
 192+ 9475 2C           	inc l
 193+ 9476 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 9479
 195+ 9479 D5           	push de														; Push (Puntero_objeto).
 196+ 947A E5           	push hl														; Push (Puntero_de_impresion).
 197+ 947B
 198+ 947B CD DA 95     	call Genera_coordenadas
 199+ 947E
 200+ 947E ED 4B FE 8B  	ld bc,(Coordenada_X)
 201+ 9482
 202+ 9482 DD 71 01     	ld (ix+1),c
 203+ 9485 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 9488
 205+ 9488 CD 97 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 948B
 207+ 948B DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 948D D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 948E
 210+ 948E CD 06 96     	call Genera_datos_de_impresion
 211+ 9491
 212+ 9491 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 9493
 214+ 9493              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 9493
 216+ 9493 CD 0C 95     	call Decrementa_Contador_de_mov_masticados
 217+ 9496 CD E9 94     	call Limpiamos_bandeja_DRAW
 218+ 9499 CD 0D 92     	call Incrementa_punteros_de_cajas
 219+ 949C
 220+ 949C              ; Siguiente entidad del Nivel.
 221+ 949C
 222+ 949C 2A 95 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 949F 23           	inc hl 														; _ entidad del Nivel.
 224+ 94A0
 225+ 94A0 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 94A1
 227+ 94A1 10 B9        	djnz 1B
 228+ 94A3
 229+ 94A3 C9           	ret
 230+ 94A4
 231+ 94A4              ; -------------------------------------------------------------------------------------------------------------------
 232+ 94A4              ;
 233+ 94A4              ;	27/5/24
 234+ 94A4              ;
 235+ 94A4              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 94A4              ;
 237+ 94A4
 238+ 94A4              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 94A4              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 94A4
 241+ 94A4              Inicia_Amadeus
 242+ 94A4
 243+ 94A4 21 2A 8A     	ld hl,Definicion_Amadeus
 244+ 94A7 CD 68 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 245+ 94AA
 246+ 94AA
 247+ 94AA              Construye_movimientos_masticados_Amadeus
 248+ 94AA
 249+ 94AA 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 250+ 94AD CD B6 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 251+ 94B0              ;															; _ el (Contador_de_mov_masticados).
 252+ 94B0
 253+ 94B0 18 FE        	jr $
 254+ 94B2
 255+ 94B2 CD C9 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 256+ 94B5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 257+ 94B5
 258+ 94B5              ; Generamos movimientos masticados de Amadeus.
 259+ 94B5
 260+ 94B5 06 79        	ld b,121												; $0079, 121d.
 261+ 94B7
 262+ 94B7 C5           1 push bc
 263+ 94B8 CD 1D 98     	call Draw
 264+ 94BB CD 9B 90     	call Guarda_movimiento_masticado
 265+ 94BE
 266+ 94BE CD 87 9B     	call Mov_right
 267+ 94C1 CD 87 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 268+ 94C4
 269+ 94C4 C1           	pop bc
 270+ 94C5 10 F0        	djnz 1B
 271+ 94C7
 272+ 94C7              ; Todos los movimientos masticados de Amadeus se han creado.
 273+ 94C7
 274+ 94C7              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 275+ 94C7              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 276+ 94C7
 277+ 94C7 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 278+ 94CA 01 08 00     	ld bc,8
 279+ 94CD A7           	and a
 280+ 94CE ED 42        	sbc hl,bc
 281+ 94D0 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 94D3
 283+ 94D3 C9           	ret
 284+ 94D4
 285+ 94D4              ; ---------------------------------------------------------------------
 286+ 94D4              ;
 287+ 94D4              ;	10/02/24
 288+ 94D4              ;
 289+ 94D4              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 290+ 94D4              ;
 291+ 94D4              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 292+ 94D4
 293+ 94D4              Definicion_segun_tipo
 294+ 94D4
 295+ 94D4 CD 53 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 296+ 94D7 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 297+ 94DA CD 5E 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 298+ 94DD C9           	ret
 299+ 94DE
 300+ 94DE              ; ---------------------------------------------------------------------
 301+ 94DE              ;
 302+ 94DE              ;	6/7/24
 303+ 94DE
 304+ 94DE
 305+ 94DE              Store_Restore_cajas
 306+ 94DE
 307+ 94DE ED 5B 3D 8C  	ld de,(Puntero_store_caja)
 308+ 94E2 CD 95 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 309+ 94E5 CD 0D 92     	call Incrementa_punteros_de_cajas
 310+ 94E8 C9           	ret
 311+ 94E9
 312+ 94E9              ; ---------------------------------------------------------------------
 313+ 94E9              ;
 314+ 94E9              ;	23/6/24
 315+ 94E9              ;
 316+ 94E9              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 317+ 94E9              ;
 318+ 94E9              ;	MODIFY: HL
 319+ 94E9
 320+ 94E9              Limpiamos_bandeja_DRAW
 321+ 94E9
 322+ 94E9 ED 73 4C 8C  	ld (Stack),sp
 323+ 94ED 31 22 8C     	ld sp,Vel_left
 324+ 94F0
 325+ 94F0 AF           	xor a
 326+ 94F1 67           	ld h,a
 327+ 94F2 6F           	ld l,a
 328+ 94F3
 329+ 94F3 E5           	push hl
 330+ 94F4 E5           	push hl
 331+ 94F5 E5           	push hl
 332+ 94F6 E5           	push hl
 333+ 94F7 E5           	push hl
 334+ 94F8 E5           	push hl
 335+ 94F9 E5           	push hl
 336+ 94FA E5           	push hl
 337+ 94FB E5           	push hl
 338+ 94FC E5           	push hl
 339+ 94FD E5           	push hl
 340+ 94FE E5           	push hl
 341+ 94FF E5           	push hl
 342+ 9500 E5           	push hl
 343+ 9501 E5           	push hl
 344+ 9502 E5           	push hl
 345+ 9503 E5           	push hl
 346+ 9504 E5           	push hl
 347+ 9505
 348+ 9505 33           	inc sp
 349+ 9506
 350+ 9506 E5           	push hl
 351+ 9507 ED 7B 4C 8C  	ld sp,(Stack)
 352+ 950B
 353+ 950B C9           	ret
 354+ 950C
 355+ 950C              ; ---------------------------------------------------------------------
 356+ 950C              ;
 357+ 950C              ;	23/11/24
 358+ 950C              ;
 359+ 950C              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 360+ 950C
 361+ 950C              Decrementa_Contador_de_mov_masticados
 362+ 950C
 363+ 950C DD 6E 09     	ld l,(ix+9)
 364+ 950F DD 66 0A     	ld h,(ix+10)
 365+ 9512
 366+ 9512 2B           	dec hl
 367+ 9513
 368+ 9513 DD 75 09     	ld (ix+9),l
 369+ 9516 DD 74 0A     	ld (ix+10),h
 370+ 9519
 371+ 9519 C9           	ret
 372+ 951A
 373+ 951A              ; ---------------------------------------------------------------------
 374+ 951A              ;
 375+ 951A              ;	24/11/24
 376+ 951A
 377+ 951A              Reinicia_entidad_maliciosa
 378+ 951A
 379+ 951A              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 380+ 951A
 381+ 951A CD E5 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 382+ 951D CD F2 9F     	call Transfiere_datos_de_contadores
 383+ 9520
 384+ 9520              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 385+ 9520
 386+ 9520 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 387+ 9523 CD D4 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 388+ 9526
 389+ 9526 7D           	ld a,l
 390+ 9527 C6 0B        	add 11
 391+ 9529 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 392+ 952A
 393+ 952A CD C3 91     	call Extrae_address
 394+ 952D
 395+ 952D DD 75 07     	ld (ix+7),l
 396+ 9530 DD 74 08     	ld (ix+8),h
 397+ 9533
 398+ 9533 CD EF 90     	call Obtenemos_puntero_de_impresion
 399+ 9536
 400+ 9536              ; Incrementa (Contador_de_vueltas)x2.
 401+ 9536              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 402+ 9536
 403+ 9536              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 404+ 9536              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 405+ 9536              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 406+ 9536              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 407+ 9536              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 408+ 9536
 409+ 9536 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 410+ 953A
 411+ 953A DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 412+ 953D CB 2F        	sra a
 413+ 953F CB 2F        	sra a
 414+ 9541
 415+ 9541 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 416+ 9544
 417+ 9544 3E 40        	ld a,$40
 418+ 9546 DD BE 03     	cp (ix+3)
 419+ 9549 C0           	ret nz
 420+ 954A
 421+ 954A              ; Límitador.
 422+ 954A
 423+ 954A              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 424+ 954A
 425+ 954A DD CB 03 2E  	sra (ix+3)
 426+ 954E DD CB 0B 2E  	sra (ix+11)
 427+ 9552
 428+ 9552 C9           	ret
 429+ 9553
 430+ 9553              ;	------------------------------------------------------------------------------------
 431+ 9553              ;
 432+ 9553              ;	09/11/24
 433+ 9553              ;
 434+ 9553              ;	INPUTS:	A contiene el (Tipo) de entidad.
 435+ 9553              ;
 436+ 9553              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 437+ 9553              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 438+ 9553
 439+ 9553 A7           Calcula_salto_en_BC and a
 440+ 9554 28 04        	jr z,1F
 441+ 9556 CB 27        	sla a
 442+ 9558 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 443+ 955A 4F           1 ld c,a
 444+ 955B 06 00        	ld b,0
 445+ 955D C9           	ret
 446+ 955E
 447+ 955E              ; ------------------------------------------------------------------
 448+ 955E              ;
 449+ 955E              ;	19/1/24
 450+ 955E              ;
 451+ 955E              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 452+ 955E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 453+ 955E
 454+ 955E A7           Situa_en_datos_de_definicion and a
 455+ 955F ED 4A        	adc hl,bc
 456+ 9561 CD C3 91     	call Extrae_address
 457+ 9564 22 4A 8C         ld (Datos_de_entidad),hl
 458+ 9567 C9           	ret
 459+ 9568
 460+ 9568              ; ----------------------------------------------------------------------------------------------------------
 461+ 9568              ;
 462+ 9568              ;	24/6/24
 463+ 9568              ;
 464+ 9568              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 465+ 9568              ;	_ de entidad.
 466+ 9568              ;
 467+ 9568              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 468+ 9568              ;
 469+ 9568              ;
 470+ 9568              ;	MODIFICA: HL,DE y BC
 471+ 9568
 472+ 9568
 473+ 9568              Definicion_de_entidad_a_bandeja_DRAW
 474+ 9568
 475+ 9568 11 FD 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 476+ 956B 7E           	ld a,(hl) 									; Volcamos Tipo.
 477+ 956C 12           	ld (de),a
 478+ 956D 23           	inc hl
 479+ 956E              ;
 480+ 956E 11 0B 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 481+ 9571 01 02 00     	ld bc,2
 482+ 9574 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 483+ 9576              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 484+ 9576 11 00 8C     	ld de,Contador_de_vueltas
 485+ 9579 7E           	ld a,(hl)
 486+ 957A 12           	ld (de),a
 487+ 957B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 488+ 957C
 489+ 957C 11 12 8C     	ld de,Indice_Sprite_der
 490+ 957F 01 04 00     	ld bc,4
 491+ 9582 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 492+ 9584
 493+ 9584 11 1A 8C     	ld de,Posicion_inicio
 494+ 9587 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 495+ 958A ED B0        	ldir 									; Vuelco (Frames_explosion).
 496+ 958C
 497+ 958C 11 04 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 498+ 958F 01 02 00     	ld bc,2
 499+ 9592 ED B0        	ldir
 500+ 9594
 501+ 9594 C9           	ret
 502+ 9595
 503+ 9595              ; ----------------------------------------------------------------------------------------------------------
 504+ 9595              ;
 505+ 9595              ;	1/8/24
 506+ 9595              ;
 507+ 9595
 508+ 9595              Parametros_de_bandeja_DRAW_a_caja
 509+ 9595
 510+ 9595 21 FD 8B     	ld hl,Bandeja_DRAW
 511+ 9598 01 0C 00     	ld bc,12
 512+ 959B ED B0        	ldir
 513+ 959D C9           	ret
 514+ 959E
 515+ 959E              ;---------------------------------------------------------------------------------------------------------------
 516+ 959E              ;
 517+ 959E              ;	13/11/24
 518+ 959E              ;
 519+ 959E              ;	INICIALIZA (Numero_parcial_de_entidades).
 520+ 959E              ;
 521+ 959E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 522+ 959E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 523+ 959E
 524+ 959E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 525+ 959E              ;			- Actualiza (Numero_de_entidades).
 526+ 959E
 527+ 959E              ;	MODIFICA: A y B.
 528+ 959E
 529+ 959E
 530+ 959E              Inicializa_Numero_parcial_de_entidades
 531+ 959E
 532+ 959E 3A 45 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 533+ 95A1 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 534+ 95A3 38 0E        	jr c,1F
 535+ 95A5 28 0C        	jr z,1F
 536+ 95A7
 537+ 95A7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 538+ 95A7              ; Actualizamos variables.
 539+ 95A7
 540+ 95A7 D6 06        	sub 6
 541+ 95A9 32 45 8C     	ld (Numero_de_entidades),a
 542+ 95AC 3E 06        	ld a,6
 543+ 95AE 32 46 8C     	ld (Numero_parcial_de_entidades),a
 544+ 95B1 47           	ld b,a
 545+ 95B2 C9           	ret
 546+ 95B3
 547+ 95B3              ; El nº total de entidades no supera el nº de cajas de entidades.
 548+ 95B3              ; (Numero_de_entidades)="0".
 549+ 95B3
 550+ 95B3 32 46 8C     1 ld (Numero_parcial_de_entidades),a
 551+ 95B6 47           	ld b,a
 552+ 95B7 AF           	xor a
 553+ 95B8 32 45 8C     	ld (Numero_de_entidades),a
 554+ 95BB C9           	ret
 555+ 95BC
# file closed: Rutinas_de_inicio_y_niveles.asm
2362  95BC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 95BC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 95BC              ;
   3+ 95BC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 95BC              ;
   5+ 95BC              ; *****************************************************************************************************************************************************************************************
   6+ 95BC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 95BC
   8+ 95BC 7C           calcula_tercio ld a,h
   9+ 95BD E6 18        	and $18
  10+ 95BF CB 2F        	sra a
  11+ 95C1 CB 2F        	sra a
  12+ 95C3 CB 2F        	sra a
  13+ 95C5 C9           	ret
  14+ 95C6
# file closed: calcula_tercio.asm
2363  95C6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 95C6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 95C6              ;
   3+ 95C6              ;
   4+ 95C6              ;	CLS.
   5+ 95C6              ;
   6+ 95C6              ;	Limpia la pantalla y define sus atributos.
   7+ 95C6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 95C6              ;
   9+ 95C6              ;	COLORES: 0 ..... NEGRO
  10+ 95C6              ;    		 1 ..... AZUL
  11+ 95C6              ; 			 2 ..... ROJO
  12+ 95C6              ;			 3 ..... MAGENTA
  13+ 95C6              ; 			 4 ..... VERDE
  14+ 95C6              ; 			 5 ..... CIAN
  15+ 95C6              ;			 6 ..... AMARILLO
  16+ 95C6              ; 			 7 ..... BLANCO
  17+ 95C6              ;
  18+ 95C6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 95C6              ;
  20+ 95C6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 95C6
  22+ 95C6
  23+ 95C6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 95C9 11 01 40     	LD DE,$4001
  25+ 95CC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 95CF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 95D1 ED B0        	LDIR
  28+ 95D3 01 FF 02     	LD BC,767
  29+ 95D6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 95D7 ED B0        	LDIR
  31+ 95D9 C9           	ret
  32+ 95DA
# file closed: Cls.asm
2364  95DA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95DA              ; ------------------------------------------------------------------------
   2+ 95DA              ;
   3+ 95DA              ;	30/1/24
   4+ 95DA              ;
   5+ 95DA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95DA              ;	Fila superior "0", Columna izquierda "0".
   7+ 95DA              ;
   8+ 95DA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95DA              ;
  10+ 95DA              ;	Modifica: A,BC y DE.
  11+ 95DA
  12+ 95DA              Genera_coordenadas
  13+ 95DA
  14+ 95DA 7D           	ld a,l
  15+ 95DB E6 1F        	and $1f
  16+ 95DD
  17+ 95DD 32 FE 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 95E0
  19+ 95E0 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 95E1 FE 40        	cp $40
  21+ 95E3 38 1C        	jr c,4F
  22+ 95E5
  23+ 95E5 CD BC 95     	call calcula_tercio
  24+ 95E8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 95E9
  26+ 95E9 1E 00        	ld e,0
  27+ 95EB 7D           	ld a,l
  28+ 95EC E6 E0        	and $e0
  29+ 95EE 28 01        	jr z,1F
  30+ 95F0 04           	inc b
  31+ 95F1
  32+ 95F1 04           1 inc b
  33+ 95F2 05           	dec b
  34+ 95F3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 95F5              ;														; _ , salimos.
  36+ 95F5 1C           3 inc e
  37+ 95F6 D6 20        	sub 32
  38+ 95F8 20 FB        	jr nz,3B
  39+ 95FA 10 F5        	djnz 1B
  40+ 95FC
  41+ 95FC 7B           2 ld a,e
  42+ 95FD 32 FF 8B     	ld (Coordenada_y),a
  43+ 9600 C9           	ret
  44+ 9601
  45+ 9601 AF           4 xor a
  46+ 9602 32 FF 8B     	ld (Coordenada_y),a
  47+ 9605 C9           	ret
  48+ 9606
# file closed: Genera_coordenadas.asm
2365  9606              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9606              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9606              ;
   3+ 9606              ;	20/09/24
   4+ 9606              ;
   5+ 9606              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9606              ;   DE contiene Puntero_objeto.
   7+ 9606              ;   IX contiene el Puntero de impresión.
   8+ 9606
   9+ 9606              Genera_datos_de_impresion
  10+ 9606
  11+ 9606 ED 73 4C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 960A
  13+ 960A 2A 6E 8C         ld hl,(Scanlines_album_SP)
  14+ 960D
  15+ 960D 3E 05            ld a,5
  16+ 960F 85               add l
  17+ 9610 6F               ld l,a
  18+ 9611
  19+ 9611 F9               ld sp,hl
  20+ 9612 22 6E 8C         ld (Scanlines_album_SP),hl
  21+ 9615
  22+ 9615 21 00 00         ld hl,0
  23+ 9618
  24+ 9618 DD E5            push ix
  25+ 961A 3B               dec sp
  26+ 961B ED 7A            adc hl,sp
  27+ 961D D5               push de
  28+ 961E
  29+ 961E              ; Recuperamos SP.
  30+ 961E
  31+ 961E ED 7B 4C 8C      ld sp,(Stack)
  32+ 9622
  33+ 9622 E5               push hl
  34+ 9623 F1               pop af
  35+ 9624 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9625
  37+ 9625              ; Tenemos el encabezado listo.
  38+ 9625              ; Preparamos registros para generar los scanlines.
  39+ 9625
  40+ 9625 DD E5            push ix
  41+ 9627 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9628
  43+ 9628 ED 5B 6E 8C      ld de,(Scanlines_album_SP)
  44+ 962C
  45+ 962C              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 962C              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 962C
  48+ 962C 7C               ld a,h
  49+ 962D FE 50            cp $50
  50+ 962F 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9631
  52+ 9631 20 05            jr nz,2F
  53+ 9633
  54+ 9633 7D               ld a,l
  55+ 9634 FE E0            cp $e0
  56+ 9636 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9638
  58+ 9638 7D           2 ld a,l
  59+ 9639 FE C0            cp $c0
  60+ 963B D2 D1 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 963E
  62+ 963E              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 963E
  64+ 963E CD CF 9A         call NextScan
  65+ 9641 EB               ex de,hl
  66+ 9642
  67+ 9642 73               ld (hl),e
  68+ 9643 23               inc hl
  69+ 9644 72               ld (hl),d
  70+ 9645 23               inc hl
  71+ 9646
  72+ 9646 EB               ex de,hl
  73+ 9647
  74+ 9647 CD CF 9A         call NextScan
  75+ 964A EB               ex de,hl
  76+ 964B
  77+ 964B 73               ld (hl),e
  78+ 964C 23               inc hl
  79+ 964D 72               ld (hl),d
  80+ 964E 23               inc hl
  81+ 964F
  82+ 964F EB               ex de,hl
  83+ 9650
  84+ 9650 CD CF 9A         call NextScan
  85+ 9653 EB               ex de,hl
  86+ 9654
  87+ 9654 73               ld (hl),e
  88+ 9655 23               inc hl
  89+ 9656 72               ld (hl),d
  90+ 9657 23               inc hl
  91+ 9658
  92+ 9658 EB               ex de,hl
  93+ 9659
  94+ 9659 CD CF 9A         call NextScan
  95+ 965C EB               ex de,hl
  96+ 965D
  97+ 965D 73               ld (hl),e
  98+ 965E 23               inc hl
  99+ 965F 72               ld (hl),d
 100+ 9660 23               inc hl
 101+ 9661
 102+ 9661 EB               ex de,hl
 103+ 9662
 104+ 9662 CD CF 9A         call NextScan
 105+ 9665 EB               ex de,hl
 106+ 9666
 107+ 9666 73               ld (hl),e
 108+ 9667 23               inc hl
 109+ 9668 72               ld (hl),d
 110+ 9669 23               inc hl
 111+ 966A
 112+ 966A EB               ex de,hl
 113+ 966B
 114+ 966B CD CF 9A         call NextScan
 115+ 966E EB               ex de,hl
 116+ 966F
 117+ 966F 73               ld (hl),e
 118+ 9670 23               inc hl
 119+ 9671 72               ld (hl),d
 120+ 9672 23               inc hl
 121+ 9673
 122+ 9673 EB               ex de,hl
 123+ 9674
 124+ 9674 CD CF 9A         call NextScan
 125+ 9677 EB               ex de,hl
 126+ 9678
 127+ 9678 73               ld (hl),e
 128+ 9679 23               inc hl
 129+ 967A 72               ld (hl),d
 130+ 967B 23               inc hl
 131+ 967C
 132+ 967C EB               ex de,hl
 133+ 967D
 134+ 967D CD CF 9A         call NextScan
 135+ 9680 EB               ex de,hl
 136+ 9681
 137+ 9681 73               ld (hl),e
 138+ 9682 23               inc hl
 139+ 9683 72               ld (hl),d
 140+ 9684 23               inc hl
 141+ 9685
 142+ 9685 EB               ex de,hl
 143+ 9686
 144+ 9686 CD CF 9A         call NextScan
 145+ 9689 EB               ex de,hl
 146+ 968A
 147+ 968A 73               ld (hl),e
 148+ 968B 23               inc hl
 149+ 968C 72               ld (hl),d
 150+ 968D 23               inc hl
 151+ 968E
 152+ 968E EB               ex de,hl
 153+ 968F
 154+ 968F CD CF 9A         call NextScan
 155+ 9692 EB               ex de,hl
 156+ 9693
 157+ 9693 73               ld (hl),e
 158+ 9694 23               inc hl
 159+ 9695 72               ld (hl),d
 160+ 9696 23               inc hl
 161+ 9697
 162+ 9697 EB               ex de,hl
 163+ 9698
 164+ 9698 CD CF 9A         call NextScan
 165+ 969B EB               ex de,hl
 166+ 969C
 167+ 969C 73               ld (hl),e
 168+ 969D 23               inc hl
 169+ 969E 72               ld (hl),d
 170+ 969F 23               inc hl
 171+ 96A0
 172+ 96A0 EB               ex de,hl
 173+ 96A1
 174+ 96A1 CD CF 9A         call NextScan
 175+ 96A4 EB               ex de,hl
 176+ 96A5
 177+ 96A5 73               ld (hl),e
 178+ 96A6 23               inc hl
 179+ 96A7 72               ld (hl),d
 180+ 96A8 23               inc hl
 181+ 96A9
 182+ 96A9 EB               ex de,hl
 183+ 96AA
 184+ 96AA CD CF 9A         call NextScan
 185+ 96AD EB               ex de,hl
 186+ 96AE
 187+ 96AE 73               ld (hl),e
 188+ 96AF 23               inc hl
 189+ 96B0 72               ld (hl),d
 190+ 96B1 23               inc hl
 191+ 96B2
 192+ 96B2 EB               ex de,hl
 193+ 96B3
 194+ 96B3 CD CF 9A         call NextScan
 195+ 96B6 EB               ex de,hl
 196+ 96B7
 197+ 96B7 73               ld (hl),e
 198+ 96B8 23               inc hl
 199+ 96B9 72               ld (hl),d
 200+ 96BA 23               inc hl
 201+ 96BB
 202+ 96BB EB               ex de,hl
 203+ 96BC
 204+ 96BC CD CF 9A         call NextScan
 205+ 96BF EB               ex de,hl
 206+ 96C0
 207+ 96C0              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 96C0              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 96C0              ;   _ generar sus scanlines.
 210+ 96C0
 211+ 96C0              ;    ld (Puntero_de_impresion_disparo),de
 212+ 96C0
 213+ 96C0 73               ld (hl),e
 214+ 96C1 23               inc hl
 215+ 96C2 72               ld (hl),d
 216+ 96C3 23               inc hl
 217+ 96C4
 218+ 96C4              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 96C4
 220+ 96C4 22 6E 8C         ld (Scanlines_album_SP),hl
 221+ 96C7
 222+ 96C7 EB               ex de,hl
 223+ 96C8
 224+ 96C8              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 96C8
 226+ 96C8              ;    call NextScan
 227+ 96C8              ;    call NextScan
 228+ 96C8
 229+ 96C8 22 79 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 96CB
 231+ 96CB              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 96CB
 233+ 96CB 08               ex af,af
 234+ 96CC
 235+ 96CC F5               push af
 236+ 96CD E1               pop hl
 237+ 96CE
 238+ 96CE 36 10            ld (hl),16
 239+ 96D0
 240+ 96D0 C9               ret
 241+ 96D1
 242+ 96D1              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 96D1
 244+ 96D1              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 96D1
 246+ 96D1 3E 57            ld a,$57
 247+ 96D3 94               sub h
 248+ 96D4 47               ld b,a
 249+ 96D5
 250+ 96D5 3E DF            ld a,$df
 251+ 96D7 BD               cp l
 252+ 96D8 38 04            jr c,1F
 253+ 96DA
 254+ 96DA 3E 08            ld a,8
 255+ 96DC 80               add b
 256+ 96DD 47               ld b,a
 257+ 96DE
 258+ 96DE              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 96DE              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 96DE
 261+ 96DE 48           1 ld c,b
 262+ 96DF 0C               inc c
 263+ 96E0
 264+ 96E0 04               inc b
 265+ 96E1 05               dec b
 266+ 96E2 20 02            jr nz,3F
 267+ 96E4
 268+ 96E4 18 0B            jr 6F
 269+ 96E6
 270+ 96E6 CD CF 9A     3 call NextScan
 271+ 96E9 EB               ex de,hl
 272+ 96EA
 273+ 96EA 73               ld (hl),e
 274+ 96EB 23               inc hl
 275+ 96EC 72               ld (hl),d
 276+ 96ED 23               inc hl
 277+ 96EE
 278+ 96EE EB               ex de,hl
 279+ 96EF 10 F5            djnz 3B
 280+ 96F1
 281+ 96F1 ED 53 6E 8C  6 ld (Scanlines_album_SP),de
 282+ 96F5
 283+ 96F5 08           5 ex af,af
 284+ 96F6 F5               push af
 285+ 96F7 E1               pop hl
 286+ 96F8
 287+ 96F8 71               ld (hl),c
 288+ 96F9
 289+ 96F9 C9               ret
 290+ 96FA
# file closed: Genera_datos_de_impresion.asm
2366  96FA              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 96FA              ; -----------------------------------------------------------------------------
   2+ 96FA              ;
   3+ 96FA              ;   11/03/24
   4+ 96FA              ;
   5+ 96FA
   6+ 96FA              Pinta_Sprites
   7+ 96FA
   8+ 96FA              ;    ld hl,(Scanlines_album_SP)
   9+ 96FA              ;    call Extrae_address
  10+ 96FA
  11+ 96FA              ;    inc h
  12+ 96FA              ;    dec h
  13+ 96FA              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 96FA
  15+ 96FA ED 73 4C 8C      ld (Stack),sp
  16+ 96FE
  17+ 96FE EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 96FF              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 96FF 2C               inc l
  20+ 9700 2C               inc l
  21+ 9701
  22+ 9701 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9702
  24+ 9702 2C               inc l
  25+ 9703 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9704
  27+ 9704              ;   Seleccionamos rutina de impresión:
  28+ 9704
  29+ 9704 3E 10            ld a,16
  30+ 9706 B8               cp b
  31+ 9707 C2 03 98         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 970A
  33+ 970A              ;   Rutinas:
  34+ 970A
  35+ 970A              Pinta_rapido    ;   1520 t/states.
  36+ 970A
  37+ 970A E1               pop hl
  38+ 970B
  39+ 970B 1A               ld a,(de)
  40+ 970C AE               xor (hl)
  41+ 970D 77               ld (hl),a
  42+ 970E 2C               inc l
  43+ 970F 1C               inc e
  44+ 9710 1A               ld a,(de)
  45+ 9711 AE               xor (hl)
  46+ 9712 77               ld (hl),a
  47+ 9713 2C               inc l
  48+ 9714 1C               inc e
  49+ 9715 1A               ld a,(de)
  50+ 9716 AE               xor (hl)
  51+ 9717 77               ld (hl),a
  52+ 9718 13               inc de
  53+ 9719
  54+ 9719 E1               pop hl
  55+ 971A
  56+ 971A 1A               ld a,(de)
  57+ 971B AE               xor (hl)
  58+ 971C 77               ld (hl),a
  59+ 971D 2C               inc l
  60+ 971E 1C               inc e
  61+ 971F 1A               ld a,(de)
  62+ 9720 AE               xor (hl)
  63+ 9721 77               ld (hl),a
  64+ 9722 2C               inc l
  65+ 9723 1C               inc e
  66+ 9724 1A               ld a,(de)
  67+ 9725 AE               xor (hl)
  68+ 9726 77               ld (hl),a
  69+ 9727 13               inc de
  70+ 9728
  71+ 9728 E1               pop hl
  72+ 9729
  73+ 9729 1A               ld a,(de)
  74+ 972A AE               xor (hl)
  75+ 972B 77               ld (hl),a
  76+ 972C 2C               inc l
  77+ 972D 1C               inc e
  78+ 972E 1A               ld a,(de)
  79+ 972F AE               xor (hl)
  80+ 9730 77               ld (hl),a
  81+ 9731 2C               inc l
  82+ 9732 1C               inc e
  83+ 9733 1A               ld a,(de)
  84+ 9734 AE               xor (hl)
  85+ 9735 77               ld (hl),a
  86+ 9736 13               inc de
  87+ 9737
  88+ 9737 E1               pop hl
  89+ 9738
  90+ 9738 1A               ld a,(de)
  91+ 9739 AE               xor (hl)
  92+ 973A 77               ld (hl),a
  93+ 973B 2C               inc l
  94+ 973C 1C               inc e
  95+ 973D 1A               ld a,(de)
  96+ 973E AE               xor (hl)
  97+ 973F 77               ld (hl),a
  98+ 9740 2C               inc l
  99+ 9741 1C               inc e
 100+ 9742 1A               ld a,(de)
 101+ 9743 AE               xor (hl)
 102+ 9744 77               ld (hl),a
 103+ 9745 13               inc de
 104+ 9746
 105+ 9746 E1               pop hl
 106+ 9747
 107+ 9747 1A               ld a,(de)
 108+ 9748 AE               xor (hl)
 109+ 9749 77               ld (hl),a
 110+ 974A 2C               inc l
 111+ 974B 1C               inc e
 112+ 974C 1A               ld a,(de)
 113+ 974D AE               xor (hl)
 114+ 974E 77               ld (hl),a
 115+ 974F 2C               inc l
 116+ 9750 1C               inc e
 117+ 9751 1A               ld a,(de)
 118+ 9752 AE               xor (hl)
 119+ 9753 77               ld (hl),a
 120+ 9754 13               inc de
 121+ 9755
 122+ 9755 E1               pop hl
 123+ 9756
 124+ 9756 1A               ld a,(de)
 125+ 9757 AE               xor (hl)
 126+ 9758 77               ld (hl),a
 127+ 9759 2C               inc l
 128+ 975A 1C               inc e
 129+ 975B 1A               ld a,(de)
 130+ 975C AE               xor (hl)
 131+ 975D 77               ld (hl),a
 132+ 975E 2C               inc l
 133+ 975F 1C               inc e
 134+ 9760 1A               ld a,(de)
 135+ 9761 AE               xor (hl)
 136+ 9762 77               ld (hl),a
 137+ 9763 13               inc de
 138+ 9764
 139+ 9764 E1               pop hl
 140+ 9765
 141+ 9765 1A               ld a,(de)
 142+ 9766 AE               xor (hl)
 143+ 9767 77               ld (hl),a
 144+ 9768 2C               inc l
 145+ 9769 1C               inc e
 146+ 976A 1A               ld a,(de)
 147+ 976B AE               xor (hl)
 148+ 976C 77               ld (hl),a
 149+ 976D 2C               inc l
 150+ 976E 1C               inc e
 151+ 976F 1A               ld a,(de)
 152+ 9770 AE               xor (hl)
 153+ 9771 77               ld (hl),a
 154+ 9772 13               inc de
 155+ 9773
 156+ 9773 E1               pop hl
 157+ 9774
 158+ 9774 1A               ld a,(de)
 159+ 9775 AE               xor (hl)
 160+ 9776 77               ld (hl),a
 161+ 9777 2C               inc l
 162+ 9778 1C               inc e
 163+ 9779 1A               ld a,(de)
 164+ 977A AE               xor (hl)
 165+ 977B 77               ld (hl),a
 166+ 977C 2C               inc l
 167+ 977D 1C               inc e
 168+ 977E 1A               ld a,(de)
 169+ 977F AE               xor (hl)
 170+ 9780 77               ld (hl),a
 171+ 9781 13               inc de
 172+ 9782
 173+ 9782 E1               pop hl
 174+ 9783
 175+ 9783 1A               ld a,(de)
 176+ 9784 AE               xor (hl)
 177+ 9785 77               ld (hl),a
 178+ 9786 2C               inc l
 179+ 9787 1C               inc e
 180+ 9788 1A               ld a,(de)
 181+ 9789 AE               xor (hl)
 182+ 978A 77               ld (hl),a
 183+ 978B 2C               inc l
 184+ 978C 1C               inc e
 185+ 978D 1A               ld a,(de)
 186+ 978E AE               xor (hl)
 187+ 978F 77               ld (hl),a
 188+ 9790 13               inc de
 189+ 9791
 190+ 9791 E1               pop hl
 191+ 9792
 192+ 9792 1A               ld a,(de)
 193+ 9793 AE               xor (hl)
 194+ 9794 77               ld (hl),a
 195+ 9795 2C               inc l
 196+ 9796 1C               inc e
 197+ 9797 1A               ld a,(de)
 198+ 9798 AE               xor (hl)
 199+ 9799 77               ld (hl),a
 200+ 979A 2C               inc l
 201+ 979B 1C               inc e
 202+ 979C 1A               ld a,(de)
 203+ 979D AE               xor (hl)
 204+ 979E 77               ld (hl),a
 205+ 979F 13               inc de
 206+ 97A0
 207+ 97A0 E1               pop hl
 208+ 97A1
 209+ 97A1 1A               ld a,(de)
 210+ 97A2 AE               xor (hl)
 211+ 97A3 77               ld (hl),a
 212+ 97A4 2C               inc l
 213+ 97A5 1C               inc e
 214+ 97A6 1A               ld a,(de)
 215+ 97A7 AE               xor (hl)
 216+ 97A8 77               ld (hl),a
 217+ 97A9 2C               inc l
 218+ 97AA 1C               inc e
 219+ 97AB 1A               ld a,(de)
 220+ 97AC AE               xor (hl)
 221+ 97AD 77               ld (hl),a
 222+ 97AE 13               inc de
 223+ 97AF
 224+ 97AF E1               pop hl
 225+ 97B0
 226+ 97B0 1A               ld a,(de)
 227+ 97B1 AE               xor (hl)
 228+ 97B2 77               ld (hl),a
 229+ 97B3 2C               inc l
 230+ 97B4 1C               inc e
 231+ 97B5 1A               ld a,(de)
 232+ 97B6 AE               xor (hl)
 233+ 97B7 77               ld (hl),a
 234+ 97B8 2C               inc l
 235+ 97B9 1C               inc e
 236+ 97BA 1A               ld a,(de)
 237+ 97BB AE               xor (hl)
 238+ 97BC 77               ld (hl),a
 239+ 97BD 13               inc de
 240+ 97BE
 241+ 97BE E1               pop hl
 242+ 97BF
 243+ 97BF 1A               ld a,(de)
 244+ 97C0 AE               xor (hl)
 245+ 97C1 77               ld (hl),a
 246+ 97C2 2C               inc l
 247+ 97C3 1C               inc e
 248+ 97C4 1A               ld a,(de)
 249+ 97C5 AE               xor (hl)
 250+ 97C6 77               ld (hl),a
 251+ 97C7 2C               inc l
 252+ 97C8 1C               inc e
 253+ 97C9 1A               ld a,(de)
 254+ 97CA AE               xor (hl)
 255+ 97CB 77               ld (hl),a
 256+ 97CC 13               inc de
 257+ 97CD
 258+ 97CD E1               pop hl
 259+ 97CE
 260+ 97CE 1A               ld a,(de)
 261+ 97CF AE               xor (hl)
 262+ 97D0 77               ld (hl),a
 263+ 97D1 2C               inc l
 264+ 97D2 1C               inc e
 265+ 97D3 1A               ld a,(de)
 266+ 97D4 AE               xor (hl)
 267+ 97D5 77               ld (hl),a
 268+ 97D6 2C               inc l
 269+ 97D7 1C               inc e
 270+ 97D8 1A               ld a,(de)
 271+ 97D9 AE               xor (hl)
 272+ 97DA 77               ld (hl),a
 273+ 97DB 13               inc de
 274+ 97DC
 275+ 97DC E1               pop hl
 276+ 97DD
 277+ 97DD 1A               ld a,(de)
 278+ 97DE AE               xor (hl)
 279+ 97DF 77               ld (hl),a
 280+ 97E0 2C               inc l
 281+ 97E1 1C               inc e
 282+ 97E2 1A               ld a,(de)
 283+ 97E3 AE               xor (hl)
 284+ 97E4 77               ld (hl),a
 285+ 97E5 2C               inc l
 286+ 97E6 1C               inc e
 287+ 97E7 1A               ld a,(de)
 288+ 97E8 AE               xor (hl)
 289+ 97E9 77               ld (hl),a
 290+ 97EA 13               inc de
 291+ 97EB
 292+ 97EB E1               pop hl
 293+ 97EC
 294+ 97EC 1A               ld a,(de)
 295+ 97ED AE               xor (hl)
 296+ 97EE 77               ld (hl),a
 297+ 97EF 2C               inc l
 298+ 97F0 1C               inc e
 299+ 97F1 1A               ld a,(de)
 300+ 97F2 AE               xor (hl)
 301+ 97F3 77               ld (hl),a
 302+ 97F4 2C               inc l
 303+ 97F5 1C               inc e
 304+ 97F6 1A               ld a,(de)
 305+ 97F7 AE               xor (hl)
 306+ 97F8 77               ld (hl),a
 307+ 97F9 13               inc de
 308+ 97FA
 309+ 97FA ED 73 6E 8C      ld (Scanlines_album_SP),sp
 310+ 97FE ED 7B 4C 8C      ld sp,(Stack)
 311+ 9802 C9               ret
 312+ 9803
 313+ 9803              Pinta_lento
 314+ 9803
 315+ 9803 E1           1 pop hl
 316+ 9804
 317+ 9804 1A               ld a,(de)
 318+ 9805 AE               xor (hl)
 319+ 9806 77               ld (hl),a
 320+ 9807 2C               inc l
 321+ 9808 1C               inc e
 322+ 9809 1A               ld a,(de)
 323+ 980A AE               xor (hl)
 324+ 980B 77               ld (hl),a
 325+ 980C 2C               inc l
 326+ 980D 1C               inc e
 327+ 980E 1A               ld a,(de)
 328+ 980F AE               xor (hl)
 329+ 9810 77               ld (hl),a
 330+ 9811 13               inc de
 331+ 9812
 332+ 9812 10 EF            djnz 1B
 333+ 9814
 334+ 9814 ED 73 6E 8C      ld (Scanlines_album_SP),sp
 335+ 9818 ED 7B 4C 8C      ld sp,(Stack)
 336+ 981C C9               ret
# file closed: Pinta_Sprites.asm
2367  981D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 981D              ; ******************************************************************************************************************************************************************************************
   2+ 981D              ;
   3+ 981D              ; 26/06/23
   4+ 981D              ;
   5+ 981D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 981D
   7+ 981D              Draw
   8+ 981D
   9+ 981D CD C3 9A     	call Prepara_draw
  10+ 9820 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9821 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9822 28 05        	jr z,2F
  13+ 9824
  14+ 9824 3A 1C 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9827 18 0C        	jr 1F
  16+ 9829
  17+ 9829 2A 1A 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 982C 22 0D 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 982F CD BB 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9832              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9832
  22+ 9832 CD 49 9F     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9835
  24+ 9835 3A 0A 8C     1 ld a,(Ctrl_0)
  25+ 9838 CB 6F        	bit 5,a
  26+ 983A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 983C
  28+ 983C CD 51 98     	call Comprueba_limite_horizontal
  29+ 983F CD E1 98     	call Comprueba_limite_vertical
  30+ 9842
  31+ 9842              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9842              ; -----------------------
  33+ 9842              ; -----------------------
  34+ 9842              ; -----------------------
  35+ 9842
  36+ 9842 CD 37 9A     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9845 CD 6E 9A     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9848
  39+ 9848 3A 0A 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 984B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 984D 32 0A 8C     	ld (Ctrl_0),a
  42+ 9850
  43+ 9850 C9           	ret
  44+ 9851
  45+ 9851              ; *******************************************************************************************************************************************************************************************
  46+ 9851              ;	21/01/23
  47+ 9851              ;
  48+ 9851              ; 	Comprueba_limite_horizontal.
  49+ 9851              ;
  50+ 9851              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9851              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9851              ;
  53+ 9851              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9851              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9851              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9851              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9851
  58+ 9851
  59+ 9851
  60+ 9851 3A 0A 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9854 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9856 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9858 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 985A 32 0A 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 985D 18 09            jr 6F
  66+ 985F CB 5F        1 bit 3,a
  67+ 9861 28 0A            jr z,2F
  68+ 9863 E6 F7            and $f7
  69+ 9865 32 0A 8C         ld (Ctrl_0),a
  70+ 9868 CD BB 99     6 call Inicializacion
  71+ 986B 18 5B            jr 5F
  72+ 986D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 986E
  74+ 986E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 986E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 986E
  77+ 986E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 986F 2A 1E 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9872 CD BC 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9875 67           	ld h,a
  81+ 9876 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9877 CD BC 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 987A 67           	ld h,a
  84+ 987B A7           	and a
  85+ 987C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 987E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 987F 3A 1C 8C     	ld a,(Cuad_objeto)
  88+ 9882 FE 02        	cp 2
  89+ 9884 38 1E        	jr c,3F
  90+ 9886 28 1C        	jr z,3F
  91+ 9888 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9889 28 23            jr z,7F
  93+ 988B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 988D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 988F E1           	pop hl
  96+ 9890
  97+ 9890              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9890              ; _para indicar con E="2" en caso necesario.
  99+ 9890
 100+ 9890 E5               push hl
 101+ 9891 C5               push bc
 102+ 9892 CD BC 95     	call calcula_tercio
 103+ 9895 FE 01        	cp 1
 104+ 9897 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9899 CD C9 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 989C 28 26            jr z,9F
 107+ 989E 38 24            jr c,9F
 108+ 98A0 1E 00        11 ld e,0
 109+ 98A2 18 22            jr 8F
 110+ 98A4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 98A5 28 07        	jr z, 7F
 112+ 98A7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 98A9 1E 00         	ld e,0
 114+ 98AB E1           	pop hl
 115+ 98AC 18 04        	jr 4F
 116+ 98AE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 98B0 18 15            jr 10F
 118+ 98B2
 119+ 98B2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 98B2              ; _para indicar con E="2" en caso necesario.
 121+ 98B2
 122+ 98B2 E5           4 push hl
 123+ 98B3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 98B4 CD BC 95     	call calcula_tercio
 125+ 98B7 FE 01        	cp 1
 126+ 98B9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 98BB CD C9 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 98BE 28 04            jr z,9F
 129+ 98C0 30 02            jr nc,9F
 130+ 98C2 18 02        	jr 8F
 131+ 98C4 1E 02        9 ld e,2
 132+ 98C6 C1           8 pop bc
 133+ 98C7 E1           10 pop hl
 134+ 98C8 C9           5 ret
 135+ 98C9
 136+ 98C9              ; --------------------
 137+ 98C9              ;
 138+ 98C9              ; 25/08/22
 139+ 98C9
 140+ 98C9 CD BC 95     Comprueba_centro call calcula_tercio
 141+ 98CC 67               ld h,a
 142+ 98CD 08           	ex af,af
 143+ 98CE FE 02        	cp 2
 144+ 98D0 38 07        	jr c,1F
 145+ 98D2 28 05        	jr z,1F
 146+ 98D4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 98D7 18 03        	jr 2F
 148+ 98D9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 98DC 08           2 ex af,af
 150+ 98DD A7               and a
 151+ 98DE ED 42            sbc hl,bc
 152+ 98E0 C9               ret
 153+ 98E1
 154+ 98E1              ; *********************************************************************************************************************************************************************************************
 155+ 98E1              ;
 156+ 98E1              ;   16/8/22
 157+ 98E1              ;
 158+ 98E1              ;	Comprueba_limite_vertical
 159+ 98E1              ;
 160+ 98E1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 98E1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 98E1              ;
 163+ 98E1
 164+ 98E1 2A 0D 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 98E4 7D           	ld a,l
 166+ 98E5 E6 1F        	and $1F
 167+ 98E7 57           	ld d,a
 168+ 98E8 3A 20 8C     	ld a,(Limite_vertical)
 169+ 98EB BA           	cp d 											; Límite - Posición.
 170+ 98EC 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 98ED 3A 1C 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 98F0 CB 47        	bit 0,a
 173+ 98F2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 98F4
 175+ 98F4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 98F4
 177+ 98F4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 98F5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 98F7
 180+ 98F7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 98F7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 98F7
 183+ 98F7 3A FE 8B         ld a,(Coordenada_X)
 184+ 98FA 16 0F            ld d,Centro_izquierda
 185+ 98FC A7               and a
 186+ 98FD 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 98FE 28 1E            jr z,3F
 188+ 9900 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9902              ;                                                    ; _salimos sin modificar nada.
 190+ 9902 18 0E            jr 2F
 191+ 9904 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9905 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9907
 194+ 9907              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9907              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9907
 197+ 9907 3A FE 8B         ld a,(Coordenada_X)
 198+ 990A 16 10            ld d,Centro_derecha
 199+ 990C A7               and a
 200+ 990D 92               sub d
 201+ 990E 28 0E            jr z,3F
 202+ 9910 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9912              ;                                                    ; _salimos sin modificar nada.
 204+ 9912 CB 43        2 bit 0,e
 205+ 9914 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9916 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9917 CD AB 99         call Modificaccionne
 208+ 991A C1           	pop bc
 209+ 991B CD BB 99         call Inicializacion
 210+ 991E C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 991F
 212+ 991F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 991F
 214+ 991F C5           4 push bc
 215+ 9920 01 0C 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9923 0A           	ld a,(bc)
 217+ 9924 3D           	dec a
 218+ 9925 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9926 7D           	ld a,l
 220+ 9927 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9928 CB 47        	bit 0,a
 222+ 992A 28 03        	jr z,5F
 223+ 992C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 992D 18 2E        	jr 7F
 225+ 992F
 226+ 992F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 992F
 228+ 992F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9930 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9931 3A 0A 8C     	ld a,(Ctrl_0)
 231+ 9934 CB 4F        	bit 1,a
 232+ 9936 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9938 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9939
 235+ 9939              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9939
 237+ 9939 1C               inc e
 238+ 993A 1D               dec e
 239+ 993B 20 07            jr nz,12F
 240+ 993D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 993E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 993F 22 0D 8C     	ld (Posicion_actual),hl
 243+ 9942 18 44        13 jr 9F
 244+ 9944 CB 43        12 bit 0,e
 245+ 9946 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9948              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9948 C1           	pop bc
 248+ 9949 18 D3        	jr 3B
 249+ 994B 80           14 add b
 250+ 994C 6F               ld l,a
 251+ 994D 22 0D 8C     	ld (Posicion_actual),hl
 252+ 9950 CD AB 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9953 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9955 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9957 32 0A 8C         ld (Ctrl_0),a
 256+ 995A F1           	pop af
 257+ 995B 18 2B        	jr 9F
 258+ 995D
 259+ 995D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 995D
 261+ 995D F5           7 push af
 262+ 995E 3A 0A 8C     	ld a,(Ctrl_0)
 263+ 9961 CB 47        	bit 0,a
 264+ 9963 20 1D        	jr nz,8F
 265+ 9965 F1           	pop af
 266+ 9966
 267+ 9966              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9966
 269+ 9966 1C           	inc e
 270+ 9967 1D               dec e
 271+ 9968 20 07            jr nz,10F
 272+ 996A 90           	sub b
 273+ 996B 6F               ld l,a
 274+ 996C 22 0D 8C     	ld (Posicion_actual),hl
 275+ 996F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9971              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9971 CB 43        10 bit 0,e
 278+ 9973 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9975              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9975 C1           	pop bc
 281+ 9976 18 A6        	jr 3B
 282+ 9978 90           16 sub b
 283+ 9979 6F               ld l,a
 284+ 997A 22 0D 8C     	ld (Posicion_actual),hl
 285+ 997D CD AB 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9980 18 06            jr 9F
 287+ 9982 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9984 32 0A 8C         ld (Ctrl_0),a
 289+ 9987 F1           	pop af
 290+ 9988 C1           9 pop bc
 291+ 9989 1E 00        	ld e,0
 292+ 998B CD BB 99         call Inicializacion
 293+ 998E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 998F 08           	ex af,af
 295+ 9990 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9991 18 8B            jr 3B
 297+ 9993
 298+ 9993              ; --------------------
 299+ 9993
 300+ 9993 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9995 CD DE 9A     1 call PreviousScan
 302+ 9998 10 FB            djnz 1B
 303+ 999A 22 0D 8C     	ld (Posicion_actual),hl
 304+ 999D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 999E C9           	ret
 306+ 999F
 307+ 999F              ; --------------------
 308+ 999F
 309+ 999F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 99A1 CD CF 9A     1 call NextScan
 311+ 99A4 10 FB            djnz 1B
 312+ 99A6 22 0D 8C     	ld (Posicion_actual),hl
 313+ 99A9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 99AA C9           	ret
 315+ 99AB
 316+ 99AB              ; --------------------
 317+ 99AB              ;
 318+ 99AB              ;	22/01/23
 319+ 99AB              ;
 320+ 99AB              ;	E="1". Hemos cambiado de cuadrante.
 321+ 99AB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 99AB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 99AB
 324+ 99AB
 325+ 99AB              Modificaccionne
 326+ 99AB
 327+ 99AB 3A 1C 8C     	ld a,(Cuad_objeto)
 328+ 99AE FE 02        	cp 2
 329+ 99B0 CC 93 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 99B3 DC 93 99         call c,Modifica_Pos_actual
 331+ 99B6 C8           	ret z
 332+ 99B7 CD 9F 99         call Modifica_Pos_actual2
 333+ 99BA C9               ret
 334+ 99BB
 335+ 99BB              ; *************************************************************************************************************************************************************************************************
 336+ 99BB              ;
 337+ 99BB              ;	13/8/22
 338+ 99BB              ;
 339+ 99BB              ;	Inicializacion
 340+ 99BB              ;
 341+ 99BB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 99BB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 99BB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 99BB              ;
 345+ 99BB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 99BB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 99BB              ;	_ desaparece/aparece.
 348+ 99BB
 349+ 99BB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 99BB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 99BB              ;
 352+ 99BB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 99BB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 99BB              ; 		   [E] ="0"
 355+ 99BB
 356+ 99BB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 99BB
 358+ 99BB CD BC 95     Inicializacion call calcula_tercio
 359+ 99BE 28 36        	jr z,primit
 360+ 99C0 E6 02        	and 2
 361+ 99C2 20 07        	jr nz,segmit
 362+ 99C4 7D           	ld a,l
 363+ 99C5 FE 7F        	cp $7f
 364+ 99C7 38 2D        	jr c,primit
 365+ 99C9 28 2B        	jr z,primit
 366+ 99CB CD 31 9A     segmit call column
 367+ 99CE 38 13        	jr c,tercuad
 368+ 99D0 3E 04        cuarcuad ld a,4
 369+ 99D2 32 1C 8C     	ld (Cuad_objeto),a
 370+ 99D5 21 20 48     	ld hl,$4820
 371+ 99D8 22 1E 8C     	ld (Limite_horizontal),hl
 372+ 99DB 21 20 8C     	ld hl,Limite_vertical
 373+ 99DE 36 0D        	ld (hl),$0d
 374+ 99E0 08           	ex af,af
 375+ 99E1 18 3C        	jr 1F
 376+ 99E3              tercuad
 377+ 99E3 3E 03        	ld a,3
 378+ 99E5 32 1C 8C     	ld (Cuad_objeto),a
 379+ 99E8 21 20 48     	ld hl,$4820
 380+ 99EB 22 1E 8C     	ld (Limite_horizontal),hl
 381+ 99EE 21 20 8C     	ld hl,Limite_vertical
 382+ 99F1 36 12        	ld (hl),$12
 383+ 99F3 08           	ex af,af
 384+ 99F4 18 29        	jr 1F
 385+ 99F6 CD 31 9A     primit call column
 386+ 99F9 38 13        	jr c, primcuad
 387+ 99FB              segcuad
 388+ 99FB 3E 02        	ld a,2
 389+ 99FD 32 1C 8C     	ld (Cuad_objeto),a
 390+ 9A00 21 C0 4F     	ld hl,$4fc0
 391+ 9A03 22 1E 8C     	ld (Limite_horizontal),hl
 392+ 9A06 21 20 8C     	ld hl,Limite_vertical
 393+ 9A09 36 0D        	ld (hl),$0d
 394+ 9A0B 08           	ex af,af
 395+ 9A0C 18 11        	jr 1F
 396+ 9A0E              primcuad
 397+ 9A0E 3E 01        	ld a,1
 398+ 9A10 32 1C 8C     	ld (Cuad_objeto),a
 399+ 9A13 21 C0 4F     	ld hl,$4fc0
 400+ 9A16 22 1E 8C     	ld (Limite_horizontal),hl
 401+ 9A19 21 20 8C     	ld hl,Limite_vertical
 402+ 9A1C 36 12        	ld (hl),$12
 403+ 9A1E 08           	ex af,af
 404+ 9A1F
 405+ 9A1F C5           1 push bc
 406+ 9A20 E5           	push hl
 407+ 9A21 D5           	push de
 408+ 9A22
 409+ 9A22 2A 0D 8C     	ld hl,(Posicion_actual)
 410+ 9A25 CD DA 95     	call Genera_coordenadas
 411+ 9A28
 412+ 9A28 D1           	pop de
 413+ 9A29 E1           	pop hl
 414+ 9A2A C1           	pop bc
 415+ 9A2B
 416+ 9A2B 21 0A 8C     	ld hl,Ctrl_0
 417+ 9A2E CB EE        	set 5,(hl)
 418+ 9A30 C9           	ret
 419+ 9A31
 420+ 9A31              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9A31
 422+ 9A31              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9A31              ;
 424+ 9A31              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9A31
 426+ 9A31 7D           column ld a,l
 427+ 9A32 E6 1F        	and $1f
 428+ 9A34 FE 10         	cp $10
 429+ 9A36 C9            	ret
 430+ 9A37
 431+ 9A37              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9A37              ;
 433+ 9A37              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9A37              ;
 435+ 9A37              ; 14/12/22
 436+ 9A37              ;
 437+ 9A37              ;	Modifica: A y BC.
 438+ 9A37
 439+ 9A37 3A 1C 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9A3A E6 01        	and 1
 441+ 9A3C 28 17        	jr z,1F
 442+ 9A3E
 443+ 9A3E              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9A3E
 445+ 9A3E 3A FE 8B     	ld a,(Coordenada_X)
 446+ 9A41 47           	ld b,a
 447+ 9A42 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9A43 79           	ld a,c
 449+ 9A44 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9A45 38 08        	jr c,2F
 451+ 9A47 47           	ld b,a
 452+ 9A48 79           	ld a,c
 453+ 9A49 90           	sub b
 454+ 9A4A 32 1D 8C     	ld (Columnas),a
 455+ 9A4D 18 1B        	jr 4F
 456+ 9A4F 79           2 ld a,c
 457+ 9A50 32 1D 8C     	ld (Columnas),a
 458+ 9A53 18 15        	jr 4F
 459+ 9A55
 460+ 9A55              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9A55
 462+ 9A55 3A FE 8B     1 ld a,(Coordenada_X)
 463+ 9A58 81           	add c
 464+ 9A59 3D           	dec a
 465+ 9A5A D6 1F        	sub $1f
 466+ 9A5C 38 08        	jr c,3F
 467+ 9A5E 47           	ld b,a
 468+ 9A5F 79           	ld a,c
 469+ 9A60 90           	sub b
 470+ 9A61 32 1D 8C     	ld (Columnas),a
 471+ 9A64 18 04        	jr 4F
 472+ 9A66 79           3 ld a,c
 473+ 9A67 32 1D 8C     	ld (Columnas),a
 474+ 9A6A D9           4 exx
 475+ 9A6B 4F           	ld c,a
 476+ 9A6C D9           	exx
 477+ 9A6D C9            ret
 478+ 9A6E
 479+ 9A6E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9A6E              ;
 481+ 9A6E              ;   19/7/23
 482+ 9A6E              ;
 483+ 9A6E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9A6E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9A6E              ;
 486+ 9A6E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9A6E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9A6E              ;
 489+ 9A6E              ;	DESTRUYE: HL,B Y A.
 490+ 9A6E
 491+ 9A6E 3A 1C 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9A71 FE 02        	cp 2
 493+ 9A73 38 18        	jr c,1F
 494+ 9A75 28 16        	jr z,1F
 495+ 9A77 E6 01        	and 1
 496+ 9A79 28 0D        	jr z,3F
 497+ 9A7B
 498+ 9A7B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A7B
 500+ 9A7B CD B7 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A7E
 502+ 9A7E 7D           9 ld a,l
 503+ 9A7F E6 1F        	and $1f
 504+ 9A81 28 2A        	jr z,7F
 505+ 9A83 2B           	dec hl
 506+ 9A84 10 F8        	djnz 9B
 507+ 9A86 18 25        	jr 7F
 508+ 9A88
 509+ 9A88              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A88
 511+ 9A88 2A 0D 8C     3 ld hl,(Posicion_actual)
 512+ 9A8B 18 20        	jr 7F
 513+ 9A8D
 514+ 9A8D 28 14        1 jr z,2F
 515+ 9A8F
 516+ 9A8F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A8F
 518+ 9A8F CD B7 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A92
 520+ 9A92 7D           4 ld a,l
 521+ 9A93 E6 1F        	and $1f
 522+ 9A95 28 03        	jr z,6F
 523+ 9A97 2B           	dec hl
 524+ 9A98 10 F8        	djnz 4B
 525+ 9A9A 06 0F        6 ld b,15
 526+ 9A9C CD DE 9A     5 call PreviousScan
 527+ 9A9F 10 FB        	djnz 5B
 528+ 9AA1 18 0A        	jr 7F
 529+ 9AA3
 530+ 9AA3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9AA3
 532+ 9AA3 CD B7 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9AA6 06 0F        	ld b,15
 534+ 9AA8 CD DE 9A     8 call PreviousScan
 535+ 9AAB 10 FB        	djnz 8B
 536+ 9AAD
 537+ 9AAD E5           7 push hl
 538+ 9AAE DD E1        	pop ix
 539+ 9AB0
 540+ 9AB0 2A 0F 8C     	ld hl,(Puntero_objeto)
 541+ 9AB3 E5           	push hl
 542+ 9AB4 FD E1        	pop iy
 543+ 9AB6
 544+ 9AB6 C9           	ret
 545+ 9AB7
 546+ 9AB7              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9AB7              ;
 548+ 9AB7              ;	2/1/23
 549+ 9AB7              ;
 550+ 9AB7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9AB7              ;
 552+ 9AB7              ;	Tras esta rutina tenemos:
 553+ 9AB7              ;
 554+ 9AB7              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9AB7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9AB7              ;
 557+ 9AB7              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9AB7
 559+ 9AB7 2A 0D 8C     Operandos ld hl,(Posicion_actual)
 560+ 9ABA 3A 1D 8C     	ld a,(Columnas)
 561+ 9ABD 3D           	dec a
 562+ 9ABE 20 01        	jr nz,1F
 563+ 9AC0 3C           	inc a
 564+ 9AC1 47           1 ld b,a
 565+ 9AC2 C9           	ret
 566+ 9AC3
 567+ 9AC3              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9AC3              ;
 569+ 9AC3              ;	Prepara_draw
 570+ 9AC3              ;
 571+ 9AC3              ;	Es una rutina de carga.
 572+ 9AC3              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9AC3              ;
 574+ 9AC3              ;	FUNCIONAMIENTO:
 575+ 9AC3              ;
 576+ 9AC3              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9AC3              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9AC3              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9AC3              ;
 580+ 9AC3              ;	DESTRUYE:
 581+ 9AC3              ;
 582+ 9AC3              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9AC3
 584+ 9AC3 21 0B 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9AC6 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9AC7 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9AC8 4E           	ld c,(hl)
 588+ 9AC9 2A 0D 8C     	ld hl,(Posicion_actual)
 589+ 9ACC 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9ACE C9           	ret
 591+ 9ACF
 592+ 9ACF              ;----------------------------------------------------------------------------------------------------------------
 593+ 9ACF              ;
 594+ 9ACF              ;	5/08/22
 595+ 9ACF              ;
 596+ 9ACF              ;   NextScan.
 597+ 9ACF              ;
 598+ 9ACF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9ACF              ;
 600+ 9ACF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9ACF              ;
 602+ 9ACF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9ACF              ;
 604+ 9ACF              ;       DESTRUIDOS: AF y HL !!!
 605+ 9ACF              ;
 606+ 9ACF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9ACF              ;
 608+ 9ACF
 609+ 9ACF 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9AD0 7C               ld a,h
 611+ 9AD1 E6 07            and 7
 612+ 9AD3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9AD4
 614+ 9AD4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9AD5 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9AD7 6F               ld l,a
 617+ 9AD8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9AD9
 619+ 9AD9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9ADA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9ADC 67               ld h,a
 622+ 9ADD C9               ret
 623+ 9ADE
 624+ 9ADE              ;----------------------------------------------------------------------------------------------------------------
 625+ 9ADE              ;
 626+ 9ADE              ;	5/08/22
 627+ 9ADE              ;
 628+ 9ADE              ;   PreviousScan.
 629+ 9ADE              ;
 630+ 9ADE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9ADE              ;
 632+ 9ADE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9ADE              ;
 634+ 9ADE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9ADE              ;
 636+ 9ADE              ;       DESTRUIDOS: AF y HL !!!
 637+ 9ADE              ;
 638+ 9ADE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9ADE              ;
 640+ 9ADE
 641+ 9ADE 7C           PreviousScan ld a,h
 642+ 9ADF 25               dec h               ; Dec H.
 643+ 9AE0 E6 07            and 7
 644+ 9AE2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9AE3
 646+ 9AE3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9AE4 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9AE6 6F               ld l,a
 649+ 9AE7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9AE8
 651+ 9AE8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9AE9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9AEB 67               ld h,a
 654+ 9AEC C9               ret
 655+ 9AED
 656+ 9AED
 657+ 9AED
 658+ 9AED
 659+ 9AED
 660+ 9AED
 661+ 9AED
 662+ 9AED
 663+ 9AED
 664+ 9AED
 665+ 9AED
 666+ 9AED
# file closed: Draw_XOR.asm
2368  9AED              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9AED
   2+ 9AED              ; ******************************************************************************************************************************************************************************************
   3+ 9AED              ;
   4+ 9AED              ;   20/05/23
   5+ 9AED              ;
   6+ 9AED              ;	Recompone_posicion_inicio
   7+ 9AED              ;
   8+ 9AED              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9AED              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9AED              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9AED              ;	_ a una u otra rutina.
  12+ 9AED
  13+ 9AED              Recompone_posicion_inicio
  14+ 9AED
  15+ 9AED 2A 1A 8C     	ld hl,(Posicion_inicio)
  16+ 9AF0 7D           	ld a,l
  17+ 9AF1 E6 1F        	and $1f
  18+ 9AF3 28 16        	jr z,1F
  19+ 9AF5
  20+ 9AF5 FE 1F        	cp $1f
  21+ 9AF7 28 0D        	jr z,3F
  22+ 9AF9
  23+ 9AF9 21 09 8C     	ld hl,Ctrl_2
  24+ 9AFC CB C6        	set 0,(hl)
  25+ 9AFE 2A 0F 8C     	ld hl,(Puntero_objeto)
  26+ 9B01 22 3B 8C     	ld (Repone_puntero_objeto),hl
  27+ 9B04 18 08        	jr 2F
  28+ 9B06
  29+ 9B06 CD A0 9C     3 call Mov_left
  30+ 9B09 18 03        	jr 2F
  31+ 9B0B
  32+ 9B0B CD 87 9B     1 call Mov_right
  33+ 9B0E 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9B11 22 0F 8C     	ld (Puntero_objeto),hl
  35+ 9B14 C9           	ret
  36+ 9B15
  37+ 9B15              ; ******************************************************************************************************************************************************************************************
  38+ 9B15              ;
  39+ 9B15              ;   27/05/23
  40+ 9B15              ;
  41+ 9B15              ;	Mov_down
  42+ 9B15              ;
  43+ 9B15              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9B15              ;
  45+ 9B15              ;
  46+ 9B15              Mov_down
  47+ 9B15
  48+ 9B15 CD 75 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9B18              ;																	; _ repone (Puntero_objeto).
  50+ 9B18              ;	ld hl,Ctrl_0
  51+ 9B18              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9B18              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9B18              ; 																	; _ en el caso de que no lo haya.
  54+ 9B18 3A 25 8C     	ld a,(Vel_down)
  55+ 9B1B 47           	ld b,a
  56+ 9B1C 2A 0D 8C         ld hl,(Posicion_actual)
  57+ 9B1F CD BC 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9B22 E6 02        	and 2
  59+ 9B24 28 17        	jr z,1F
  60+ 9B26
  61+ 9B26              ; Nos encontramos en el último tercio de pantalla.
  62+ 9B26              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9B26
  64+ 9B26 7C           	ld a,h
  65+ 9B27 FE 57        	cp $57
  66+ 9B29 20 12        	jr nz,1F
  67+ 9B2B
  68+ 9B2B 7D           	ld a,l
  69+ 9B2C C6 20        	add $20
  70+ 9B2E 30 0D        	jr nc,1F
  71+ 9B30
  72+ 9B30              ; ------------------------------
  73+ 9B30              ;
  74+ 9B30              ;	12/01/24
  75+ 9B30
  76+ 9B30              ;	call Reaparece_arriba
  77+ 9B30 CD 28 9E     	call Reinicio
  78+ 9B33
  79+ 9B33              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9B33
  81+ 9B33 3A 74 8C     	ld a,(Ctrl_3)
  82+ 9B36 CB CF        	set 1,a
  83+ 9B38 32 74 8C     	ld (Ctrl_3),a
  84+ 9B3B
  85+ 9B3B 18 08        	jr 3F
  86+ 9B3D              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9B3D              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9B3D              ; ------------------------------
  89+ 9B3D
  90+ 9B3D CD CF 9A     1 call NextScan
  91+ 9B40 22 0D 8C     	ld (Posicion_actual),hl
  92+ 9B43 10 DA            djnz 2B
  93+ 9B45 CD DA 95     3 call Genera_coordenadas
  94+ 9B48 C9           	ret
  95+ 9B49
  96+ 9B49              ; ******************************************************************************************************************************************************************************************
  97+ 9B49              ;
  98+ 9B49              ;   27/05/23
  99+ 9B49              ;
 100+ 9B49              ;	Mov_up
 101+ 9B49              ;
 102+ 9B49              ; 	Mueve el Sprite hacia arriba.
 103+ 9B49              ;
 104+ 9B49              ;
 105+ 9B49              Mov_up
 106+ 9B49
 107+ 9B49 CD 75 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9B4C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9B4C              ;	ld hl,Ctrl_0
 110+ 9B4C              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9B4C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9B4C              ; 																		; _ en el caso de que no lo haya.
 113+ 9B4C 3A 24 8C     	ld a,(Vel_up)
 114+ 9B4F 47           	ld b,a
 115+ 9B50 2A 0D 8C     	ld hl,(Posicion_actual)
 116+ 9B53 CD BC 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9B56 A7           	and a
 118+ 9B57 20 10        	jr nz,1F
 119+ 9B59
 120+ 9B59              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9B59              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9B59
 123+ 9B59 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9B5A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9B5C 20 0B            jr nz,1F
 126+ 9B5E 7D               ld a,l
 127+ 9B5F D6 20            sub $20
 128+ 9B61 30 06            jr nc,1F
 129+ 9B63 25               dec h
 130+ 9B64
 131+ 9B64              ; -----------------------------
 132+ 9B64 CD 09 9E         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9B67              ;	call Reinicio
 134+ 9B67              ; -----------------------------
 135+ 9B67
 136+ 9B67 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9B69 CD DE 9A     1 call PreviousScan
 138+ 9B6C 22 0D 8C     	ld (Posicion_actual),hl
 139+ 9B6F 10 E2            djnz 3B
 140+ 9B71 CD DA 95     2 call Genera_coordenadas
 141+ 9B74 C9           	ret
 142+ 9B75
 143+ 9B75              ; -----------------------------
 144+ 9B75              ;
 145+ 9B75              ;	27/5/23
 146+ 9B75              ;
 147+ 9B75              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B75              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B75              ;
 150+ 9B75              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B75              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B75              ;
 153+ 9B75              ;	Modifica: A y (Puntero_objeto).
 154+ 9B75
 155+ 9B75 3A 09 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B78 CB 47        	bit 0,a
 157+ 9B7A C8           	ret z
 158+ 9B7B CB 87        	res 0,a
 159+ 9B7D 32 09 8C     	ld (Ctrl_2),a
 160+ 9B80 2A 3B 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B83 22 0F 8C     	ld (Puntero_objeto),hl
 162+ 9B86 C9           	ret
 163+ 9B87
 164+ 9B87              ; ******************************************************************************************************************************************************************************************
 165+ 9B87              ;
 166+ 9B87              ;	19/10/22
 167+ 9B87              ;
 168+ 9B87              ;	Mov_right.
 169+ 9B87              ;
 170+ 9B87              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B87              ;
 172+ 9B87
 173+ 9B87 3A 0A 8C     Mov_right ld a,(Ctrl_0)
 174+ 9B8A CB 77        	bit 6,a
 175+ 9B8C 28 06        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B8E
 177+ 9B8E CD B7 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B91 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B92
 180+ 9B92              ;;	ld hl,Ctrl_0
 181+ 9B92              ;;	set 4,(hl)
 182+ 9B92 18 4D        	jr 8F
 183+ 9B94
 184+ 9B94              10
 185+ 9B94              ;	ld hl,Ctrl_0
 186+ 9B94              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 187+ 9B94              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 188+ 9B94              ; 																	; _ en el caso de que no lo haya.
 189+ 9B94 3A FE 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 190+ 9B97 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 191+ 9B99 20 46        	jr nz,8F
 192+ 9B9B
 193+ 9B9B 3A 11 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 194+ 9B9E A7           	and a 															; _[3] para continuar con el DESPLZ.
 195+ 9B9F 28 40        	jr z,8F
 196+ 9BA1
 197+ 9BA1              ; ---------- ---------- ----------
 198+ 9BA1              ;
 199+ 9BA1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 200+ 9BA1
 201+ 9BA1 3A 23 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 202+ 9BA4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 203+ 9BA6 28 11        	jr z,1F
 204+ 9BA8 38 06        	jr c,6F
 205+ 9BAA FE 04        	cp 4
 206+ 9BAC 28 14        	jr z,7F
 207+ 9BAE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 208+ 9BB0
 209+ 9BB0              ; ---------- ---------- ----------
 210+ 9BB0              ;
 211+ 9BB0              ; Perfiles de velocidad
 212+ 9BB0              ;
 213+ 9BB0
 214+ 9BB0 3A 11 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 215+ 9BB3 FE FE        	cp $fe
 216+ 9BB5 20 2A        	jr nz,8F
 217+ 9BB7 18 10        	jr 3F
 218+ 9BB9 3A 11 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 219+ 9BBC FE FD        	cp $fd
 220+ 9BBE 20 21        	jr nz,8F
 221+ 9BC0 18 07        	jr 3F
 222+ 9BC2 3A 11 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 223+ 9BC5 FE FB        	cp $fb
 224+ 9BC7 20 18        	jr nz,8F
 225+ 9BC9
 226+ 9BC9              ; ---------- ---------- ----------
 227+ 9BC9
 228+ 9BC9              3
 229+ 9BC9 CD F7 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 230+ 9BCC              ;	call Reinicio
 231+ 9BCC
 232+ 9BCC              ; ---------- ---------- ----------
 233+ 9BCC              ;
 234+ 9BCC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 235+ 9BCC
 236+ 9BCC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 237+ 9BCE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 238+ 9BCF CD E8 9B     	call DESPLZ_DER
 239+ 9BD2 C1           	pop bc
 240+ 9BD3 10 F9        	djnz 5B
 241+ 9BD5 2A 0D 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 242+ 9BD8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 243+ 9BD9 22 0D 8C     	ld (Posicion_actual),hl
 244+ 9BDC CD DA 95     	call Genera_coordenadas
 245+ 9BDF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 246+ 9BE1
 247+ 9BE1              ; ---------- ---------- ----------
 248+ 9BE1
 249+ 9BE1 2A 0D 8C     8 ld hl,(Posicion_actual)
 250+ 9BE4 CD E8 9B     	call DESPLZ_DER
 251+ 9BE7 C9           2 ret
 252+ 9BE8
 253+ 9BE8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 254+ 9BE8              ;
 255+ 9BE8              ;	22/9/22
 256+ 9BE8              ;
 257+ 9BE8
 258+ 9BE8 CD F7 9B     DESPLZ_DER call Desplaza_derecha
 259+ 9BEB CD 43 9C         call modifica_parametros_1er_DESPLZ_2
 260+ 9BEE CD 6C 9C         call Ciclo_completo
 261+ 9BF1 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 262+ 9BF4 CB FE        	set 7,(hl)
 263+ 9BF6 C9           	ret
 264+ 9BF7
 265+ 9BF7              ; ******************************************************************************************************************************************************************************************
 266+ 9BF7              ;	15/02/23
 267+ 9BF7              ;
 268+ 9BF7
 269+ 9BF7 3A 23 8C     Desplaza_derecha ld a,(Vel_right)
 270+ 9BFA 47           	ld b,a
 271+ 9BFB 2A 16 8C     	ld hl,(Puntero_DESPLZ_der)
 272+ 9BFE 23           1 inc hl
 273+ 9BFF 23           	inc hl
 274+ 9C00 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 275+ 9C02 22 16 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 276+ 9C05 CD C3 91     	call Extrae_address
 277+ 9C08 22 0F 8C     	ld (Puntero_objeto),hl
 278+ 9C0B
 279+ 9C0B              ; Modifica (Puntero_DESPLZ_izq).
 280+ 9C0B
 281+ 9C0B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 282+ 9C0B              ; Cuántos movimientos hemos hecho ??
 283+ 9C0B              ; DE contiene (Puntero_DESPLZ_der).
 284+ 9C0B
 285+ 9C0B 2A 12 8C     7 ld hl,(Indice_Sprite_der)
 286+ 9C0E EB           	ex de,hl
 287+ 9C0F A7           	and a
 288+ 9C10 ED 52        	sbc hl,de
 289+ 9C12 CB 3D        	srl l
 290+ 9C14 3E 08        6 ld a,8
 291+ 9C16 95           	sub l
 292+ 9C17 30 1E        	jr nc,3F
 293+ 9C19
 294+ 9C19              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 295+ 9C19              ; B="0".
 296+ 9C19
 297+ 9C19 04           4 inc b
 298+ 9C1A 3C           	inc a
 299+ 9C1B 20 FC        	jr nz,4B
 300+ 9C1D 78           	ld a,b
 301+ 9C1E 08           	ex af,af
 302+ 9C1F 2A 12 8C     	ld hl,(Indice_Sprite_der)
 303+ 9C22 23           5 inc hl
 304+ 9C23 23           	inc hl
 305+ 9C24 10 FC        	djnz 5B
 306+ 9C26 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 307+ 9C29 CD C3 91     	call Extrae_address
 308+ 9C2C 22 0F 8C     	ld (Puntero_objeto),hl
 309+ 9C2F
 310+ 9C2F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 311+ 9C2F              ; _(Posicion_actual).
 312+ 9C2F
 313+ 9C2F 21 0D 8C     	ld hl,Posicion_actual
 314+ 9C32 34           	inc (hl)
 315+ 9C33 08               ex af,af
 316+ 9C34 6F           	ld l,a
 317+ 9C35 18 DD        	jr 6B
 318+ 9C37
 319+ 9C37              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 320+ 9C37
 321+ 9C37 47           3 ld b,a
 322+ 9C38 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 323+ 9C3B 23           2 inc hl
 324+ 9C3C 23           	inc hl
 325+ 9C3D 10 FC        	djnz 2B
 326+ 9C3F 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 327+ 9C42 C9           8 ret
 328+ 9C43
 329+ 9C43              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 330+ 9C43              ;
 331+ 9C43              ;	24/7/22
 332+ 9C43              ;
 333+ 9C43              ;	modifica_parametros_1er_DESPLZ_2
 334+ 9C43              ;
 335+ 9C43              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 336+ 9C43              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 337+ 9C43              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 338+ 9C43
 339+ 9C43 3A 11 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 340+ 9C46 A7           	and a
 341+ 9C47 20 1F        	jr nz,1F
 342+ 9C49 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 343+ 9C4B 32 11 8C         ld (CTRL_DESPLZ),a
 344+ 9C4E
 345+ 9C4E 21 0C 8C     	ld hl,Columns
 346+ 9C51 34           	inc (hl)
 347+ 9C52 3A 1C 8C     	ld a,(Cuad_objeto)
 348+ 9C55 E6 01        	and 1
 349+ 9C57 28 0F        	jr z,1F
 350+ 9C59 2A 0D 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 351+ 9C5C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 352+ 9C5D 22 0D 8C     	ld (Posicion_actual),hl
 353+ 9C60 CD DA 95     	call Genera_coordenadas
 354+ 9C63 CD C3 9D     	call Inc_CTRL_DESPLZ
 355+ 9C66 18 03        	jr 2F
 356+ 9C68 CD C3 9D     1 call Inc_CTRL_DESPLZ
 357+ 9C6B C9           2 ret
 358+ 9C6C
 359+ 9C6C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 360+ 9C6C              ;
 361+ 9C6C              ;	24/7/22
 362+ 9C6C              ;
 363+ 9C6C              ;	Ciclo_completo.
 364+ 9C6C              ;
 365+ 9C6C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 366+ 9C6C              ;
 367+ 9C6C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 368+ 9C6C              ; 	Decrementamos (Columns).
 369+ 9C6C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 370+ 9C6C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 371+ 9C6C
 372+ 9C6C
 373+ 9C6C 3A 11 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 374+ 9C6F FE FF        	cp $ff
 375+ 9C71 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 376+ 9C73 E6 F0        	and $f0
 377+ 9C75 20 28        	jr nz,3F
 378+ 9C77
 379+ 9C77              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 380+ 9C77
 381+ 9C77 3A 11 8C     	ld a,(CTRL_DESPLZ)
 382+ 9C7A 47           	ld b,a
 383+ 9C7B 3E F8        	ld a,$f8
 384+ 9C7D 80           	add b
 385+ 9C7E 32 11 8C     	ld (CTRL_DESPLZ),a
 386+ 9C81 18 1C        	jr 3F
 387+ 9C83 21 0C 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 388+ 9C86 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 389+ 9C87 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 390+ 9C88 32 11 8C     	ld (CTRL_DESPLZ),a
 391+ 9C8B 3A 1C 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 392+ 9C8E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 393+ 9C90 20 0A        	jr nz,2F
 394+ 9C92 2A 0D 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 395+ 9C95 23           	inc hl
 396+ 9C96 22 0D 8C     	ld (Posicion_actual),hl
 397+ 9C99 CD DA 95     	call Genera_coordenadas
 398+ 9C9C
 399+ 9C9C              ; Inicia el puntero de Sprite.
 400+ 9C9C
 401+ 9C9C CD D8 91     2 call Inicia_puntero_objeto_der
 402+ 9C9F C9           3 ret
 403+ 9CA0
 404+ 9CA0              ; ******************************************************************************************************************************************************************************************
 405+ 9CA0              ;
 406+ 9CA0              ;	15/02/23
 407+ 9CA0              ;
 408+ 9CA0              ;	Mov_left.
 409+ 9CA0              ;
 410+ 9CA0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 411+ 9CA0              ;
 412+ 9CA0              Mov_left
 413+ 9CA0
 414+ 9CA0              ;	ld hl,Ctrl_0
 415+ 9CA0              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 416+ 9CA0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 417+ 9CA0              ; 																	; _ en el caso de que no lo haya.
 418+ 9CA0 3A 0A 8C     	ld a,(Ctrl_0)
 419+ 9CA3 CB 77        	bit 6,a
 420+ 9CA5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 421+ 9CA7
 422+ 9CA7 CD BD 9D     	call Stop_Amadeus_left
 423+ 9CAA C8           	ret z
 424+ 9CAB 20 4A        	jr nz,8F
 425+ 9CAD
 426+ 9CAD 3A FE 8B     11 ld a,(Coordenada_X)
 427+ 9CB0 A7           	and a
 428+ 9CB1 20 44        	jr nz,8F
 429+ 9CB3
 430+ 9CB3 3A 11 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 431+ 9CB6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 432+ 9CB7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 433+ 9CB9
 434+ 9CB9              ; ---------- ---------- ----------
 435+ 9CB9
 436+ 9CB9 3A 22 8C     	ld a,(Vel_left)
 437+ 9CBC FE 02        	cp 2
 438+ 9CBE 28 0F        	jr z,1F
 439+ 9CC0 38 04        	jr c,6F
 440+ 9CC2 FE 04        	cp 4
 441+ 9CC4 28 12        	jr z,7F
 442+ 9CC6
 443+ 9CC6              ; ---------- ---------- ----------
 444+ 9CC6
 445+ 9CC6 3A 11 8C     6 ld a,(CTRL_DESPLZ)
 446+ 9CC9 FE F8        	cp $f8
 447+ 9CCB 20 2A        	jr nz,8F
 448+ 9CCD 18 10        	jr 4F
 449+ 9CCF 3A 11 8C     1 ld a,(CTRL_DESPLZ)
 450+ 9CD2 FE F9        	cp $f9
 451+ 9CD4 20 21        	jr nz,8F
 452+ 9CD6 18 07        	jr 4F
 453+ 9CD8 3A 11 8C     7 ld a,(CTRL_DESPLZ)
 454+ 9CDB FE FB        	cp $fb
 455+ 9CDD 20 18        	jr nz,8F
 456+ 9CDF
 457+ 9CDF              ; ---------- ---------- ----------
 458+ 9CDF
 459+ 9CDF              4
 460+ 9CDF CD E5 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 461+ 9CE2              ;	call Reinicio
 462+ 9CE2
 463+ 9CE2              ; ---------- ---------- ----------
 464+ 9CE2
 465+ 9CE2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 466+ 9CE4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 467+ 9CE5
 468+ 9CE5              ;	ld hl,(Indice_Sprite_izq)
 469+ 9CE5              ;	ld (Puntero_DESPLZ_izq),hl
 470+ 9CE5
 471+ 9CE5 CD FE 9C     	call DESPLZ_IZQ
 472+ 9CE8 C1           	pop bc
 473+ 9CE9 10 F9        	djnz 5B
 474+ 9CEB 2A 0D 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 475+ 9CEE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 476+ 9CEF 22 0D 8C     	ld (Posicion_actual),hl
 477+ 9CF2 CD DA 95     	call Genera_coordenadas
 478+ 9CF5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 479+ 9CF7
 480+ 9CF7              ; ---------- ---------- ----------
 481+ 9CF7
 482+ 9CF7              ; Movemos, no hay recolocación.
 483+ 9CF7
 484+ 9CF7 2A 0D 8C     8 ld hl,(Posicion_actual)
 485+ 9CFA CD FE 9C     	call DESPLZ_IZQ
 486+ 9CFD C9           2 ret
 487+ 9CFE
 488+ 9CFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 489+ 9CFE              ;
 490+ 9CFE              ;	22/9/22
 491+ 9CFE
 492+ 9CFE              DESPLZ_IZQ
 493+ 9CFE
 494+ 9CFE CD 0D 9D     	call Desplaza_izquierda
 495+ 9D01 CD 59 9D         call modifica_parametros_1er_DESPLZ
 496+ 9D04 CD 81 9D     	call Ciclo_completo_2
 497+ 9D07 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 498+ 9D0A CB BE        	res 7,(hl)
 499+ 9D0C C9           	ret
 500+ 9D0D
 501+ 9D0D              Desplaza_izquierda
 502+ 9D0D
 503+ 9D0D 3A 22 8C     	ld a,(Vel_left)
 504+ 9D10 47           	ld b,a
 505+ 9D11 2A 18 8C     	ld hl,(Puntero_DESPLZ_izq)
 506+ 9D14 23           1 inc hl
 507+ 9D15 23           	inc hl
 508+ 9D16 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 509+ 9D18 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 510+ 9D1B CD C3 91     	call Extrae_address
 511+ 9D1E 22 0F 8C     	ld (Puntero_objeto),hl
 512+ 9D21
 513+ 9D21              ; Modifica (Puntero_DESPLZ_der).
 514+ 9D21
 515+ 9D21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 516+ 9D21              ; Cuántos movimientos hemos hecho ??
 517+ 9D21              ; DE contiene (Puntero_DESPLZ_izq).
 518+ 9D21
 519+ 9D21 2A 14 8C     7 ld hl,(Indice_Sprite_izq)
 520+ 9D24 EB           	ex de,hl
 521+ 9D25 A7           	and a
 522+ 9D26 ED 52        	sbc hl,de
 523+ 9D28 CB 3D        	srl l
 524+ 9D2A 3E 08        6 ld a,8
 525+ 9D2C 95           	sub l
 526+ 9D2D 30 1E        	jr nc,3F
 527+ 9D2F
 528+ 9D2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 529+ 9D2F              ; B="0".
 530+ 9D2F
 531+ 9D2F 04           4 inc b
 532+ 9D30 3C           	inc a
 533+ 9D31 20 FC        	jr nz,4B
 534+ 9D33 78           	ld a,b
 535+ 9D34 08           	ex af,af
 536+ 9D35 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 537+ 9D38 23           5 inc hl
 538+ 9D39 23           	inc hl
 539+ 9D3A 10 FC        	djnz 5B
 540+ 9D3C 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 541+ 9D3F CD C3 91     	call Extrae_address
 542+ 9D42 22 0F 8C     	ld (Puntero_objeto),hl
 543+ 9D45
 544+ 9D45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 545+ 9D45              ; _(Posicion_actual).
 546+ 9D45
 547+ 9D45 21 0D 8C     	ld hl,Posicion_actual
 548+ 9D48 35           	dec (hl)
 549+ 9D49 08           	ex af,af
 550+ 9D4A 6F           	ld l,a
 551+ 9D4B 18 DD        	jr 6B
 552+ 9D4D
 553+ 9D4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 554+ 9D4D
 555+ 9D4D 47           3 ld b,a
 556+ 9D4E 2A 12 8C     	ld hl,(Indice_Sprite_der)
 557+ 9D51 23           2 inc hl
 558+ 9D52 23           	inc hl
 559+ 9D53 10 FC        	djnz 2B
 560+ 9D55 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 561+ 9D58 C9           8 ret
 562+ 9D59
 563+ 9D59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 564+ 9D59              ;
 565+ 9D59              ;	modifica_parametros_1er_DESPLZ
 566+ 9D59              ;
 567+ 9D59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 568+ 9D59              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 569+ 9D59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 570+ 9D59
 571+ 9D59 3A 11 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 572+ 9D5C A7           	and a
 573+ 9D5D 20 1E        	jr nz,1F
 574+ 9D5F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 575+ 9D60 32 11 8C         ld (CTRL_DESPLZ),a
 576+ 9D63 21 0C 8C     	ld hl,Columns
 577+ 9D66 34           	inc (hl)
 578+ 9D67 3A 1C 8C     	ld a,(Cuad_objeto)
 579+ 9D6A E6 01        	and 1
 580+ 9D6C 20 0F        	jr nz,1F
 581+ 9D6E 2A 0D 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 582+ 9D71 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 583+ 9D72 22 0D 8C     	ld (Posicion_actual),hl
 584+ 9D75 CD DA 95     	call Genera_coordenadas
 585+ 9D78 CD D4 9D     	call Dec_CTRL_DESPLZ
 586+ 9D7B 18 03        	jr 2F
 587+ 9D7D CD D4 9D     1 call Dec_CTRL_DESPLZ
 588+ 9D80 C9           2 ret
 589+ 9D81
 590+ 9D81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 591+ 9D81
 592+ 9D81 3A 11 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 593+ 9D84 FE F7        	cp $f7
 594+ 9D86 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 595+ 9D88 30 2C        	jr nc,3F
 596+ 9D8A
 597+ 9D8A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 598+ 9D8A
 599+ 9D8A 06 00        	ld b,0
 600+ 9D8C 04           4 inc b
 601+ 9D8D 3C           	inc a
 602+ 9D8E FE F7        	cp $f7
 603+ 9D90 20 FA        	jr nz,4B
 604+ 9D92 3E FF        	ld a,$ff
 605+ 9D94 90           	sub b
 606+ 9D95 32 11 8C     	ld (CTRL_DESPLZ),a
 607+ 9D98 18 1C        	jr 3F
 608+ 9D9A
 609+ 9D9A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 610+ 9D9A
 611+ 9D9A 21 0C 8C     1 ld hl,Columns
 612+ 9D9D 35           	dec (hl)
 613+ 9D9E AF           	xor a
 614+ 9D9F 32 11 8C     	ld (CTRL_DESPLZ),a
 615+ 9DA2 3A 1C 8C     	ld a,(Cuad_objeto)
 616+ 9DA5 E6 01        	and 1
 617+ 9DA7 28 0A        	jr z,2F
 618+ 9DA9 2A 0D 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 619+ 9DAC 2B           	dec hl
 620+ 9DAD 22 0D 8C     	ld (Posicion_actual),hl
 621+ 9DB0 CD DA 95     	call Genera_coordenadas
 622+ 9DB3
 623+ 9DB3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 624+ 9DB3
 625+ 9DB3 CD EB 91     2 call Inicia_puntero_objeto_izq
 626+ 9DB6 C9           3 ret
 627+ 9DB7
 628+ 9DB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 629+ 9DB7              ;
 630+ 9DB7              ;	19/10/22
 631+ 9DB7              ;
 632+ 9DB7              ;	(cp 29) para un Amadeus de 3 Columns.
 633+ 9DB7              ;	(cp 30)   ""  ""    ""     2 Columns.
 634+ 9DB7
 635+ 9DB7 3A FE 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 636+ 9DBA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 637+ 9DBC C9           	ret
 638+ 9DBD
 639+ 9DBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 640+ 9DBD              ;
 641+ 9DBD              ;	19/10/22
 642+ 9DBD              ;
 643+ 9DBD              ;	(cp 2) para un Amadeus de 3 Columns.
 644+ 9DBD              ;	(cp 1)   ""  ""    ""     2 Columns.
 645+ 9DBD
 646+ 9DBD 3A FE 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 647+ 9DC0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 648+ 9DC2 C9           	ret
 649+ 9DC3
 650+ 9DC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9DC3              ;
 652+ 9DC3              ;	24/7/22
 653+ 9DC3              ;
 654+ 9DC3              ;	Inc_CTRL_DESPLZ
 655+ 9DC3              ;
 656+ 9DC3              ;
 657+ 9DC3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9DC3
 659+ 9DC3 21 11 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9DC6 3A 23 8C     	ld a,(Vel_right)
 661+ 9DC9 A7           	and a
 662+ 9DCA 28 06        	jr z,1F
 663+ 9DCC 47           	ld b,a
 664+ 9DCD 34           3 inc (hl)
 665+ 9DCE 10 FD        	djnz 3B
 666+ 9DD0 18 01        	jr 2F
 667+ 9DD2 34           1 inc (hl)
 668+ 9DD3 C9           2 ret
 669+ 9DD4
 670+ 9DD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9DD4              ;
 672+ 9DD4              ;	5/2/23
 673+ 9DD4              ;
 674+ 9DD4              ;	Dec_CTRL_DESPLZ
 675+ 9DD4              ;
 676+ 9DD4              ;
 677+ 9DD4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 678+ 9DD4
 679+ 9DD4 21 11 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 680+ 9DD7 3A 22 8C     	ld a,(Vel_left)
 681+ 9DDA A7           	and a
 682+ 9DDB 28 06        	jr z,1F
 683+ 9DDD 47           	ld b,a
 684+ 9DDE 35           3 dec (hl)
 685+ 9DDF 10 FD        	djnz 3B
 686+ 9DE1 18 01        	jr 2F
 687+ 9DE3 35           1 dec (hl)
 688+ 9DE4 C9           2 ret
 689+ 9DE5
 690+ 9DE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 691+ 9DE5
 692+ 9DE5 2A 0D 8C     Reaparece_derecha ld hl,(Posicion_actual)
 693+ 9DE8 01 1F 00     	ld bc,31
 694+ 9DEB A7           	and a
 695+ 9DEC ED 4A        	adc hl,bc
 696+ 9DEE 22 0D 8C     	ld (Posicion_actual),hl
 697+ 9DF1 21 0A 8C     	ld hl,Ctrl_0														; $xxx1
 698+ 9DF4 CB C6        	set 0,(hl)
 699+ 9DF6 C9           	ret
 700+ 9DF7
 701+ 9DF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 702+ 9DF7
 703+ 9DF7 2A 0D 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 704+ 9DFA 01 1F 00     	ld bc,31
 705+ 9DFD A7           	and a
 706+ 9DFE ED 42        	sbc hl,bc
 707+ 9E00 22 0D 8C     	ld (Posicion_actual),hl 											; $xx1x
 708+ 9E03 21 0A 8C     	ld hl,Ctrl_0
 709+ 9E06 CB CE        	set 1,(hl)
 710+ 9E08 C9           	ret
 711+ 9E09
 712+ 9E09              ; ---------- ---------- ---------- ---------- ---------- ----------
 713+ 9E09
 714+ 9E09 24           Reaparece_abajo inc h
 715+ 9E0A 01 E0 17     	ld bc,$17e0
 716+ 9E0D A7           	and a
 717+ 9E0E ED 4A        	adc hl,bc
 718+ 9E10 22 0D 8C     	ld (Posicion_actual),hl
 719+ 9E13 21 0A 8C     	ld hl,Ctrl_0
 720+ 9E16 CB D6        	set 2,(hl)
 721+ 9E18 C9           	ret
 722+ 9E19
 723+ 9E19              ; ---------- ---------- ---------- ---------- ---------- ----------
 724+ 9E19
 725+ 9E19 01 E0 17     Reaparece_arriba ld bc,$17e0
 726+ 9E1C A7           	and a
 727+ 9E1D ED 42        	sbc hl,bc
 728+ 9E1F 22 0D 8C     	ld (Posicion_actual),hl
 729+ 9E22 21 0A 8C     	ld hl,Ctrl_0
 730+ 9E25 CB DE        	set 3,(hl)
 731+ 9E27 C9           	ret
 732+ 9E28
 733+ 9E28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 734+ 9E28              ;
 735+ 9E28              ;	15/07/23
 736+ 9E28
 737+ 9E28              Reinicio
 738+ 9E28
 739+ 9E28              ; Vamos a reiniciar los punteros y variables de movimiento.
 740+ 9E28
 741+ 9E28 AF           	xor a
 742+ 9E29 21 32 8C     	ld hl,Puntero_indice_mov_bucle
 743+ 9E2C CD 4A 9E     	call Limpia_contenido_hl
 744+ 9E2F
 745+ 9E2F 21 0D 8C     	ld hl,Posicion_actual
 746+ 9E32 CD 4A 9E     	call Limpia_contenido_hl
 747+ 9E35
 748+ 9E35 CD 42 94     	call Situa_Puntero_indice_mov
 749+ 9E38 CD 49 9F     	call Inicia_Puntero_mov
 750+ 9E3B
 751+ 9E3B 21 34 8C     	ld hl,Incrementa_puntero
 752+ 9E3E 06 05        	ld b,5
 753+ 9E40 77           1 ld (hl),a
 754+ 9E41 23           	inc hl
 755+ 9E42 10 FC        	djnz 1B
 756+ 9E44
 757+ 9E44 21 09 8C     	ld hl,Ctrl_2
 758+ 9E47 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 759+ 9E49
 760+ 9E49 C9           	ret
 761+ 9E4A
 762+ 9E4A 77           Limpia_contenido_hl	ld (hl),a
 763+ 9E4B 23           	inc hl
 764+ 9E4C 77           	ld (hl),a
 765+ 9E4D C9           	ret
 766+ 9E4E
 767+ 9E4E              ; ----------------------------------------------------------------------------------------------------------------
 768+ 9E4E              ;
 769+ 9E4E              ;	18/6/24
 770+ 9E4E              ;
 771+ 9E4E
 772+ 9E4E              Amadeus_a_izquierda
 773+ 9E4E
 774+ 9E4E              ;	Actualiza contador de movimientos.
 775+ 9E4E
 776+ 9E4E 21 B7 89     	ld hl,Comm_Amadeus
 777+ 9E51 35           	dec (hl)
 778+ 9E52 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 779+ 9E54
 780+ 9E54 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 781+ 9E57 2B           	dec hl
 782+ 9E58 2B           	dec hl
 783+ 9E59 2B           	dec hl
 784+ 9E5A 2B           	dec hl
 785+ 9E5B 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 786+ 9E5E
 787+ 9E5E 21 74 8C     	ld hl,Ctrl_3
 788+ 9E61 CB EE        	set 5,(hl)
 789+ 9E63
 790+ 9E63 C9           	ret
 791+ 9E64
 792+ 9E64 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 793+ 9E65 C9           	ret
 794+ 9E66
 795+ 9E66
 796+ 9E66              Amadeus_a_derecha
 797+ 9E66
 798+ 9E66              ;	Actualiza contador de movimientos.
 799+ 9E66
 800+ 9E66 21 B7 89     	ld hl,Comm_Amadeus
 801+ 9E69 34           	inc (hl)
 802+ 9E6A 3E 7A        	ld a,$7a
 803+ 9E6C BE           	cp (hl)
 804+ 9E6D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 805+ 9E6F
 806+ 9E6F 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 807+ 9E72 23           	inc hl
 808+ 9E73 23           	inc hl
 809+ 9E74 23           	inc hl
 810+ 9E75 23           	inc hl
 811+ 9E76 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 812+ 9E79
 813+ 9E79 21 74 8C     	ld hl,Ctrl_3
 814+ 9E7C CB EE        	set 5,(hl)
 815+ 9E7E C9           	ret
 816+ 9E7F
 817+ 9E7F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 818+ 9E80 C9           	ret
# file closed: Direcciones.asm
2369  9E81              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E81              ; ----- ----- ----- ----- -----
   2+ 9E81              ;
   3+ 9E81              ;   28/12/23
   4+ 9E81
   5+ 9E81              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
   6+ 9E81
   7+ 9E81              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
   8+ 9E81
   9+ 9E81              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  10+ 9E81              ;                               Izquierda_y_subiendo+8 (11)
  11+ 9E81              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  12+ 9E81              ;                               Izquierda_y_subiendo+8 (8)
  13+ 9E81              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  14+ 9E81              ;                               Izquierda_y_subiendo+8 (8)
  15+ 9E81              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  16+ 9E81              ;                               Izquierda_y_subiendo+8 (8)
  17+ 9E81              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  18+ 9E81              ;                               Izquierda_y_subiendo+8 (8)
  19+ 9E81              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  20+ 9E81              ;                               Izquierda_y_subiendo+8 (7)
  21+ 9E81              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  22+ 9E81              ;                               Izquierda_y_subiendo+8 (7)
  23+ 9E81              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  24+ 9E81              ;                               Izquierda_y_subiendo+8 (7)
  25+ 9E81              Movimiento
  26+ 9E81
  27+ 9E81              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  28+ 9E81
  29+ 9E81 3A 09 8C         ld a,(Ctrl_2)
  30+ 9E84 CB 57            bit 2,a
  31+ 9E86 20 1B            jr nz, Desplazamiento_iniciado
  32+ 9E88
  33+ 9E88 2A 30 8C         ld hl,(Puntero_mov)
  34+ 9E8B 7E               ld a,(hl)
  35+ 9E8C
  36+ 9E8C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  37+ 9E8C
  38+ 9E8C              Inicia_desplazamiento.
  39+ 9E8C
  40+ 9E8C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  41+ 9E8C
  42+ 9E8C CD 7F 9F         call Ajusta_velocidad_desplazamiento
  43+ 9E8F
  44+ 9E8F              ; Iniciamos (Repetimos_mov).
  45+ 9E8F
  46+ 9E8F 7E               ld a,(hl)
  47+ 9E90 E6 0F            and $0f
  48+ 9E92 32 36 8C         ld (Repetimos_desplazamiento),a
  49+ 9E95 32 37 8C         ld (Repetimos_desplazamiento_backup),a
  50+ 9E98
  51+ 9E98              ; Iniciamos (Cola_de_desplazamiento).
  52+ 9E98
  53+ 9E98 23               inc hl
  54+ 9E99 7E               ld a,(hl)
  55+ 9E9A 32 39 8C         ld (Cola_de_desplazamiento),a
  56+ 9E9D 2B               dec hl
  57+ 9E9E
  58+ 9E9E 21 09 8C         ld hl,Ctrl_2
  59+ 9EA1 CB D6            set 2,(hl)
  60+ 9EA3
  61+ 9EA3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  62+ 9EA3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  63+ 9EA3
  64+ 9EA3              Desplazamiento_iniciado
  65+ 9EA3
  66+ 9EA3 CD 53 9F         call Aplica_desplazamiento
  67+ 9EA6
  68+ 9EA6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  69+ 9EA6
  70+ 9EA6 3A 74 8C         ld a,(Ctrl_3)
  71+ 9EA9 CB 4F            bit 1,a
  72+ 9EAB C0               ret nz
  73+ 9EAC
  74+ 9EAC 21 36 8C     3 ld hl,Repetimos_desplazamiento
  75+ 9EAF 35               dec (hl)
  76+ 9EB0 C0               ret nz
  77+ 9EB1
  78+ 9EB1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  79+ 9EB1              ; Hay que volver a ejecutar este desplazamiento ???.
  80+ 9EB1              ; Analiza (Cola_de_desplazamiento).
  81+ 9EB1
  82+ 9EB1 3A 39 8C     Cola ld a,(Cola_de_desplazamiento)
  83+ 9EB4 A7               and a
  84+ 9EB5 CC A8 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  85+ 9EB8 28 30            jr z,Reinicia_el_movimiento
  86+ 9EBA
  87+ 9EBA FE FF            cp $ff
  88+ 9EBC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  89+ 9EBE
  90+ 9EBE FE FE            cp $fe
  91+ 9EC0 CC 2D 9F         call z,Fijamos_bucle
  92+ 9EC3 28 25            jr z,Reinicia_el_movimiento
  93+ 9EC5
  94+ 9EC5 FE FD            cp $fd
  95+ 9EC7 20 11            jr nz,1F
  96+ 9EC9
  97+ 9EC9              ; ---
  98+ 9EC9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  99+ 9EC9
 100+ 9EC9 3A 09 8C         ld a,(Ctrl_2)
 101+ 9ECC CB 5F            bit 3,a
 102+ 9ECE 20 1A            jr nz,Reinicia_el_movimiento
 103+ 9ED0
 104+ 9ED0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 105+ 9ED0
 106+ 9ED0 21 09 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 107+ 9ED3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 108+ 9ED5
 109+ 9ED5 CD 3E 9F         call Inicia_Repetimos_movimiento
 110+ 9ED8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 111+ 9EDA              ; ---
 112+ 9EDA
 113+ 9EDA FE 01        1 cp 1
 114+ 9EDC CA 17 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 115+ 9EDF
 116+ 9EDF 3D               dec a
 117+ 9EE0 32 39 8C         ld (Cola_de_desplazamiento),a
 118+ 9EE3
 119+ 9EE3 3A 37 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 120+ 9EE6 32 36 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 121+ 9EE9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 122+ 9EE9 C9               ret
 123+ 9EEA
 124+ 9EEA              Reinicia_el_movimiento
 125+ 9EEA
 126+ 9EEA 3A 09 8C         ld a,(Ctrl_2)
 127+ 9EED CB 5F            bit 3,a
 128+ 9EEF 28 1B            jr z,2F
 129+ 9EF1
 130+ 9EF1              ; (Cola_de_desplazamiento)="254".
 131+ 9EF1
 132+ 9EF1 21 38 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 133+ 9EF4 35               dec (hl)
 134+ 9EF5 20 15            jr nz,2F
 135+ 9EF7
 136+ 9EF7              ; Fin de las repeticiones del último movimiento.
 137+ 9EF7
 138+ 9EF7 21 09 8C         ld hl,Ctrl_2
 139+ 9EFA CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 140+ 9EFC
 141+ 9EFC 2A 30 8C         ld hl,(Puntero_mov)
 142+ 9EFF 23               inc hl
 143+ 9F00 23               inc hl
 144+ 9F01 23               inc hl
 145+ 9F02 22 30 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 146+ 9F05              ;                                                               ; _ para ejecutar su mandato. :)
 147+ 9F05 7E               ld a,(hl)
 148+ 9F06 32 39 8C         ld (Cola_de_desplazamiento),a
 149+ 9F09
 150+ 9F09 C3 B1 9E         jp Cola
 151+ 9F0C
 152+ 9F0C CD 49 9F     2 call Inicia_Puntero_mov
 153+ 9F0F
 154+ 9F0F 21 09 8C         ld hl,Ctrl_2
 155+ 9F12 CB 96            res 2,(hl)
 156+ 9F14
 157+ 9F14 C3 81 9E         jp Movimiento
 158+ 9F17
 159+ 9F17              Siguiente_desplazamiento
 160+ 9F17
 161+ 9F17              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 162+ 9F17              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 163+ 9F17
 164+ 9F17 21 09 8C         ld hl,Ctrl_2
 165+ 9F1A CB 96            res 2,(hl)
 166+ 9F1C
 167+ 9F1C 2A 30 8C         ld hl,(Puntero_mov)
 168+ 9F1F 23               inc hl
 169+ 9F20 23               inc hl
 170+ 9F21 22 30 8C         ld (Puntero_mov),hl
 171+ 9F24
 172+ 9F24 7E               ld a,(hl)
 173+ 9F25 A7               and a
 174+ 9F26 CC A8 9F         call z,Incrementa_Puntero_indice_mov
 175+ 9F29 CA EA 9E         jp z,Reinicia_el_movimiento
 176+ 9F2C
 177+ 9F2C C9               ret
 178+ 9F2D
 179+ 9F2D              ; Subrutinas -----------------------------------------
 180+ 9F2D              ; ---------- --------- --------- ---------- ----------
 181+ 9F2D              ;
 182+ 9F2D              ;   24/07/23
 183+ 9F2D              ;
 184+ 9F2D              ;   Fijamos_bucle
 185+ 9F2D              ;
 186+ 9F2D              ;
 187+ 9F2D
 188+ 9F2D              Fijamos_bucle
 189+ 9F2D
 190+ 9F2D 3A 34 8C         ld a,(Incrementa_puntero)
 191+ 9F30 3C               inc a
 192+ 9F31 32 35 8C         ld (Incrementa_puntero_backup),a
 193+ 9F34
 194+ 9F34 CD A8 9F         call Incrementa_Puntero_indice_mov
 195+ 9F37 2A 2E 8C         ld hl,(Puntero_indice_mov)
 196+ 9F3A 22 32 8C         ld (Puntero_indice_mov_bucle),hl
 197+ 9F3D C9               ret
 198+ 9F3E
 199+ 9F3E              ; ---------- --------- --------- ---------- ----------
 200+ 9F3E              ;
 201+ 9F3E              ;   07/7/23
 202+ 9F3E              ;
 203+ 9F3E              ;   Inicia_Repetimos_movimiento
 204+ 9F3E              ;
 205+ 9F3E              ;
 206+ 9F3E
 207+ 9F3E              Inicia_Repetimos_movimiento
 208+ 9F3E
 209+ 9F3E              ; Iniciamos (Repetimos_movimiento).
 210+ 9F3E
 211+ 9F3E DD 2A 30 8C      ld ix,(Puntero_mov)
 212+ 9F42 DD 7E 02         ld a,(ix+2)
 213+ 9F45 32 38 8C         ld (Repetimos_movimiento),a
 214+ 9F48
 215+ 9F48 C9               ret
 216+ 9F49
 217+ 9F49              ; ---------- --------- --------- ---------- ----------
 218+ 9F49              ;
 219+ 9F49              ;   26/6/23
 220+ 9F49              ;
 221+ 9F49              ;   Inicia_Puntero_mov
 222+ 9F49              ;
 223+ 9F49              ;
 224+ 9F49
 225+ 9F49 2A 2E 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 226+ 9F4C CD C3 91         call Extrae_address
 227+ 9F4F 22 30 8C         ld (Puntero_mov),hl
 228+ 9F52 C9               ret
 229+ 9F53
 230+ 9F53              ; ---------- --------- --------- ---------- ----------
 231+ 9F53              ;
 232+ 9F53              ;   27/06/23
 233+ 9F53              ;
 234+ 9F53              ;   Aplica_movimiento.
 235+ 9F53
 236+ 9F53              Aplica_desplazamiento
 237+ 9F53
 238+ 9F53              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 239+ 9F53
 240+ 9F53 2A 30 8C         ld hl, (Puntero_mov)
 241+ 9F56
 242+ 9F56 7E               ld a,(hl)
 243+ 9F57 E6 F0            and $f0
 244+ 9F59 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 245+ 9F5A
 246+ 9F5A CB 7E            bit 7,(hl)
 247+ 9F5C 28 03            jr z,1F
 248+ 9F5E CD 49 9B         call Mov_up
 249+ 9F61 2A 30 8C     1 ld hl, (Puntero_mov)
 250+ 9F64 CB 76            bit 6,(hl)
 251+ 9F66 28 03            jr z,2F
 252+ 9F68 CD 15 9B         call Mov_down
 253+ 9F6B
 254+ 9F6B              ; Se ha aplicado reinicio ???
 255+ 9F6B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 256+ 9F6B
 257+ 9F6B              ;    ld a,(Ctrl_3)
 258+ 9F6B              ;    bit 1,a
 259+ 9F6B              ;    ret nz
 260+ 9F6B
 261+ 9F6B 2A 30 8C     2 ld hl, (Puntero_mov)
 262+ 9F6E CB 6E            bit 5,(hl)
 263+ 9F70 28 03            jr z,3F
 264+ 9F72 CD A0 9C         call Mov_left
 265+ 9F75 2A 30 8C     3 ld hl, (Puntero_mov)
 266+ 9F78 CB 66            bit 4,(hl)
 267+ 9F7A C8               ret z
 268+ 9F7B CD 87 9B         call Mov_right
 269+ 9F7E C9               ret
 270+ 9F7F
 271+ 9F7F              ; ---------- --------- --------- ---------- ----------
 272+ 9F7F              ;
 273+ 9F7F              ;   26/06/23
 274+ 9F7F              ;
 275+ 9F7F              ;   Ajusta_velocidad_desplazamiento.
 276+ 9F7F
 277+ 9F7F              Ajusta_velocidad_desplazamiento
 278+ 9F7F
 279+ 9F7F              ; 1er byte de la cadena de movimiento.
 280+ 9F7F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 281+ 9F7F
 282+ 9F7F CD 9D 9F         call Extrae_nibble_alto
 283+ 9F82
 284+ 9F82 32 24 8C         ld (Vel_up),a
 285+ 9F85 79               ld a,c
 286+ 9F86 E6 0F            and $0f
 287+ 9F88 32 25 8C         ld (Vel_down),a
 288+ 9F8B
 289+ 9F8B              ; Saltamos al 2º byte de la cadena de movimiento.
 290+ 9F8B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 291+ 9F8B
 292+ 9F8B 23               inc hl
 293+ 9F8C CD 9D 9F         call Extrae_nibble_alto
 294+ 9F8F
 295+ 9F8F 32 22 8C         ld (Vel_left),a
 296+ 9F92 79               ld a,c
 297+ 9F93 E6 0F            and $0f
 298+ 9F95 32 23 8C         ld (Vel_right),a
 299+ 9F98
 300+ 9F98              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 301+ 9F98
 302+ 9F98 23               inc hl
 303+ 9F99 22 30 8C         ld (Puntero_mov),hl
 304+ 9F9C C9               ret
 305+ 9F9D
 306+ 9F9D 06 04        Extrae_nibble_alto ld b,4
 307+ 9F9F 7E               ld a,(hl)
 308+ 9FA0 4F               ld c,a
 309+ 9FA1 E6 F0            and $f0
 310+ 9FA3 CB 3F        1 srl a
 311+ 9FA5 10 FC            djnz 1B
 312+ 9FA7 C9               ret
 313+ 9FA8
 314+ 9FA8              ; ---------- --------- --------- ---------- ----------
 315+ 9FA8              ;
 316+ 9FA8              ;   5/7/23
 317+ 9FA8              ;
 318+ 9FA8              ;   Incrementa_Puntero_indice_mov
 319+ 9FA8
 320+ 9FA8              Incrementa_Puntero_indice_mov
 321+ 9FA8
 322+ 9FA8 21 34 8C         ld hl,Incrementa_puntero
 323+ 9FAB 34               inc (hl)
 324+ 9FAC
 325+ 9FAC 2A 2E 8C         ld hl,(Puntero_indice_mov)
 326+ 9FAF 01 02 00         ld bc,2
 327+ 9FB2 A7               and a
 328+ 9FB3 09               add hl,bc
 329+ 9FB4 22 2E 8C         ld (Puntero_indice_mov),hl
 330+ 9FB7
 331+ 9FB7 7E               ld a,(hl)
 332+ 9FB8 A7               and a
 333+ 9FB9
 334+ 9FB9              ;! STOP. Fin del patrón de movimiento de la entidad.
 335+ 9FB9
 336+ 9FB9              ;    jr z,$
 337+ 9FB9
 338+ 9FB9              ;! Reinicia el Patrón de movimiento.
 339+ 9FB9
 340+ 9FB9 CC BE 9F         call z,Inicializa_Puntero_indice_mov_2
 341+ 9FBC
 342+ 9FBC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 343+ 9FBD
 344+ 9FBD C9               ret
 345+ 9FBE
 346+ 9FBE              ; ---------- --------- --------- ---------- ----------
 347+ 9FBE              ;
 348+ 9FBE              ;   15/01/24
 349+ 9FBE              ;
 350+ 9FBE              ;   Inicializa_Puntero_indice_mov
 351+ 9FBE
 352+ 9FBE              Inicializa_Puntero_indice_mov_2
 353+ 9FBE
 354+ 9FBE              ; Existe etiqueta de bucle principal???
 355+ 9FBE
 356+ 9FBE 2A 32 8C         ld hl,(Puntero_indice_mov_bucle)
 357+ 9FC1 24               inc h
 358+ 9FC2 25               dec h
 359+ 9FC3 28 05            jr z,2F
 360+ 9FC5
 361+ 9FC5 22 2E 8C         ld (Puntero_indice_mov),hl
 362+ 9FC8 18 14            jr 3F
 363+ 9FCA
 364+ 9FCA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 365+ 9FCA
 366+ 9FCA 3A 34 8C     2 ld a,(Incrementa_puntero)
 367+ 9FCD 47               ld b,a
 368+ 9FCE
 369+ 9FCE 2A 2E 8C         ld hl,(Puntero_indice_mov)
 370+ 9FD1 2B           1 dec hl
 371+ 9FD2 2B               dec hl
 372+ 9FD3 10 FC            djnz 1B
 373+ 9FD5 22 2E 8C         ld (Puntero_indice_mov),hl
 374+ 9FD8
 375+ 9FD8 AF               xor a
 376+ 9FD9 32 34 8C         ld (Incrementa_puntero),a
 377+ 9FDC 18 06            jr 4F
 378+ 9FDE
 379+ 9FDE 3A 35 8C     3 ld a,(Incrementa_puntero_backup)
 380+ 9FE1 32 34 8C         ld (Incrementa_puntero),a
 381+ 9FE4 C9           4 ret
 382+ 9FE5
 383+ 9FE5              ; ----------------------------------------------------------------------
 384+ 9FE5              ;
 385+ 9FE5              ;   24/11/24
 386+ 9FE5              ;
 387+ 9FE5              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 388+ 9FE5
 389+ 9FE5 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 390+ 9FE8 CD 53 95         call Calcula_salto_en_BC
 391+ 9FEB 21 26 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 392+ 9FEE A7               and a
 393+ 9FEF ED 4A            adc hl,bc
 394+ 9FF1 C9               ret
 395+ 9FF2
 396+ 9FF2              ; ----------------------------------------------------------------------
 397+ 9FF2              ;
 398+ 9FF2              ;   24/11/24
 399+ 9FF2              ;
 400+ 9FF2              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 401+ 9FF2              ;
 402+ 9FF2              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 403+ 9FF2
 404+ 9FF2 4E           Transfiere_datos_de_contadores ld c,(hl)
 405+ 9FF3 23               inc hl
 406+ 9FF4 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 407+ 9FF5 DD 71 09         ld (ix+9),c
 408+ 9FF8 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 409+ 9FFB C9               ret
 410+ 9FFC
# file closed: Movimiento.asm
2370  9FFC              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9FFC              ; --------------------------------------------------------------------------------------
   2+ 9FFC              ;
   3+ 9FFC              ;   25/10/24
   4+ 9FFC              ;
   5+ 9FFC
   6+ 9FFC              Pinta_disparos_Entidades
   7+ 9FFC
   8+ 9FFC ED 73 4C 8C      ld (Stack),sp
   9+ A000 ED 7B 5E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A004
  11+ A004 3E 02            ld a,2
  12+ A006 08               ex af,af
  13+ A007
  14+ A007 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A009              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A009              ;                                     _ No encontraría "0".
  17+ A009 FD E1        4 pop iy
  18+ A00B D1               pop de                          ; 1er .db IYL
  19+ A00C              ;                                   ; 2º  .db IYH
  20+ A00C              ;                                   ; 3er .db E.
  21+ A00C              ;   Album vacío ???
  22+ A00C
  23+ A00C FD 7D            ld a,iyl
  24+ A00E FD 84            add iyh
  25+ A010 83               add e
  26+ A011 28 1F            jr z,1F
  27+ A013
  28+ A013              ;   Imprime album, (contiene datos).
  29+ A013
  30+ A013 3B               dec sp
  31+ A014
  32+ A014 E1               pop hl                          ; Puntero de impresión en HL.
  33+ A015
  34+ A015              ; Imprime el 1er scanline del disparo.
  35+ A015
  36+ A015 FD 7D            ld a,iyl
  37+ A017 AE               xor (hl)
  38+ A018 77               ld (hl),a
  39+ A019
  40+ A019 2C               inc l
  41+ A01A
  42+ A01A FD 7C            ld a,iyh
  43+ A01C AE               xor (hl)
  44+ A01D 77               ld (hl),a
  45+ A01E
  46+ A01E 2C               inc l
  47+ A01F
  48+ A01F 7B               ld a,e
  49+ A020 AE               xor (hl)
  50+ A021 77               ld (hl),a
  51+ A022
  52+ A022              ; Imprime el 2º scanline del disparo.
  53+ A022
  54+ A022 E1               pop hl
  55+ A023
  56+ A023 FD 7D            ld a,iyl
  57+ A025 AE               xor (hl)
  58+ A026 77               ld (hl),a
  59+ A027
  60+ A027 2C               inc l
  61+ A028
  62+ A028 FD 7C            ld a,iyh
  63+ A02A AE               xor (hl)
  64+ A02B 77               ld (hl),a
  65+ A02C
  66+ A02C 2C               inc l
  67+ A02D
  68+ A02D 7B               ld a,e
  69+ A02E AE               xor (hl)
  70+ A02F 77               ld (hl),a
  71+ A030
  72+ A030 10 D7            djnz 4B
  73+ A032
  74+ A032 08           1 ex af,af
  75+ A033 3D               dec a
  76+ A034 20 05            jr nz,2F
  77+ A036
  78+ A036 ED 7B 4C 8C      ld sp,(Stack)
  79+ A03A C9               ret
  80+ A03B
  81+ A03B ED 7B 5C 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A03F 08               ex af,af
  83+ A040 18 C5            jr 3B
  84+ A042
  85+ A042              ; --------------------------------------------------------------------------------------
  86+ A042              ;
  87+ A042              ;   2/12/24
  88+ A042              ;
  89+ A042
  90+ A042              Motor_de_disparos_entidades
  91+ A042
  92+ A042 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A045 FE 07            cp 7
  94+ A047 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A048
  96+ A048 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A04A 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A04D
  99+ A04D CD C3 91     1 call Extrae_address
 100+ A050 1C               inc e
 101+ A051 1C               inc e
 102+ A052 ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A056
 104+ A056               ; Caja vacía ???
 105+ A056
 106+ A056 2D               dec l
 107+ A057 7E               ld a,(hl)
 108+ A058 A7               and a
 109+ A059 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A05B
 111+ A05B              ; --- Trabajamos con caja:
 112+ A05B
 113+ A05B 2C               inc l
 114+ A05C
 115+ A05C              ; --- Existe posibilidad de impacto ???
 116+ A05C
 117+ A05C 3A 9D 8C         ld a,(Shield)
 118+ A05F A7               and a
 119+ A060 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A062
 121+ A062 CB 46            bit 0,(hl)
 122+ A064 C4 A4 A0         call nz, Comprueba_impacto_con_Amadeus
 123+ A067 20 37            jr nz,3F
 124+ A069
 125+ A069 CD 2B A1     6 call Rota_disparo_si_procede
 126+ A06C
 127+ A06C              ; ------------------------------------------------------------
 128+ A06C
 129+ A06C 2D               dec l
 130+ A06D 2D               dec l
 131+ A06E
 132+ A06E CD C3 91         call Extrae_address
 133+ A071
 134+ A071              ;   (Puntero_de_impresion) del disparo en HL
 135+ A071              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A071
 137+ A071 3A 76 8C         ld a,(Ctrl_5)
 138+ A074 CB 57            bit 2,a
 139+ A076 28 09            jr z,4F
 140+ A078
 141+ A078 CB 97            res 2,a
 142+ A07A 32 76 8C         ld (Ctrl_5),a
 143+ A07D 2C               inc l
 144+ A07E 2C               inc l
 145+ A07F 18 0C            jr 5F
 146+ A081
 147+ A081 CB 5F        4 bit 3,a
 148+ A083 28 08            jr z,5F
 149+ A085
 150+ A085 CB 9F            res 3,a
 151+ A087 32 76 8C         ld (Ctrl_5),a
 152+ A08A 2D               dec l
 153+ A08B 2D               dec l
 154+ A08C 2D               dec l
 155+ A08D
 156+ A08D              ; ---------------------------------------------------------------------
 157+ A08D
 158+ A08D              ;! Velocidad del disparo de entidades.
 159+ A08D
 160+ A08D CD CF 9A     5 call NextScan
 161+ A090 CD CF 9A         call NextScan
 162+ A093
 163+ A093              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A093
 165+ A093 CD 08 A1         call Fin_de_disparo_de_entidad
 166+ A096
 167+ A096 EB               ex de,hl
 168+ A097
 169+ A097 73               ld (hl),e
 170+ A098 23               inc hl
 171+ A099 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A09A
 173+ A09A 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A09D 18 02            jr 2F
 175+ A09F
 176+ A09F C9               ret
 177+ A0A0
 178+ A0A0 EB           3 ex de,hl
 179+ A0A1 10 AA        2 djnz 1B
 180+ A0A3
 181+ A0A3 C9               ret
 182+ A0A4
 183+ A0A4              ; ------------- ------------- ------------
 184+ A0A4              ;
 185+ A0A4              ;   1/11/24
 186+ A0A4
 187+ A0A4              Comprueba_impacto_con_Amadeus
 188+ A0A4
 189+ A0A4              ;   El disparo se encuentra en zona de Amadeus.
 190+ A0A4              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A0A4
 192+ A0A4              ;   Modificamos registros, así que guardamos ...
 193+ A0A4
 194+ A0A4 C5               push bc
 195+ A0A5 E5               push hl
 196+ A0A6 D5               push de
 197+ A0A7
 198+ A0A7 2D               dec l
 199+ A0A8 2D               dec l
 200+ A0A9
 201+ A0A9 CD C3 91         call Extrae_address
 202+ A0AC
 203+ A0AC 3A AF 89         ld a,(CX_Amadeus)
 204+ A0AF 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A0B0
 206+ A0B0 7D               ld a,l
 207+ A0B1 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A0B3
 209+ A0B3 06 03            ld b,3
 210+ A0B5
 211+ A0B5 B9           1 cp c
 212+ A0B6 28 15            jr z,Coincidencia
 213+ A0B8 0C               inc c
 214+ A0B9 10 FA            djnz 1B
 215+ A0BB
 216+ A0BB 0D               dec c
 217+ A0BC 0D               dec c
 218+ A0BD 0D               dec c
 219+ A0BE
 220+ A0BE 3C               inc a
 221+ A0BF B9               cp c
 222+ A0C0 28 0B            jr z,Coincidencia
 223+ A0C2
 224+ A0C2 3C               inc a
 225+ A0C3 B9               cp c
 226+ A0C4 28 07            jr z,Coincidencia
 227+ A0C6
 228+ A0C6 D1           2 pop de
 229+ A0C7 E1               pop hl
 230+ A0C8 C1               pop bc
 231+ A0C9
 232+ A0C9              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A0C9
 234+ A0C9 CB 86            res 0,(hl)
 235+ A0CB AF               xor a                       ; Z before RET.
 236+ A0CC C9               ret
 237+ A0CD
 238+ A0CD              Coincidencia
 239+ A0CD
 240+ A0CD              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A0CD              ;   Existe posibilidad de impacto.
 242+ A0CD              ;   Vamos a averiguarlo ...
 243+ A0CD
 244+ A0CD 1D               dec e
 245+ A0CE 1D               dec e
 246+ A0CF 1D               dec e
 247+ A0D0
 248+ A0D0              ; DE en Puntero_objeto del disparo.
 249+ A0D0              ; HL en Puntero_de_impresión del disparo.
 250+ A0D0
 251+ A0D0              ; Comparador:
 252+ A0D0
 253+ A0D0 06 03            ld b,3
 254+ A0D2
 255+ A0D2 1A           3 ld a,(de)
 256+ A0D3 4F               ld c,a
 257+ A0D4 A6               and (hl)
 258+ A0D5 B9               cp c
 259+ A0D6 20 06            jr nz,Amadeus_impactado
 260+ A0D8
 261+ A0D8 2C               inc l
 262+ A0D9 1C               inc e
 263+ A0DA
 264+ A0DA 10 F6            djnz 3B
 265+ A0DC
 266+ A0DC 18 E8            jr 2B
 267+ A0DE
 268+ A0DE              Amadeus_impactado
 269+ A0DE
 270+ A0DE              ; Borramos disparo.
 271+ A0DE
 272+ A0DE              ;   Exclusion.
 273+ A0DE
 274+ A0DE D1               pop de
 275+ A0DF E1               pop hl
 276+ A0E0
 277+ A0E0 E5               push hl
 278+ A0E1 D5               push de
 279+ A0E2
 280+ A0E2 CD 96 A1         call Borra_6_bytes
 281+ A0E5
 282+ A0E5 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A0E8 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A0E9
 285+ A0E9              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A0E9
 287+ A0E9 21 B2 89         ld hl,Impacto_Amadeus
 288+ A0EC 36 01            ld (hl),1
 289+ A0EE
 290+ A0EE              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A0EE              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A0EE
 293+ A0EE 3A B3 89         ld a,(p.imp.amadeus)
 294+ A0F1 FE DE            cp $de
 295+ A0F3 20 04            jr nz,1F
 296+ A0F5
 297+ A0F5 3D               dec a
 298+ A0F6 32 B3 89         ld (p.imp.amadeus),a
 299+ A0F9
 300+ A0F9              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A0F9
 302+ A0F9 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A0FC 21 B5 89         ld hl,Pamm_Amadeus
 304+ A0FF
 305+ A0FF 73               ld (hl),e
 306+ A100 23               inc hl
 307+ A101 72               ld (hl),d
 308+ A102
 309+ A102 D1               pop de
 310+ A103 E1               pop hl
 311+ A104 C1               pop bc
 312+ A105
 313+ A105 AF               xor a
 314+ A106 3C               inc a               ; NZ before RET.
 315+ A107 C9               ret
 316+ A108
 317+ A108              ; ------------- ------------- ------------
 318+ A108              ;
 319+ A108              ;   31/10/24
 320+ A108
 321+ A108              Fin_de_disparo_de_entidad
 322+ A108
 323+ A108              ; Estamos en zona de Amadeus ??
 324+ A108
 325+ A108 7C               ld a,h
 326+ A109 FE 54            cp $54
 327+ A10B 38 0D            jr c,1F
 328+ A10D
 329+ A10D D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A10E
 331+ A10E 5D               ld e,l
 332+ A10F 54               ld d,h
 333+ A110
 334+ A110 21 E0 57         ld hl,$57e0
 335+ A113 ED 52            sbc hl,de
 336+ A115
 337+ A115 38 6F            jr c,Elimina_disparo_entidad
 338+ A117
 339+ A117 6B               ld l,e
 340+ A118 62               ld h,d
 341+ A119
 342+ A119 D1               pop de
 343+ A11A
 344+ A11A 7C           1 ld a,h
 345+ A11B FE 50            cp $50
 346+ A11D D8               ret c
 347+ A11E
 348+ A11E 7D               ld a,l
 349+ A11F FE C0            cp $c0
 350+ A121 D8               ret c
 351+ A122
 352+ A122              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A122              ; Así podremos comprobar si hay colisión más adelante.
 354+ A122
 355+ A122 1C               inc e
 356+ A123 1C               inc e
 357+ A124
 358+ A124 EB               ex de,hl
 359+ A125 CB C6            set 0,(hl)
 360+ A127 EB               ex de,hl
 361+ A128
 362+ A128 1D               dec e
 363+ A129 1D               dec e
 364+ A12A
 365+ A12A C9               ret
 366+ A12B
 367+ A12B              ; ----------------------------------------------------------
 368+ A12B              ;
 369+ A12B              ;   08/10/24
 370+ A12B
 371+ A12B              ;   Estructura de un disparo de entidades.
 372+ A12B
 373+ A12B              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A12B              ; 	defw 0											; Puntero de impresión.
 375+ A12B              ;	defw 0											; Control.
 376+ A12B
 377+ A12B              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A12B              ;   _de la entidad en el momento de disparar.
 379+ A12B
 380+ A12B              ;   El byte alto muestra la siguiente información:
 381+ A12B              ;
 382+ A12B              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A12B              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A12B              ;
 385+ A12B              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A12B              ;
 387+ A12B              ;                        10xx ..... Izquierda.
 388+ A12B              ;                        01xx ..... Derecha.
 389+ A12B              ;                        00xx ..... Recto.
 390+ A12B
 391+ A12B              Rota_disparo_si_procede
 392+ A12B
 393+ A12B              ;   Nos situamos en el byte alto de (Control).
 394+ A12B
 395+ A12B CB 76            bit 6,(hl)
 396+ A12D 20 2D            jr nz,Rota_a_derecha
 397+ A12F CB 7E            bit 7,(hl)
 398+ A131 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A132
 400+ A132              Rota_a_izq
 401+ A132
 402+ A132 E5               push hl
 403+ A133
 404+ A133 7D               ld a,l
 405+ A134 D6 05            sub 5
 406+ A136 6F               ld l,a
 407+ A137
 408+ A137 E5               push hl
 409+ A138 FD E1            pop iy
 410+ A13A
 411+ A13A A7               and a
 412+ A13B
 413+ A13B FD CB 02 16      rl (iy+02)
 414+ A13F FD CB 01 16      rl (iy+01)
 415+ A143 FD CB 00 16      rl (iy+00)
 416+ A147
 417+ A147 30 3B            jr nc,Exit
 418+ A149
 419+ A149              ; Desplazamiento completo hasta Carry.
 420+ A149              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A149
 422+ A149 FD 36 02 03      ld (iy+02),$03
 423+ A14D FD 36 01 00      ld (iy+01),$00
 424+ A151 FD 36 00 00      ld (iy+00),$00
 425+ A155
 426+ A155 21 76 8C         ld hl,Ctrl_5
 427+ A158 CB DE            set 3,(hl)
 428+ A15A
 429+ A15A 18 28            jr Exit
 430+ A15C
 431+ A15C              Rota_a_derecha
 432+ A15C
 433+ A15C E5               push hl
 434+ A15D
 435+ A15D 7D               ld a,l
 436+ A15E D6 05            sub 5
 437+ A160 6F               ld l,a
 438+ A161
 439+ A161 E5               push hl
 440+ A162 FD E1            pop iy
 441+ A164
 442+ A164 A7               and a
 443+ A165
 444+ A165 FD CB 00 1E      rr (iy+00)
 445+ A169 FD CB 01 1E      rr (iy+01)
 446+ A16D FD CB 02 1E      rr (iy+02)
 447+ A171
 448+ A171 30 11            jr nc,Exit
 449+ A173
 450+ A173              ; Desplazamiento completo hasta Carry.
 451+ A173              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A173
 453+ A173 FD 36 00 01      ld (iy+00),$01
 454+ A177 FD 36 01 80      ld (iy+01),$80
 455+ A17B FD 36 02 00      ld (iy+02),$00
 456+ A17F
 457+ A17F 21 76 8C         ld hl,Ctrl_5
 458+ A182 CB D6            set 2,(hl)
 459+ A184
 460+ A184 E1           Exit pop hl
 461+ A185 C9               ret
 462+ A186
 463+ A186              ; ------------ ----------- ------------
 464+ A186              ;
 465+ A186              ;   25/9/24
 466+ A186
 467+ A186              Elimina_disparo_entidad
 468+ A186
 469+ A186 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A189 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A18A
 472+ A18A E1               pop hl
 473+ A18B E5               push hl
 474+ A18C
 475+ A18C 2C               inc l
 476+ A18D 2C               inc l
 477+ A18E
 478+ A18E CD 96 A1         call Borra_6_bytes
 479+ A191
 480+ A191 D1               pop de
 481+ A192
 482+ A192 21 00 00         ld hl,0
 483+ A195
 484+ A195 C9               ret
 485+ A196
 486+ A196              ; ----- ----- ----- ----- -----
 487+ A196
 488+ A196              Borra_6_bytes
 489+ A196
 490+ A196 16 06            ld d,6                                                    ; Contador
 491+ A198 AF               xor a                                                     ; Borrador
 492+ A199 77           1 ld (hl),a
 493+ A19A 2D               dec l
 494+ A19B 15               dec d
 495+ A19C 20 FB            jr nz,1B
 496+ A19E
 497+ A19E C9               ret
 498+ A19F
 499+ A19F              ; --------------------------------------------------------------------------------------
 500+ A19F              ;
 501+ A19F              ;   12/10/24
 502+ A19F              ;
 503+ A19F
 504+ A19F              Genera_datos_de_impresion_disparos_Entidades
 505+ A19F
 506+ A19F 3E 07            ld a,7
 507+ A1A1 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A1A2
 509+ A1A2              ; ---------------
 510+ A1A2
 511+ A1A2              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A1A2
 513+ A1A2 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A1A5
 515+ A1A5 CD C3 91     1 call Extrae_address
 516+ A1A8
 517+ A1A8 13               inc de
 518+ A1A9 13               inc de
 519+ A1AA
 520+ A1AA ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A1AE
 522+ A1AE 2D               dec l
 523+ A1AF 7E               ld a,(hl)
 524+ A1B0 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A1B1 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A1B3
 527+ A1B3              ; ----- ----- ----- -----
 528+ A1B3
 529+ A1B3 2D               dec l
 530+ A1B4 CD C3 91         call Extrae_address
 531+ A1B7 E5               push hl
 532+ A1B8
 533+ A1B8 1D               dec e
 534+ A1B9
 535+ A1B9 EB               ex de,hl
 536+ A1BA
 537+ A1BA 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A1BB 2D               dec l
 539+ A1BC 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A1BD 2D               dec l
 541+ A1BE 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A1BF
 543+ A1BF E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A1C0
 545+ A1C0              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A1C0
 547+ A1C0 FD 2A 60 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A1C4 FD 73 00         ld (iy+0),e
 549+ A1C7 FD 70 01         ld (iy+1),b
 550+ A1CA FD 71 02         ld (iy+2),c
 551+ A1CD
 552+ A1CD FD 75 03         ld (iy+3),l
 553+ A1D0 FD 74 04         ld (iy+4),h
 554+ A1D3
 555+ A1D3 CD CF 9A         call NextScan
 556+ A1D6
 557+ A1D6 FD 75 05         ld (iy+5),l
 558+ A1D9 FD 74 06         ld (iy+6),h
 559+ A1DC
 560+ A1DC FD E5            push iy
 561+ A1DE E1               pop hl
 562+ A1DF
 563+ A1DF 3E 07            ld a,7
 564+ A1E1 85               add l
 565+ A1E2 6F               ld l,a
 566+ A1E3
 567+ A1E3 22 60 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A1E6
 569+ A1E6              ; ----- ----- ----- -----
 570+ A1E6
 571+ A1E6              Situa_en_siguiente_caja
 572+ A1E6
 573+ A1E6 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A1E7 3D               dec a
 575+ A1E8 C8               ret z
 576+ A1E9
 577+ A1E9 08               ex af,af
 578+ A1EA 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A1ED 18 B6            jr 1B
 580+ A1EF
 581+ A1EF              ; --------------------------------------------------------------------------------------
 582+ A1EF              ;
 583+ A1EF              ;   12/10/24
 584+ A1EF              ;
 585+ A1EF
 586+ A1EF              Genera_disparo_de_entidad_maldosa
 587+ A1EF
 588+ A1EF              ;   Estructura de un disparo de entidades.
 589+ A1EF
 590+ A1EF              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A1EF              ; 	defw 0											; Puntero de impresión.
 592+ A1EF              ;	defw 0											; Control.
 593+ A1EF
 594+ A1EF              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A1EF              ;   _de la entidad en el momento de disparar.
 596+ A1EF
 597+ A1EF              ;   El byte de control muestra la siguiente información:
 598+ A1EF
 599+ A1EF              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A1EF              ;
 601+ A1EF              ;                        10xx ..... Izquierda.
 602+ A1EF              ;                        01xx ..... Derecha.
 603+ A1EF              ;                        00xx ..... Recto.
 604+ A1EF
 605+ A1EF              ;*  Exclusiones.
 606+ A1EF
 607+ A1EF              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A1EF              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A1EF
 610+ A1EF 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A1F2 A7               and a
 612+ A1F3 C8               ret z
 613+ A1F4
 614+ A1F4 3A FF 8B         ld a,(Coordenada_y)
 615+ A1F7 A7               and a
 616+ A1F8 C8               ret z
 617+ A1F9
 618+ A1F9 3D               dec a
 619+ A1FA C8               ret z
 620+ A1FB
 621+ A1FB FE 10            cp 16
 622+ A1FD D0               ret nc
 623+ A1FE
 624+ A1FE              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A1FE              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A1FE              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A1FE
 628+ A1FE 21 66 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A201 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A202
 631+ A202              ;   Decrementa el numero de disparos de entidades.
 632+ A202
 633+ A202 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A205 35               dec (hl)
 635+ A206
 636+ A206 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A209
 638+ A209 CD C3 91     1 call Extrae_address
 639+ A20C
 640+ A20C 13               inc de
 641+ A20D 13               inc de
 642+ A20E
 643+ A20E ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A212
 645+ A212              ;   Comprobamos si la caja está vacía.
 646+ A212
 647+ A212 2D               dec l
 648+ A213 7E               ld a,(hl)
 649+ A214 A7               and a
 650+ A215 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A217 2C               inc l
 652+ A218
 653+ A218              ;   Caja vacía, vamos a generar un disparo.
 654+ A218              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A218
 656+ A218 CD 39 A2         call Genera_byte_inclinacion
 657+ A21B
 658+ A21B 7E               ld a,(hl)
 659+ A21C 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A21D
 661+ A21D 2D               dec l
 662+ A21E
 663+ A21E CD 55 A2         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A221
 665+ A221 70               ld (hl),b
 666+ A222 2D               dec l
 667+ A223 71               ld (hl),c
 668+ A224
 669+ A224 2D               dec l
 670+ A225
 671+ A225              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A225
 673+ A225 FD 7E 02         ld a,(iy+02)
 674+ A228 77               ld (hl),a
 675+ A229 2D               dec l
 676+ A22A
 677+ A22A FD 7E 01         ld a,(iy+01)
 678+ A22D 77               ld (hl),a
 679+ A22E 2D               dec l
 680+ A22F
 681+ A22F FD 7E 00         ld a,(iy+00)
 682+ A232 77               ld (hl),a
 683+ A233
 684+ A233 C9               ret
 685+ A234
 686+ A234              ;   --- --- ---
 687+ A234
 688+ A234              Situa_en_siguiente_disparo
 689+ A234
 690+ A234 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A237 18 D0            jr 1B
 692+ A239
 693+ A239              ; --------------------------------------------------------------------------------------
 694+ A239              ;
 695+ A239              ;   09/10/24
 696+ A239              ;
 697+ A239
 698+ A239              Genera_byte_inclinacion
 699+ A239
 700+ A239              ; Determina tendencia del disparo.
 701+ A239
 702+ A239 3A AF 89         ld a,(CX_Amadeus)
 703+ A23C 47               ld b,a
 704+ A23D 3A FE 8B         ld a,(Coordenada_X)
 705+ A240 90               sub b
 706+ A241 38 07            jr c,Disparo_a_derecha
 707+ A243
 708+ A243 FE 06        Disparo_a_izquierda cp 6
 709+ A245
 710+ A245 D8               ret c
 711+ A246 C8               ret z
 712+ A247
 713+ A247 CB FE            set 7,(hl)
 714+ A249 C9               ret
 715+ A24A
 716+ A24A 47           Disparo_a_derecha ld b,a
 717+ A24B 3E FF            ld a,$ff
 718+ A24D 90               sub b
 719+ A24E
 720+ A24E FE 05            cp 5
 721+ A250
 722+ A250 D8               ret c
 723+ A251 C8               ret z
 724+ A252
 725+ A252 CB F6            set 6,(hl)
 726+ A254 C9               ret
 727+ A255
 728+ A255              ; --------------------------------------------------------------------------------------
 729+ A255              ;
 730+ A255              ;   09/10/24
 731+ A255              ;
 732+ A255
 733+ A255              Modifica_puntero_de_impresion
 734+ A255
 735+ A255              ;   Puntero de impresión del disparo en BC.
 736+ A255
 737+ A255 E5               push hl
 738+ A256
 739+ A256 2A 79 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A259 CD CF 9A         call NextScan
 741+ A25C
 742+ A25C 4D               ld c,l
 743+ A25D 44               ld b,h
 744+ A25E
 745+ A25E E1               pop hl
 746+ A25F
 747+ A25F 08               ex af,af
 748+ A260 CB 77            bit 6,a
 749+ A262 28 06            jr z,1F
 750+ A264
 751+ A264 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A268 0C               inc c
 753+ A269 C9               ret
 754+ A26A
 755+ A26A CB 7F        1 bit 7,a
 756+ A26C 28 F6            jr z,2B
 757+ A26E
 758+ A26E FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A272 0D               dec c
 760+ A273
 761+ A273 C9               ret
 762+ A274
 763+ A274              ; --------------------------------------------------------------------------------------
 764+ A274              ;
 765+ A274              ;   28/11/24
 766+ A274              ;
 767+ A274
 768+ A274              Compara_con_coordenadas_de_disparo
 769+ A274
 770+ A274 DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A277 47               ld b,a
 772+ A278 3A 7E 8C         ld a,(Coordenadas_disparo_certero)
 773+ A27B 90               sub b
 774+ A27C
 775+ A27C              ; A = "0" ok
 776+ A27C              ; A = "1" ok
 777+ A27C
 778+ A27C 28 08            jr z,Comprueba_coordenada_X
 779+ A27E 3D               dec a
 780+ A27F 28 05            jr z,Comprueba_coordenada_X
 781+ A281
 782+ A281              ; A = "$ff" ok
 783+ A281
 784+ A281 FE FE            cp $fe
 785+ A283 28 01            jr z,Comprueba_coordenada_X
 786+ A285
 787+ A285 C9               ret
 788+ A286
 789+ A286              Comprueba_coordenada_X
 790+ A286
 791+ A286 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A289 47               ld b,a
 793+ A28A 21 7F 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A28D 7E               ld a,(hl)
 795+ A28E 90               sub b
 796+ A28F
 797+ A28F              ; A = "0" ok
 798+ A28F              ; A = "1" ok
 799+ A28F
 800+ A28F 28 09            jr z,Activa_Impacto_en_entidad
 801+ A291 3D               dec a
 802+ A292 28 06            jr z,Activa_Impacto_en_entidad
 803+ A294
 804+ A294              ; A = "2" ok
 805+ A294
 806+ A294 3D               dec a
 807+ A295 28 03            jr z,Activa_Impacto_en_entidad
 808+ A297
 809+ A297              ; A = "$ff"
 810+ A297
 811+ A297 FE FD            cp $fd
 812+ A299 C0               ret nz
 813+ A29A
 814+ A29A              Activa_Impacto_en_entidad
 815+ A29A
 816+ A29A              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A29A
 818+ A29A 3E 02            ld a,2
 819+ A29C DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A29F
 821+ A29F              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A29F
 823+ A29F 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A2A2
 825+ A2A2 DD 73 07         ld (ix+7),e
 826+ A2A5 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A2A8
 828+ A2A8              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A2A8
 830+ A2A8 21 7B 8C         ld hl,Impacto2
 831+ A2AB CB 9E            res 3,(hl)
 832+ A2AD
 833+ A2AD C9               ret
 834+ A2AE
 835+ A2AE              ; --------------------------------------------------------------------------------------
 836+ A2AE              ;
 837+ A2AE              ;   13/10/24
 838+ A2AE              ;
 839+ A2AE
 840+ A2AE              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A2AE
 842+ A2AE              Limpia_album_de_pintado_disparos_Amadeus
 843+ A2AE
 844+ A2AE 2A 58 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A2B1 06 06            ld b,6
 846+ A2B3 AF               xor a
 847+ A2B4 77           1 ld (hl),a
 848+ A2B5 2C               inc l
 849+ A2B6 10 FC            djnz 1B
 850+ A2B8
 851+ A2B8 C9               ret
 852+ A2B9
 853+ A2B9              ; --------------------------------------------------------------------------------------
 854+ A2B9              ;
 855+ A2B9              ;   29/09/24
 856+ A2B9              ;
 857+ A2B9
 858+ A2B9              Calcula_bytes_pintado_disparos
 859+ A2B9
 860+ A2B9 2A 5C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A2BC 45               ld b,l
 862+ A2BD 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A2C0 7D               ld a,l
 864+ A2C1
 865+ A2C1 90               sub b
 866+ A2C2 32 62 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A2C5
 868+ A2C5 C9               ret
 869+ A2C6
 870+ A2C6              ; --------------------------------------------------------------------------------------
 871+ A2C6              ;
 872+ A2C6              ;   26/10/24
 873+ A2C6              ;
 874+ A2C6              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A2C6              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A2C6              ;   _disparos que el álbum del FRAME actual).
 877+ A2C6
 878+ A2C6              Limpia_album_de_pintado_disparos_entidades
 879+ A2C6
 880+ A2C6 21 63 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A2C9 7E               ld a,(hl)
 882+ A2CA 2D               dec l
 883+ A2CB 46               ld b,(hl)
 884+ A2CC 90               sub b
 885+ A2CD
 886+ A2CD D8               ret c
 887+ A2CE C8               ret z
 888+ A2CF
 889+ A2CF F5               push af
 890+ A2D0 80               add b
 891+ A2D1 77               ld (hl),a
 892+ A2D2 F1               pop af
 893+ A2D3
 894+ A2D3              ; Clean.
 895+ A2D3
 896+ A2D3 47           2 ld b,a
 897+ A2D4 AF               xor a
 898+ A2D5 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A2D8 77           1 ld (hl),a
 900+ A2D9 23               inc hl
 901+ A2DA 10 FC            djnz 1B
 902+ A2DC
 903+ A2DC C9               ret
 904+ A2DD
 905+ A2DD              ; --------------------------------------------------------------------------------------
 906+ A2DD              ;
 907+ A2DD              ;   29/09/24
 908+ A2DD              ;
 909+ A2DD
 910+ A2DD              Motor_Disparos_Amadeus
 911+ A2DD
 912+ A2DD 21 1D 89         ld hl,Disparo_Amad+1
 913+ A2E0
 914+ A2E0 34               inc (hl)
 915+ A2E1 35               dec (hl)
 916+ A2E2
 917+ A2E2 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A2E3
 919+ A2E3              ;   Esta caja contiene un disparo.
 920+ A2E3
 921+ A2E3 CD EA A2         call Consulta_Impacto
 922+ A2E6 CC 03 A3         call z,Mueve_disparo_Amadeus
 923+ A2E9
 924+ A2E9 C9               ret
 925+ A2EA
 926+ A2EA              ; ----------------------
 927+ A2EA              ;
 928+ A2EA              ;
 929+ A2EA              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A2EA              ;
 931+ A2EA              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A2EA
 933+ A2EA
 934+ A2EA              Consulta_Impacto
 935+ A2EA
 936+ A2EA              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A2EA              ;   _sea lo más coherente posible.
 938+ A2EA
 939+ A2EA E5               push hl
 940+ A2EB 2B               dec hl
 941+ A2EC CD DF A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A2EF E1               pop hl
 943+ A2F0 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A2F1
 945+ A2F1 C8               ret z
 946+ A2F2
 947+ A2F2 3A 7B 8C         ld a,(Impacto2)
 948+ A2F5 CB DF            set 3,a
 949+ A2F7 32 7B 8C         ld (Impacto2),a
 950+ A2FA
 951+ A2FA E5               push hl
 952+ A2FB CD CC A3         call Genera_coordenadas_de_disparo_Amadeus
 953+ A2FE E1               pop hl
 954+ A2FF CD 1C A3         call Elimina_disparo_Amadeus
 955+ A302
 956+ A302 C9               ret
 957+ A303
 958+ A303              ; ----------------------
 959+ A303              ;
 960+ A303              ;
 961+ A303              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A303
 963+ A303              Mueve_disparo_Amadeus
 964+ A303
 965+ A303 CD C3 91         call Extrae_address
 966+ A306
 967+ A306 CD DE 9A         call PreviousScan
 968+ A309 CD DE 9A         call PreviousScan
 969+ A30C CD DE 9A         call PreviousScan
 970+ A30F CD DE 9A         call PreviousScan
 971+ A312
 972+ A312              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A312
 974+ A312 7C               ld a,h
 975+ A313 D6 40            sub $40
 976+ A315 EB               ex de,hl
 977+ A316 38 04            jr c,Elimina_disparo_Amadeus
 978+ A318
 979+ A318               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A318
 981+ A318 73               ld (hl),e
 982+ A319 23               inc hl
 983+ A31A 72               ld (hl),d
 984+ A31B
 985+ A31B C9               ret
 986+ A31C
 987+ A31C              ; ----------------------
 988+ A31C              ;
 989+ A31C              ;   29/9/24
 990+ A31C
 991+ A31C              Elimina_disparo_Amadeus
 992+ A31C
 993+ A31C              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A31C              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A31C
 996+ A31C              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A31C              ;   	defw 0											; Puntero de impresión.
 998+ A31C
 999+ A31C 2B               dec hl
1000+ A31D 2B               dec hl
1001+ A31E
1002+ A31E AF               xor a
1003+ A31F 77               ld (hl),a
1004+ A320 23               inc hl
1005+ A321 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A322
1007+ A322 23               inc hl
1008+ A323 77               ld (hl),a
1009+ A324 23               inc hl
1010+ A325 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A326
1012+ A326 3E 01            ld a,1
1013+ A328 32 65 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A32B
1015+ A32B CD AE A2         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A32E
1017+ A32E AF               xor a
1018+ A32F 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A330
1020+ A330 C9               ret
1021+ A331
1022+ A331              ; --------------------------------------------------------------------------------------
1023+ A331              ;
1024+ A331              ;   13/10/24
1025+ A331              ;
1026+ A331
1027+ A331              Pinta_disparos_Amadeus
1028+ A331
1029+ A331 06 02            ld b,2
1030+ A333 ED 73 4C 8C      ld (Stack),sp
1031+ A337 ED 7B 5A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A33B D1           3 pop de
1033+ A33C 14               inc d
1034+ A33D 15               dec d
1035+ A33E 28 1C            jr z,1F
1036+ A340 E1               pop hl
1037+ A341
1038+ A341              Imprime_scanlines_en_pantalla
1039+ A341
1040+ A341              ; 1er scanline
1041+ A341
1042+ A341 1A               ld a,(de)
1043+ A342 AE               xor (hl)
1044+ A343 77               ld (hl),a
1045+ A344
1046+ A344 1C               inc e
1047+ A345 2C               inc l
1048+ A346
1049+ A346 1A               ld a,(de)
1050+ A347 AE               xor (hl)
1051+ A348 77               ld (hl),a
1052+ A349
1053+ A349 1D               dec e
1054+ A34A E1               pop hl
1055+ A34B
1056+ A34B              ; 2º scanline
1057+ A34B
1058+ A34B 1A               ld a,(de)
1059+ A34C AE               xor (hl)
1060+ A34D 77               ld (hl),a
1061+ A34E
1062+ A34E 1C               inc e
1063+ A34F 2C               inc l
1064+ A350
1065+ A350 1A               ld a,(de)
1066+ A351 AE               xor (hl)
1067+ A352 77               ld (hl),a
1068+ A353
1069+ A353 1D               dec e
1070+ A354
1071+ A354 18 06            jr 1F
1072+ A356
1073+ A356 ED 7B 58 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A35A 18 DF            jr 3B
1075+ A35C 10 F8        1 djnz 2B
1076+ A35E ED 7B 4C 8C      ld sp,(Stack)
1077+ A362 C9               ret
1078+ A363
1079+ A363              ; --------------------------------------------------------------------------------------
1080+ A363              ;
1081+ A363              ;   13/10/24
1082+ A363              ;
1083+ A363              ;   Modifica: HL,BC y DE.
1084+ A363
1085+ A363
1086+ A363              Genera_datos_de_impresion_disparos_Amadeus
1087+ A363
1088+ A363 ED 73 4C 8C      ld (Stack),sp
1089+ A367 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A36A D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A36B
1092+ A36B 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A36C 15               dec d
1094+ A36D
1095+ A36D 28 0E            jr z,Salida
1096+ A36F
1097+ A36F              Genera_scanlines_de_disparo_Amadeus
1098+ A36F
1099+ A36F E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A370              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A370 ED 7B 58 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A374
1103+ A374 C1               pop bc
1104+ A375 C1               pop bc
1105+ A376 C1               pop bc
1106+ A377
1107+ A377 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A378 CD DE 9A         call PreviousScan
1109+ A37B E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A37C D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A37D
1112+ A37D              Salida
1113+ A37D
1114+ A37D ED 7B 4C 8C      ld sp,(Stack)
1115+ A381
1116+ A381 C9               ret
1117+ A382
1118+ A382              ; --------------------------------------------------------------------------------------
1119+ A382              ;
1120+ A382              ;   12/09/24
1121+ A382              ;
1122+ A382
1123+ A382              Genera_disparo_Amadeus
1124+ A382
1125+ A382              ;*  Exclusiones.
1126+ A382
1127+ A382 3A 65 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A385 A7               and a
1129+ A386 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A387
1131+ A387 3D               dec a
1132+ A388 32 65 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A38B
1134+ A38B              Define_puntero_objeto_disparo
1135+ A38B
1136+ A38B              ;   Inicializamos contador.
1137+ A38B
1138+ A38B 06 00            ld b,0
1139+ A38D
1140+ A38D 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A390 2C               inc l
1142+ A391
1143+ A391 3E 80            ld a,$80
1144+ A393 BE               cp (hl)
1145+ A394 28 0D            jr z,1F
1146+ A396
1147+ A396 04               inc b
1148+ A397
1149+ A397 3E 60            ld a,$60
1150+ A399 BE               cp (hl)
1151+ A39A 28 07            jr z,1F
1152+ A39C
1153+ A39C
1154+ A39C 04               inc b
1155+ A39D
1156+ A39D 3E 18            ld a,$18
1157+ A39F BE               cp (hl)
1158+ A3A0 28 01            jr z,1F
1159+ A3A2
1160+ A3A2 04               inc b
1161+ A3A3
1162+ A3A3              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A3A3
1164+ A3A3              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A3A3
1166+ A3A3 CD DE 9A     1 call PreviousScan
1167+ A3A6
1168+ A3A6 78               ld a,b
1169+ A3A7 CB 3F            srl a
1170+ A3A9 28 03            jr z,4F
1171+ A3AB
1172+ A3AB              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A3AB E5               push hl
1174+ A3AC 18 02            jr 5F
1175+ A3AE 2D           4 dec l
1176+ A3AF E5               push hl
1177+ A3B0              ; ---
1178+ A3B0
1179+ A3B0              ;   Calcula el Puntero_objeto del disparo.
1180+ A3B0
1181+ A3B0 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A3B3 04               inc b
1183+ A3B4 05               dec b
1184+ A3B5 28 04            jr z,2F
1185+ A3B7
1186+ A3B7              ;   Nos desplazamos por el índice de disparos.
1187+ A3B7
1188+ A3B7 2C           3 inc l
1189+ A3B8 2C               inc l
1190+ A3B9 10 FC            djnz 3B
1191+ A3BB
1192+ A3BB              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A3BB CD C3 91     2 call Extrae_address
1194+ A3BE E5               push hl
1195+ A3BF              ; ---
1196+ A3BF
1197+ A3BF              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A3BF              ; HL en el 1er .db de la caja.
1199+ A3BF
1200+ A3BF 21 1C 89         ld hl,Disparo_Amad
1201+ A3C2
1202+ A3C2 06 02            ld b,2
1203+ A3C4
1204+ A3C4 D1           6 pop de
1205+ A3C5 73               ld (hl),e
1206+ A3C6 23               inc hl
1207+ A3C7 72               ld (hl),d
1208+ A3C8 23               inc hl
1209+ A3C9
1210+ A3C9 10 F9            djnz 6B
1211+ A3CB
1212+ A3CB C9               ret
1213+ A3CC
1214+ A3CC              Genera_coordenadas_de_disparo_Amadeus
1215+ A3CC
1216+ A3CC              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A3CC              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A3CC              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A3CC
1220+ A3CC CD C3 91         call Extrae_address
1221+ A3CF CD DA 95         call Genera_coordenadas
1222+ A3D2
1223+ A3D2 3D               dec a
1224+ A3D3
1225+ A3D3 21 7E 8C         ld hl,Coordenadas_disparo_certero
1226+ A3D6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A3D7 23               inc hl
1228+ A3D8 3A FE 8B         ld a,(Coordenada_X)
1229+ A3DB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A3DC
1231+ A3DC AF               xor a
1232+ A3DD 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A3DE
1234+ A3DE C9               ret
1235+ A3DF
1236+ A3DF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A3DF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A3DF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A3DF
1240+ A3DF              ; ----------------------------------------------
1241+ A3DF              ;
1242+ A3DF              ;   27/08/24
1243+ A3DF              ;
1244+ A3DF              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A3DF              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A3DF
1247+ A3DF              Detecta_impacto_en_disparo_de_Amadeus
1248+ A3DF
1249+ A3DF              Extraccion_de_datos
1250+ A3DF
1251+ A3DF 13               inc de
1252+ A3E0 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A3E1
1254+ A3E1 5E               ld e,(hl)
1255+ A3E2 23               inc hl
1256+ A3E3 56               ld d,(hl)
1257+ A3E4
1258+ A3E4 23               inc hl
1259+ A3E5
1260+ A3E5 4E               ld c,(hl)
1261+ A3E6 23               inc hl
1262+ A3E7 46               ld b,(hl)
1263+ A3E8
1264+ A3E8 C5               push bc
1265+ A3E9 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A3EA
1267+ A3EA              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A3EA
1269+ A3EA CD DE 9A         call PreviousScan
1270+ A3ED CD DE 9A         call PreviousScan
1271+ A3F0
1272+ A3F0              Detecta_impacto_
1273+ A3F0
1274+ A3F0 1A               ld a,(de)
1275+ A3F1 A6               and (hl)
1276+ A3F2 C0               ret nz
1277+ A3F3
1278+ A3F3 13               inc de
1279+ A3F4 23               inc hl
1280+ A3F5
1281+ A3F5 1A               ld a,(de)
1282+ A3F6 A6               and (hl)
1283+ A3F7 C9               ret
1284+ A3F8
1285+ A3F8              ; -------------------------------------------------------------------------------------------------------------
1286+ A3F8              ;
1287+ A3F8              ;   25/11//24
1288+ A3F8              ;
1289+ A3F8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A3F8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A3F8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A3F8              ;
1293+ A3F8              ;   MODIFICA: HL,DE,BC y A.
1294+ A3F8              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A3F8              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A3F8
1297+ A3F8              Colision_Entidad_Amadeus
1298+ A3F8
1299+ A3F8              ; Posible contacto de entidad con Amadeus. ?????
1300+ A3F8
1301+ A3F8              ; Exclusiones:
1302+ A3F8
1303+ A3F8 3A 9D 8C         ld a,(Shield)
1304+ A3FB A7               and a
1305+ A3FC C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A3FD
1307+ A3FD 21 74 8C         ld hl,Ctrl_3
1308+ A400 CB 76            bit 6,(hl)
1309+ A402 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A403
1311+ A403 21 7B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A406 CB 56            bit 2,(hl)
1313+ A408 C0               ret nz
1314+ A409
1315+ A409 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A40C FE 14        	cp $14
1317+ A40E D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A40F
1319+ A40F 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A412 A7               and a
1321+ A413 C0               ret nz
1322+ A414
1323+ A414              Genera_coordenadas_X
1324+ A414
1325+ A414              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A414              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A414
1328+ A414              ;   Limpiamos almacenes.
1329+ A414
1330+ A414              ;    call Limpia_Coordenadas_X
1331+ A414
1332+ A414              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A414
1334+ A414 21 80 8C         ld hl,Coordenadas_X_Entidad
1335+ A417 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A41A CD 40 A4         call Guarda_coordenadas_X
1337+ A41D
1338+ A41D              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A41D
1340+ A41D 3A AF 89         ld a,(CX_Amadeus)
1341+ A420 CD 40 A4         call Guarda_coordenadas_X
1342+ A423
1343+ A423 DD E5            push ix
1344+ A425 CD 54 A4         call Compara_coordenadas_X
1345+ A428 DD E1            pop ix
1346+ A42A
1347+ A42A C0               ret nz
1348+ A42B
1349+ A42B 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A42D DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A430
1352+ A430 DD 7D            ld a,ixl
1353+ A432 C6 04            add 4
1354+ A434 DD 6F            ld ixl,a
1355+ A436
1356+ A436 DD 22 7C 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A43A
1358+ A43A 21 7B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A43D CB D6            set 2,(hl)
1360+ A43F
1361+ A43F C9               ret
1362+ A440
1363+ A440               ; ----- ----- ----- ----- -----
1364+ A440
1365+ A440 77           Guarda_coordenadas_X ld (hl),a
1366+ A441 3C               inc a
1367+ A442 2C               inc l
1368+ A443 77               ld (hl),a
1369+ A444 3C               inc a
1370+ A445 2C               inc l
1371+ A446 77               ld (hl),a
1372+ A447 2C               inc l
1373+ A448 C9               ret
1374+ A449
1375+ A449 AF           Limpia_Coordenadas_X xor a
1376+ A44A 06 06            ld b,6
1377+ A44C 21 83 8C         ld hl,Coordenadas_X_Amadeus
1378+ A44F 77           1 ld (hl),a
1379+ A450 23               inc hl
1380+ A451 10 FC            djnz 1B
1381+ A453 C9               ret
1382+ A454
1383+ A454              ; ----- ----- ----- ----- -----
1384+ A454
1385+ A454              Compara_coordenadas_X
1386+ A454
1387+ A454 DD 21 80 8C      ld ix,Coordenadas_X_Entidad
1388+ A458 DD 7E 00         ld a,(ix+0)
1389+ A45B CD 69 A4         call Comparando
1390+ A45E C8               ret z
1391+ A45F
1392+ A45F 3C               inc a
1393+ A460 CD 78 A4         call Comparando_1
1394+ A463 C8               ret z
1395+ A464
1396+ A464 3C               inc a
1397+ A465 CD 78 A4         call Comparando_1
1398+ A468 C9               ret
1399+ A469
1400+ A469              ; ----- ----- ----- ----- -----
1401+ A469              ;
1402+ A469              ;   4/12/23
1403+ A469              ;
1404+ A469              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A469
1406+ A469              Comparando
1407+ A469
1408+ A469 DD 2C            inc ixl
1409+ A46B DD 2C            inc ixl
1410+ A46D DD 2C            inc ixl
1411+ A46F
1412+ A46F DD 46 00         ld b,(ix+0)
1413+ A472 DD 4E 01         ld c,(ix+1)
1414+ A475 DD 56 02         ld d,(ix+2)
1415+ A478
1416+ A478 B8           Comparando_1 cp b
1417+ A479 C8               ret z
1418+ A47A B9               cp c
1419+ A47B C8               ret z
1420+ A47C BA               cp d
1421+ A47D C9               ret
1422+ A47E
1423+ A47E              ; -----------------------------------------------------------------------
1424+ A47E              ;
1425+ A47E              ;   04/7/24
1426+ A47E              ;
1427+ A47E
1428+ A47E              Detecta_colision_nave_entidad
1429+ A47E
1430+ A47E              ; Exclusiones:
1431+ A47E
1432+ A47E              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A47E
1434+ A47E 21 7B 8C     	ld hl,Impacto2
1435+ A481 CB 56        	bit 2,(hl)
1436+ A483 C8           	ret z
1437+ A484
1438+ A484              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A484
1440+ A484 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A487 CD C3 91         call Extrae_address
1442+ A48A 54               ld d,h
1443+ A48B 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A48C
1445+ A48C 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A48F 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A491 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A494
1449+ A494 C5           1 push bc
1450+ A495 06 03            ld b,3
1451+ A497 E5               push hl
1452+ A498
1453+ A498              ; .db
1454+ A498
1455+ A498 1A           3 ld a,(de)
1456+ A499 A7               and a
1457+ A49A 20 03            jr nz,4F
1458+ A49C
1459+ A49C 2C               inc l
1460+ A49D 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A49F
1462+ A49F ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A4A1 28 04            jr z,2F
1464+ A4A3
1465+ A4A3              ; Impacto.
1466+ A4A3 FD 2D            dec iyl
1467+ A4A5 28 22            jr z,5F
1468+ A4A7
1469+ A4A7 1C           2 inc e
1470+ A4A8 10 EE            djnz 3B
1471+ A4AA
1472+ A4AA E1               pop hl
1473+ A4AB
1474+ A4AB              ; Hay salto de línea en el puntero de impresión ???
1475+ A4AB
1476+ A4AB 7C               ld a,h
1477+ A4AC D6 57            sub $57
1478+ A4AE 20 0A            jr nz,6F
1479+ A4B0
1480+ A4B0              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A4B0
1482+ A4B0 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A4B3 3E 20            ld a,$20
1484+ A4B5 A7               and a
1485+ A4B6 85               add l
1486+ A4B7 6F               ld l,a
1487+ A4B8 18 01            jr 7F
1488+ A4BA
1489+ A4BA 24           6 inc h
1490+ A4BB
1491+ A4BB C1           7 pop bc
1492+ A4BC 10 D6            djnz 1B
1493+ A4BE
1494+ A4BE              ;   Fin de la comparativa.
1495+ A4BE
1496+ A4BE              ;   NO HAY COLISIÓN !!!!!.
1497+ A4BE              ;
1498+ A4BE              ;   .db (Impacto) de Amadeus a "0".
1499+ A4BE              ;   RES el bit2 de (Impacto2).
1500+ A4BE              ;
1501+ A4BE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A4BE              ;   Lo colocamos a "0".
1503+ A4BE
1504+ A4BE 21 7B 8C         ld hl,Impacto2
1505+ A4C1 CB 96            res 2,(hl)
1506+ A4C3 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A4C6 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A4C8 C9               ret
1509+ A4C9
1510+ A4C9              ;   COLISIÓN !!!!!.
1511+ A4C9              ;
1512+ A4C9              ;   .db (Impacto) de Amadeus a "1".
1513+ A4C9              ;   SET el bit3 de (Impacto2).
1514+ A4C9              ;
1515+ A4C9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A4C9
1517+ A4C9 E1           5 pop hl
1518+ A4CA C1               pop bc
1519+ A4CB
1520+ A4CB 21 B2 89         ld hl,Impacto_Amadeus
1521+ A4CE 36 01            ld (hl),1
1522+ A4D0 21 7B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A4D3 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A4D5
1525+ A4D5 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A4D8 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A4DB
1528+ A4DB 23               inc hl
1529+ A4DC 23               inc hl
1530+ A4DD 23               inc hl
1531+ A4DE
1532+ A4DE 73               ld (hl),e
1533+ A4DF 23               inc hl
1534+ A4E0 72               ld (hl),d
1535+ A4E1
1536+ A4E1              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A4E1
1538+ A4E1 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A4E4 21 B5 89         ld hl,Pamm_Amadeus
1540+ A4E7
1541+ A4E7 73               ld (hl),e
1542+ A4E8 23               inc hl
1543+ A4E9 72               ld (hl),d
1544+ A4EA
1545+ A4EA C9               ret
1546+ A4EB
1547+ A4EB
1548+ A4EB
# file closed: Disparo.asm
2371  A4EB
2372  A4EB              	SAVESNA "Pruebas.sna", START
2373  A4EB
2374  A4EB
2375  A4EB
2376  A4EB
# file closed: Banco_de_pruebas.asm
